[0m14:31:06.340371 [debug] [ThreadPool]: Using snowflake connection "list_EIO_INGEST_USER_RAVINDA_TENROX_TRANSFORM"
[0m14:31:06.340492 [debug] [ThreadPool]: On list_EIO_INGEST_TENROX_TRANSFORM: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "connection_name": "list_EIO_INGEST_TENROX_TRANSFORM"} */
show terse objects in EIO_INGEST.TENROX_TRANSFORM
[0m14:31:06.346843 [debug] [ThreadPool]: On list_EIO_INGEST_USER_RAVINDA_TENROX_TRANSFORM: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "connection_name": "list_EIO_INGEST_USER_RAVINDA_TENROX_TRANSFORM"} */
show terse objects in EIO_INGEST.USER_RAVINDA_TENROX_TRANSFORM
[0m14:31:06.346991 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:31:06.347094 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m14:31:07.245408 [debug] [ThreadPool]: SQL status: SUCCESS 50 in 1 seconds
[0m14:31:07.246749 [debug] [ThreadPool]: On list_EIO_INGEST_USER_RAVINDA_TENROX_TRANSFORM: Close
[0m14:31:07.318858 [debug] [ThreadPool]: SQL status: SUCCESS 172 in 1 seconds
[0m14:31:07.321532 [debug] [ThreadPool]: On list_EIO_INGEST_TENROX_TRANSFORM: Close
[0m14:31:07.615450 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '7de3e750-9bb7-40b5-91b3-4fdbb1729483', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x142f7b4d0>]}
[0m14:31:07.615729 [info ] [MainThread]: 
[0m14:31:07.615880 [info ] [MainThread]: Running 1 on-run-start hook
[0m14:31:07.621225 [debug] [MainThread]: Writing injected SQL for node "operation.elementary.elementary-on-run-start-0"
[0m14:31:07.629326 [info ] [MainThread]: 1 of 1 START hook: elementary.on-run-start.0 ................................... [RUN]
[0m14:31:07.629597 [info ] [MainThread]: 1 of 1 OK hook: elementary.on-run-start.0 ...................................... [[32mOK[0m in 0.00s]
[0m14:31:07.629717 [info ] [MainThread]: 
[0m14:31:07.630021 [info ] [MainThread]: Concurrency: 3 threads (target='stg')
[0m14:31:07.630126 [info ] [MainThread]: 
[0m14:31:07.639070 [debug] [Thread-1 (]: Began running node model.my_dbt_projects.project_forecast_stacked_transform
[0m14:31:07.639287 [info ] [Thread-1 (]: 1 of 1 START sql view model USER_RAVINDA_TENROX_TRANSFORM.project_forecast_stacked_transform  [RUN]
[0m14:31:07.639600 [debug] [Thread-1 (]: Acquiring new snowflake connection 'model.my_dbt_projects.project_forecast_stacked_transform'
[0m14:31:07.639704 [debug] [Thread-1 (]: Began compiling node model.my_dbt_projects.project_forecast_stacked_transform
[0m14:31:07.644076 [debug] [Thread-1 (]: Writing injected SQL for node "model.my_dbt_projects.project_forecast_stacked_transform"
[0m14:31:07.651386 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.project_forecast_stacked_transform (compile): 2023-08-21 14:31:07.639795 => 2023-08-21 14:31:07.651327
[0m14:31:07.651561 [debug] [Thread-1 (]: Began executing node model.my_dbt_projects.project_forecast_stacked_transform
[0m14:31:07.660541 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.project_forecast_stacked_transform"
[0m14:31:07.660727 [debug] [Thread-1 (]: On model.my_dbt_projects.project_forecast_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.project_forecast_stacked_transform"} */
USE SECONDARY ROLE ALL
[0m14:31:07.660816 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:31:08.366532 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:31:08.371655 [debug] [Thread-1 (]: Writing runtime sql for node "model.my_dbt_projects.project_forecast_stacked_transform"
[0m14:31:08.379168 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.project_forecast_stacked_transform"
[0m14:31:08.379275 [debug] [Thread-1 (]: On model.my_dbt_projects.project_forecast_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.project_forecast_stacked_transform"} */
create or replace   view EIO_INGEST.USER_RAVINDA_TENROX_TRANSFORM.project_forecast_stacked_transform
  
   as (
    WITH tproject AS (
	SELECT
	*
	FROM
	EIO_PUBLISH.TENROX_PRIVATE.TPROJECT
),

tworkflowmap AS 
(
    SELECT
    *
    FROM
    EIO_PUBLISH.TENROX_PRIVATE.TWORKFLOWMAP

),

adsk_fn_cm_project_details AS 
(
    SELECT
    *
    FROM
    eio_ingest.tenrox_transform.adsk_cm_project_details 
),

tprojectcustfld_view AS
(
    SELECT
    *
    FROM
    eio_ingest.tenrox_transform.tprojectcustfld_view
),

adsk_fn_cm_project_budget AS
(
    SELECT
    *
    FROM
    eio_ingest.tenrox_transform.adsk_cm_project_budget_local_cur
),

quarter_dates AS
(
  WITH date_series AS (
    SELECT
        DATEADD(QUARTER, ROW_NUMBER() OVER (ORDER BY NULL) - 1, '2013-02-01') AS dt
    FROM
        TABLE(GENERATOR(ROWCOUNT => 55))-- Adjust the number of quarters as needed
)

-- Select quarter start dates
SELECT
    CAST(dt AS DATE) AS dt
FROM
    date_series
),


adsk_fn_cm_labor_hrs_v02 AS
(
    SELECT
    *
    FROM
    eio_ingest.tenrox_transform.adsk_cm_labor_hrs_v02_stacked
),

adsk_fn_cm_deffered_rev AS
(
SELECT
 *
 FROM
 eio_ingest.tenrox_transform.adsk_cm_monthly_deferred_local_cur_rev_stacked

),

deffered_rev_max AS

(
 SELECT
 d.*
 FROM
 adsk_fn_cm_deffered_rev d
WHERE
dt = TO_DATE(TO_VARCHAR(CASE WHEN MONTH(CURRENT_DATE()) = 1
                                                  THEN YEAR(DATEADD(year, -1, CURRENT_DATE()))
                                              ELSE YEAR(CURRENT_DATE()) END) || '-'
                                      || CASE WHEN MONTH(CURRENT_DATE()) IN (2, 3, 4) THEN '02-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (5, 6, 7) THEN '05-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (8, 9, 10) THEN '08-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (11, 12, 1) THEN '11-01'
                     ELSE NULL END)
),

adsk_fn_cm_labor_rev_v02 AS
(
  SELECT
 *
 FROM
 eio_ingest.tenrox_transform.adsk_cm_labor_rev_local_cur_v02_stacked
),

adsk_fn_cm_forecast_chrg_rev_v02 AS 
(
 SELECT
  *
 FROM
 eio_ingest.tenrox_transform.adsk_cm_forecast_chrg_rev_local_cur_v02_stacked
),

adsk_fn_cm_rec_chrg_rev_v02 AS 
(
 SELECT
  *
 FROM
 eio_ingest.tenrox_transform.adsk_cm_rec_chrg_rev_local_cur_v02_stacked
              
),

adsk_fn_cm_monthly_chrg_rev AS
(

 SELECT
  *
 FROM
 eio_ingest.tenrox_transform.adsk_cm_monthly_chrg_rev_local_cur_stacked
 
),

adsk_fn_cm_rec_rev_v02 AS 
(
 SELECT
  *
 FROM
 eio_ingest.tenrox_transform.adsk_cm_rec_rev_v02_stacked
),

adsk_fn_month_q_ranges_v02 AS

(
    SELECT
    *
    FROM
    eio_ingest.tenrox_transform.adsk_month_q_ranges_v02
),

fcurrqexchrate AS (
	SELECT
	*
	FROM
	eio_ingest.tenrox_transform.fcurrqexchrate
),
  
parent_child_geo AS
  (   
SELECT 
     project_details.projectid
     ,tprojectcustfld_view.adsk_geo_name
  
    FROM
    adsk_fn_cm_project_details AS project_details 
    INNER JOIN
        tprojectcustfld_view AS tprojectcustfld_view 
        ON tprojectcustfld_view.projectid = project_details.projectid 
                
    LEFT OUTER JOIN
        (
            SELECT
                tproject.uniqueid AS uniqueid
                ,tworkflowmap.name AS workflow 
                ,tproject.parentid as parent_id
            FROM
                tproject AS tproject 
                JOIN
                    tworkflowmap AS tworkflowmap 
                    ON tproject.projectworkflowmapid = tworkflowmap.uniqueid
        ) AS viewprojectlist 
        ON tprojectcustfld_view.projectid = viewprojectlist.uniqueid 
        where tprojectcustfld_view.adsk_geo_name <> ''
        group by
      
            tprojectcustfld_view.adsk_geo_name
            ,project_details.projectid
  ),
  
forecast as (

SELECT
    current_date() as dt
    ,qd.dt as quarter_dt
    ,project_details.projectid AS project_id
    ,viewprojectlist.parent_id as parent_id
    ,p.adsk_geo_name
    --,tprojectcustfld_view.adsk_geo_name AS adsk_geo_name
    ,portfolioname AS portfolio_name
    ,projectcode AS project_code
    ,projectname AS project_name
    ,projectmanagername AS project_manager_name
    ,projectstate AS project_state
    ,project_details.projectenddate 	 AS project_end_date                                        
    ,tprojectcustfld_view.adsk_sap_project_id 	AS     adsk_sap_project_id                                   
    ,clientname AS client_name
    ,tprojectcustfld_view.adsk_masteragreement_projecttype 							  
    ,adsk_revrectreatment AS adsk_revrec_treatment
    ,adsk_accountingcontracttype 	 AS adsk_accounting_contract_type	
    ,clientcurrency AS client_currency
    ,exclient2disp.rate as client_rate
    ,exbase2disp.rate as base_rate
    ,hourly_rate_contractcurrency
    ,hourly_rate_usd
    ,total_planned_rev_usd_adsk
    ,ROUND(currentbillablecharge + currentbillabletime + currentbillablechargeratablebilling) AS bud_revenue

    , hrsact_past_currentqtr + hrsfcst_future AS billable_hours
    , hrs_billable_eac AS hrs_billable_eac
    , CASE 
        WHEN qd.dt = TO_DATE(TO_VARCHAR(CASE WHEN MONTH(CURRENT_DATE()) = 1
                                                  THEN YEAR(DATEADD(year, -1, CURRENT_DATE()))
                                              ELSE YEAR(CURRENT_DATE()) END) || '-'
                                      || CASE WHEN MONTH(CURRENT_DATE()) IN (2, 3, 4) THEN '02-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (5, 6, 7) THEN '05-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (8, 9, 10) THEN '08-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (11, 12, 1) THEN '11-01'
                     ELSE NULL END) 
            THEN revlabor_remaininginqtr + rev_deferred + recrev_completedinqtr
        ELSE revlabor_actual + revlabor_forecast 
        END AS total_revenue
   , CASE 
        WHEN qd.dt = TO_DATE(TO_VARCHAR(CASE WHEN MONTH(CURRENT_DATE()) = 1
                                                  THEN YEAR(DATEADD(year, -1, CURRENT_DATE()))
                                              ELSE YEAR(CURRENT_DATE()) END) || '-'
                                      || CASE WHEN MONTH(CURRENT_DATE()) IN (2, 3, 4) THEN '02-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (5, 6, 7) THEN '05-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (8, 9, 10) THEN '08-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (11, 12, 1) THEN '11-01'
                     ELSE NULL END) 
            THEN revlabor_remaininginqtr_hard + rev_deferred + recrev_completedinqtr
        ELSE revlabor_actual + revlabor_forecast_hard 
        END AS hard_booked_revenue
   ,  total_revenue - hard_booked_revenue AS soft_booked_revenue
   ,  HRS_FCST_BILLABLE - HRS_FCST_BILLABLE_SOFT AS hard_booked_hours
   ,  HRS_FCST_BILLABLE_SOFT AS soft_booked_hours
   ,  CASE WHEN qd.dt < TO_DATE(TO_VARCHAR(CASE WHEN MONTH(CURRENT_DATE()) = 1
                                                  THEN YEAR(DATEADD(year, -1, CURRENT_DATE()))
                                              ELSE YEAR(CURRENT_DATE()) END) || '-'
                                      || CASE WHEN MONTH(CURRENT_DATE()) IN (2, 3, 4) THEN '02-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (5, 6, 7) THEN '05-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (8, 9, 10) THEN '08-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (11, 12, 1) THEN '11-01'
                     ELSE NULL END) THEN COALESCE((recchrgrev_3rdbillableexp_pastqtrs + recchrgrev_internalbillableexp_pastqtrs), 0) 
  
           WHEN qd.dt > TO_DATE(TO_VARCHAR(CASE WHEN MONTH(CURRENT_DATE()) = 1
                                                  THEN YEAR(DATEADD(year, -1, CURRENT_DATE()))
                                              ELSE YEAR(CURRENT_DATE()) END) || '-'
                                      || CASE WHEN MONTH(CURRENT_DATE()) IN (2, 3, 4) THEN '02-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (5, 6, 7) THEN '05-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (8, 9, 10) THEN '08-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (11, 12, 1) THEN '11-01'
                     ELSE NULL END)  THEN fcstchrgrev_nonratablebillable
                                  
           ELSE
                CASE
                    WHEN
                        MONTH(CURRENT_DATE()) IN 
                        (
                            2, 5, 8, 11
                        )
                    THEN
                        COALESCE(fcstchrgrev_nonratablebillable_remaininginqtr, 0) 
                    WHEN
                        MONTH(CURRENT_DATE()) IN 
                        (
                            3, 6, 9, 12
                        )
                    THEN
                        COALESCE(act_charge_rev.actual_charge_rev_month1, 0) + COALESCE(fcstchrgrev_nonratablebillable_remaininginqtr, 0) 
                    ELSE
                        COALESCE(act_charge_rev.actual_charge_rev_month1, 0) + COALESCE(act_charge_rev.actual_charge_rev_month2, 0) + COALESCE(fcstchrgrev_nonratablebillable_remaininginqtr, 0) 
                END
          END AS expenses  
    , def_rev.deferredrevenue  AS deferred_revenue
    , def_rev.totaldeferredrevenue  AS total_deferred_revenue
                                        
    ,CASE
        WHEN lower(tprojectcustfld_view.adsk_masteragreement_projecttype 	) IN ('is parent','as parent','pac parent') THEN cast(project_details.projectid as string)
        WHEN lower(tprojectcustfld_view.adsk_masteragreement_projecttype) like '%child%' THEN CAST(viewprojectlist.parent_id AS STRING)
            ELSE CAST(project_details.projectid AS STRING)
            END                                    AS parent_child_key 
FROM
    adsk_fn_cm_project_details AS project_details 
    LEFT OUTER JOIN quarter_dates qd
    INNER JOIN
        tprojectcustfld_view AS tprojectcustfld_view 
        ON tprojectcustfld_view.projectid = project_details.projectid 
    LEFT OUTER JOIN
        (
            SELECT
                tproject.uniqueid AS uniqueid
                ,tworkflowmap.name AS workflow 
                ,tproject.parentid as parent_id
            FROM
                tproject AS tproject 
                JOIN
                    tworkflowmap AS tworkflowmap 
                    ON tproject.projectworkflowmapid = tworkflowmap.uniqueid
        ) AS viewprojectlist 
        ON tprojectcustfld_view.projectid = viewprojectlist.uniqueid 
    LEFT OUTER JOIN
        adsk_fn_cm_project_budget AS project_budget 
        ON project_budget.projectid = project_details.projectid
    LEFT OUTER JOIN
        adsk_fn_cm_labor_rev_v02 AS labor_rev 
        ON labor_rev.projectid = project_details.projectid and labor_rev.dt = qd.dt
    LEFT OUTER JOIN
        adsk_fn_cm_labor_hrs_v02 AS labor_hrs 
        ON labor_hrs.projectid = project_details.projectid and labor_hrs.dt = qd.dt
    LEFT OUTER JOIN
        adsk_fn_cm_forecast_chrg_rev_v02 AS forecast_chrg_rev 
        ON forecast_chrg_rev.projectid = project_details.projectid and forecast_chrg_rev.dt = qd.dt
    LEFT OUTER JOIN
        adsk_fn_cm_rec_chrg_rev_v02 AS rev_chrg_cost 
        ON rev_chrg_cost.projectid = project_details.projectid  and rev_chrg_cost.dt = qd.dt
	LEFT OUTER JOIN adsk_fn_cm_monthly_chrg_rev act_charge_rev
        ON act_charge_rev.projectid = project_details.projectid 	 and act_charge_rev.dt = qd.dt
   LEFT OUTER JOIN
        adsk_fn_cm_rec_rev_v02 AS rec_rev 
        ON rec_rev.projectid = project_details.projectid 	and rec_rev.dt = qd.dt
   LEFT OUTER JOIN
        adsk_fn_cm_deffered_rev AS def_rev 
        ON def_rev.projectid = project_details.projectid 	and def_rev.dt = qd.dt
    LEFT OUTER JOIN
        fcurrqexchrate AS exclient2disp 
        ON exclient2disp.basecurrencyid = 
        (
            COALESCE(projectcurrencyid, 1)
        )
        AND exclient2disp.quotecurrencyid = 
        (
            COALESCE(NULL, projectcurrencyid, 1)
        )
        AND CURRENT_DATE() BETWEEN exclient2disp.startdate AND exclient2disp.enddate 
    LEFT OUTER JOIN
        fcurrqexchrate AS exbase2disp 
        ON exbase2disp.basecurrencyid = 1 
        AND exbase2disp.quotecurrencyid = 
        (
            COALESCE(NULL, projectcurrencyid, 1)
        )
        AND CURRENT_DATE() BETWEEN exbase2disp.startdate AND exbase2disp.enddate 
    LEFT JOIN parent_child_geo p
        ON CASE
            WHEN lower(tprojectcustfld_view.adsk_masteragreement_projecttype 	) IN ('is parent','as parent','pac parent') THEN cast(project_details.projectid as string)
            WHEN lower(tprojectcustfld_view.adsk_masteragreement_projecttype) like '%child%' THEN CAST(viewprojectlist.parent_id AS STRING)
            ELSE CAST(project_details.projectid AS STRING)
           END = p.projectid

WHERE
    1 = 1 
    AND project_details.projectstate <> 'Discarded' 	
    AND 
    (
        viewprojectlist.workflow NOT IN 
        (
            'V2-Ratable SCO'
            , 'APAC Conversion Setup' 
            , 'Completed Non-Migrated SCOs'
            , 'Conversion Setup'
            , 'Customer Facing' 
            , 'FY14-Booking Credit ONLY' 
            , 'Internal-Non-Utilized' 
            , 'Internal-Utilized' 
            , 'Program Bookings' 
        )
        OR 
        (
            viewprojectlist.workflow = 'V2-Ratable SCO' 
            AND tprojectcustfld_view.adsk_sap_project_id <> '' 
        )
    )
)
  
  
SELECT 
    * 
FROM 
    forecast
  );
[0m14:31:08.763101 [debug] [Thread-1 (]: Snowflake adapter: Snowflake query id: 01ae7527-0608-1f6f-0000-6865845f32ae
[0m14:31:08.763273 [debug] [Thread-1 (]: Snowflake adapter: Snowflake error: 002003 (42S02): SQL compilation error:
Object 'EIO_INGEST.TENROX_TRANSFORM.ADSK_CM_LABOR_HRS_V02_STACKED' does not exist or not authorized.
[0m14:31:08.763429 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.project_forecast_stacked_transform (execute): 2023-08-21 14:31:07.651637 => 2023-08-21 14:31:08.763398
[0m14:31:08.763516 [debug] [Thread-1 (]: On model.my_dbt_projects.project_forecast_stacked_transform: Close
[0m14:31:09.021974 [debug] [Thread-1 (]: Database Error in model project_forecast_stacked_transform (models/engagement_psa/project_forecast_stacked_transform.sql)
  002003 (42S02): SQL compilation error:
  Object 'EIO_INGEST.TENROX_TRANSFORM.ADSK_CM_LABOR_HRS_V02_STACKED' does not exist or not authorized.
  compiled Code at target/run/my_dbt_projects/models/engagement_psa/project_forecast_stacked_transform.sql
[0m14:31:09.022264 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7de3e750-9bb7-40b5-91b3-4fdbb1729483', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x142a84750>]}
[0m14:31:09.022475 [error] [Thread-1 (]: 1 of 1 ERROR creating sql view model USER_RAVINDA_TENROX_TRANSFORM.project_forecast_stacked_transform  [[31mERROR[0m in 1.38s]
[0m14:31:09.023220 [debug] [Thread-1 (]: Finished running node model.my_dbt_projects.project_forecast_stacked_transform
[0m14:31:09.023891 [debug] [MainThread]: Acquiring new snowflake connection 'master'
[0m14:31:09.023999 [info ] [MainThread]: 
[0m14:31:09.024102 [info ] [MainThread]: Running 1 on-run-end hook
[0m14:31:09.030423 [warn ] [MainThread]: Couldn't find Elementary's models. Please run `dbt run -s elementary`.
[0m14:31:09.038523 [debug] [MainThread]: Elementary: Uploading dbt artifacts.
[0m14:31:09.046004 [debug] [MainThread]: Elementary: Uploaded dbt artifacts.
[0m14:31:09.054642 [debug] [MainThread]: Writing injected SQL for node "operation.elementary.elementary-on-run-end-0"
[0m14:31:09.056297 [info ] [MainThread]: 1 of 1 START hook: elementary.on-run-end.0 ..................................... [RUN]
[0m14:31:09.056470 [info ] [MainThread]: 1 of 1 OK hook: elementary.on-run-end.0 ........................................ [[32mOK[0m in 0.00s]
[0m14:31:09.056578 [info ] [MainThread]: 
[0m14:31:09.056827 [debug] [MainThread]: Connection 'master' was properly closed.
[0m14:31:09.056896 [debug] [MainThread]: Connection 'model.my_dbt_projects.project_forecast_stacked_transform' was properly closed.
[0m14:31:09.056951 [debug] [MainThread]: Connection 'list_EIO_INGEST_USER_RAVINDA_TENROX_TRANSFORM' was properly closed.
[0m14:31:09.057048 [info ] [MainThread]: 
[0m14:31:09.057142 [info ] [MainThread]: Finished running 1 view model, 2 hooks in 0 hours 0 minutes and 4.13 seconds (4.13s).
[0m14:31:09.057274 [debug] [MainThread]: Command end result
[0m14:31:09.077584 [info ] [MainThread]: 
[0m14:31:09.077809 [info ] [MainThread]: [31mCompleted with 1 error and 0 warnings:[0m
[0m14:31:09.077905 [info ] [MainThread]: 
[0m14:31:09.078001 [error] [MainThread]: [33mDatabase Error in model project_forecast_stacked_transform (models/engagement_psa/project_forecast_stacked_transform.sql)[0m
[0m14:31:09.078093 [error] [MainThread]:   002003 (42S02): SQL compilation error:
[0m14:31:09.078176 [error] [MainThread]:   Object 'EIO_INGEST.TENROX_TRANSFORM.ADSK_CM_LABOR_HRS_V02_STACKED' does not exist or not authorized.
[0m14:31:09.078253 [error] [MainThread]:   compiled Code at target/run/my_dbt_projects/models/engagement_psa/project_forecast_stacked_transform.sql
[0m14:31:09.078333 [info ] [MainThread]: 
[0m14:31:09.078418 [info ] [MainThread]: Done. PASS=0 WARN=0 ERROR=1 SKIP=0 TOTAL=1
[0m14:31:09.078553 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x122f84110>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x152664a90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1526437d0>]}
[0m14:31:09.078680 [debug] [MainThread]: Flushing usage events


============================== 2023-08-21 14:46:24.727143 | dc78b9c2-f752-4db8-a320-4d079d7ecbdb ==============================
[0m14:46:24.727143 [info ] [MainThread]: Running with dbt=1.4.5
[0m14:46:24.728814 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/Users/ravinda/Documents/dbt_profiles', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'target': 'stg', 'select': ['tag:transform'], 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m14:46:24.729039 [debug] [MainThread]: Tracking: tracking
[0m14:46:24.729355 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x164db9c10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x164dc0a10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x164d4a210>]}
[0m14:46:24.751302 [debug] [MainThread]: checksum: c2b80867bf9bf682f2b5d695df255c4bdc176693c3732280f57ce650f475585d, vars: {}, profile: None, target: stg, version: 1.4.5
[0m14:46:24.775833 [info ] [MainThread]: Unable to do partial parsing because a project config has changed
[0m14:46:24.776112 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x116887290>]}
[0m14:46:25.990298 [debug] [MainThread]: 1699: static parser successfully parsed engagement_psa/project_forecast_stacked_transform.sql
[0m14:46:25.996415 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_project_budget_v02_transform.sql
[0m14:46:25.999014 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_act_labor_costs_v02_transform.sql
[0m14:46:26.001910 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_monthly_rec_rev_transform.sql
[0m14:46:26.004160 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_deferred_rev_transform.sql
[0m14:46:26.007529 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_forecast_chrg_rev_v02_transform.sql
[0m14:46:26.010591 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_forecast_chrg_cost_local_cur_transform.sql
[0m14:46:26.013321 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_forecast_chrg_rev_v02_local_cur_stacked_transform.sql
[0m14:46:26.015800 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_monthly_chrg_rev_local_cur_transform.sql
[0m14:46:26.018849 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_monthly_chrg_rev_transform.sql
[0m14:46:26.021102 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_const_curr_transform.sql
[0m14:46:26.023354 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_monthly_deferred_rev_local_cur_stacked_transform.sql
[0m14:46:26.025870 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_act_charge_costs_v02_transform.sql
[0m14:46:26.028105 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_month_q_ranges_v02_transform.sql
[0m14:46:26.030683 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_project_budget_transform.sql
[0m14:46:26.032949 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_rec_rev_v02_transform.sql
[0m14:46:26.036556 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_rec_chrg_rev_v02_transform.sql
[0m14:46:26.038887 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_rec_chrg_rev_v02_local_cur_stacked_transform.sql
[0m14:46:26.041199 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_labor_rev_v02_local_cur_stacked_transform.sql
[0m14:46:26.043467 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_monthly_deferred_rev_transform.sql
[0m14:46:26.046623 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_rec_chrg_rev_v02_local_cur_transform.sql
[0m14:46:26.049413 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_labor_rev_v02_local_cur_transform.sql
[0m14:46:26.052651 [debug] [MainThread]: 1699: static parser successfully parsed transform/cust_adsk_servicesimpact_projectdetails_transform.sql
[0m14:46:26.055199 [debug] [MainThread]: 1699: static parser successfully parsed transform/fcurrqexchrate_transform.sql
[0m14:46:26.057506 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_monthly_rec_rev_local_cur_transform.sql
[0m14:46:26.060846 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_forecast_chrg_rev_v02_local_cur_transform.sql
[0m14:46:26.063401 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_project_budget_local_cur_transform.sql
[0m14:46:26.066260 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_forecast_chrg_cost_transform.sql
[0m14:46:26.068533 [debug] [MainThread]: 1699: static parser successfully parsed transform/cust_adsk_utilization_hours_transform.sql
[0m14:46:26.071587 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_monthly_deferred_rev_local_cur_transform.sql
[0m14:46:26.073872 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_labor_rev_v02_transform.sql
[0m14:46:26.077314 [debug] [MainThread]: 1699: static parser successfully parsed transform/viewprojectlist_transform.sql
[0m14:46:26.079563 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_deferred_rev_local_cur_transform.sql
[0m14:46:26.082243 [debug] [MainThread]: 1699: static parser successfully parsed transform/tprojectcustfld_view_transform.sql
[0m14:46:26.084938 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_labor_hrs_v02_stacked_transform.sql
[0m14:46:26.088278 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_monthly_expect_labor_rev_local_cur_transform.sql
[0m14:46:26.090679 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_project_details_transform.sql
[0m14:46:26.092937 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_rec_rev_v02_stacked_transform.sql
[0m14:46:26.095258 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_resource_details_transform.sql
[0m14:46:26.097625 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_monthly_expect_labor_rev_transform.sql
[0m14:46:26.100024 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_monthly_chrg_rev_local_cur_stacked_transform.sql
[0m14:46:26.102626 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_forecast_labor_cost_rates_transform.sql
[0m14:46:26.105960 [debug] [MainThread]: 1699: static parser successfully parsed transform/cust_adsk_utilization_resources_transform.sql
[0m14:46:26.110406 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_labor_hrs_v02_transform.sql
[0m14:46:26.112918 [debug] [MainThread]: 1699: static parser successfully parsed transform/cust_adsk_marginvariance_transform.sql
[0m14:46:26.115699 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_act_charge_costs_v02_local_cur_transform.sql
[0m14:46:26.118877 [debug] [MainThread]: 1699: static parser successfully parsed transform/adsk_cm_forecast_labor_costs_transform.sql
[0m14:46:26.121178 [debug] [MainThread]: 1699: static parser successfully parsed transform/cust_adsk_servicesimpact_actuals_transform.sql
[0m14:46:26.134688 [info ] [MainThread]: macro: source_table_freshness
[0m14:46:26.134882 [info ] [MainThread]: macro: source_table_freshness - Fetching sources
[0m14:46:26.156987 [debug] [MainThread]: 1699: static parser successfully parsed edr/run_results/snapshot_run_results.sql
[0m14:46:26.158443 [debug] [MainThread]: 1603: static parser failed on edr/run_results/job_run_results.sql
[0m14:46:26.167969 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/job_run_results.sql
[0m14:46:26.168780 [debug] [MainThread]: 1603: static parser failed on edr/run_results/model_run_results.sql
[0m14:46:26.172953 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/model_run_results.sql
[0m14:46:26.173749 [debug] [MainThread]: 1603: static parser failed on edr/run_results/test_result_rows.sql
[0m14:46:26.232150 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/test_result_rows.sql
[0m14:46:26.233180 [debug] [MainThread]: 1603: static parser failed on edr/run_results/elementary_test_results.sql
[0m14:46:26.248250 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/elementary_test_results.sql
[0m14:46:26.249095 [debug] [MainThread]: 1603: static parser failed on edr/run_results/dbt_source_freshness_results.sql
[0m14:46:26.258573 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/dbt_source_freshness_results.sql
[0m14:46:26.259389 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_dbt_tests.sql
[0m14:46:26.263734 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_dbt_tests.sql
[0m14:46:26.264536 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_schema_changes.sql
[0m14:46:26.267919 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_schema_changes.sql
[0m14:46:26.268672 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_dbt_source_freshness.sql
[0m14:46:26.271322 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_dbt_source_freshness.sql
[0m14:46:26.272070 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_anomaly_detection.sql
[0m14:46:26.275302 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_anomaly_detection.sql
[0m14:46:26.276038 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_dbt_models.sql
[0m14:46:26.279101 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_dbt_models.sql
[0m14:46:26.279994 [debug] [MainThread]: 1699: static parser successfully parsed edr/system/monitors_runs.sql
[0m14:46:26.281635 [debug] [MainThread]: 1603: static parser failed on edr/system/metadata.sql
[0m14:46:26.285960 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/system/metadata.sql
[0m14:46:26.286722 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_tests.sql
[0m14:46:26.303540 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_tests.sql
[0m14:46:26.304505 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_models.sql
[0m14:46:26.316271 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_models.sql
[0m14:46:26.317128 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_sources.sql
[0m14:46:26.329945 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_sources.sql
[0m14:46:26.330802 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_snapshots.sql
[0m14:46:26.340509 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_snapshots.sql
[0m14:46:26.341348 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_columns.sql
[0m14:46:26.353139 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_columns.sql
[0m14:46:26.353964 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_invocations.sql
[0m14:46:26.371394 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_invocations.sql
[0m14:46:26.372209 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_metrics.sql
[0m14:46:26.384666 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_metrics.sql
[0m14:46:26.385528 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_seeds.sql
[0m14:46:26.396315 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_seeds.sql
[0m14:46:26.397215 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_artifacts_hashes.sql
[0m14:46:26.399961 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_artifacts_hashes.sql
[0m14:46:26.400837 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_run_results.sql
[0m14:46:26.411190 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_run_results.sql
[0m14:46:26.412027 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_exposures.sql
[0m14:46:26.425148 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_exposures.sql
[0m14:46:26.426113 [debug] [MainThread]: 1603: static parser failed on edr/data_monitoring/anomaly_detection/metrics_anomaly_score.sql
[0m14:46:26.438110 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/data_monitoring/anomaly_detection/metrics_anomaly_score.sql
[0m14:46:26.439156 [debug] [MainThread]: 1603: static parser failed on edr/data_monitoring/anomaly_detection/anomaly_threshold_sensitivity.sql
[0m14:46:26.443916 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/data_monitoring/anomaly_detection/anomaly_threshold_sensitivity.sql
[0m14:46:26.444739 [debug] [MainThread]: 1603: static parser failed on edr/data_monitoring/schema_changes/schema_columns_snapshot.sql
[0m14:46:26.450548 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/data_monitoring/schema_changes/schema_columns_snapshot.sql
[0m14:46:26.451353 [debug] [MainThread]: 1603: static parser failed on edr/data_monitoring/data_monitoring/data_monitoring_metrics.sql
[0m14:46:26.460452 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/data_monitoring/data_monitoring/data_monitoring_metrics.sql
[0m14:46:26.461274 [debug] [MainThread]: 1603: static parser failed on edr/metadata_store/filtered_information_schema_columns.sql
[0m14:46:26.465213 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/metadata_store/filtered_information_schema_columns.sql
[0m14:46:26.534908 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'project_details_enhanced_transform' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.535590 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'project_list_transform' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.536329 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'user_list_transform' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.536937 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'asis_ma_hours_breakdown_enriched_transform' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.537504 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'project_details_enriched_transform' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.538277 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'project_budget_summary_transform' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.538868 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'utilization_resources_enriched_transform' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.539420 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'margin_variance_transform' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.539933 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'as_is_exhibits_enriched_transform' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.540455 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'as_is_service_purchase_enriched_transform' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.540962 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'as_is_service_engagements_transform' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.541464 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'as_is_tenrox_child_projects_transform' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.542205 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'as_is_tenrox_parent_projects_enriched_transform' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.544500 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'gcd_as_is_exhibits_shared' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.550768 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'gcd_as_is_service_engagements_shared' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.570863 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'project_forecast_transform' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.575986 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'gcd_as_is_service_purchase_shared' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.579722 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'gcd_asis_ma_hours_breakdown_private' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.589446 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'gcd_as_is_tenrox_parent_projects_shared' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.598352 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'gcd_as_is_tenrox_child_projects_shared' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.603428 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'gcd_utilization_resources_private' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.606253 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'gcd_utilization_forecast_private' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.608163 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'gcd_utilization_hours_private' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.612014 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'gcd_utilization_resource_hours_private' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.620165 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'gcd_utilization_hours_forecast_private' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.634945 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'gcd_project_details_private' in the 'models' section of file 'models/psa_schema.yml'
[0m14:46:26.767339 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_project_details_enhanced_null_projectid.b0a28d8513' (models/psa_schema.yml) depends on a node named 'project_details_enhanced_transform' in package '' which was not found
[0m14:46:26.767642 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_project_details_enhanced_unique_projectid.63095a52c3' (models/psa_schema.yml) depends on a node named 'project_details_enhanced_transform' in package '' which was not found
[0m14:46:26.767792 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_project_list_null_projectid.1f0213808e' (models/psa_schema.yml) depends on a node named 'project_list_transform' in package '' which was not found
[0m14:46:26.767918 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_project_list_unique_projectid.b2cd68716c' (models/psa_schema.yml) depends on a node named 'project_list_transform' in package '' which was not found
[0m14:46:26.768040 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_user_list_null_userid.227dded067' (models/psa_schema.yml) depends on a node named 'user_list_transform' in package '' which was not found
[0m14:46:26.768155 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_user_list_unique_userid.c1ccb5052e' (models/psa_schema.yml) depends on a node named 'user_list_transform' in package '' which was not found
[0m14:46:26.768268 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_asis_ma_hours_breakdown_null_projectcode.fb680e052c' (models/psa_schema.yml) depends on a node named 'asis_ma_hours_breakdown_enriched_transform' in package '' which was not found
[0m14:46:26.768383 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_asis_ma_hours_breakdown_unique_projectcode.049edfb842' (models/psa_schema.yml) depends on a node named 'asis_ma_hours_breakdown_enriched_transform' in package '' which was not found
[0m14:46:26.768494 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_project_details_enriched_null_projectid.769841fab3' (models/psa_schema.yml) depends on a node named 'project_details_enriched_transform' in package '' which was not found
[0m14:46:26.768606 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_project_details_enriched_unique_projectid.45df2dfcee' (models/psa_schema.yml) depends on a node named 'project_details_enriched_transform' in package '' which was not found
[0m14:46:26.768726 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_project_budget_summary_null_projectid.fcccf627ad' (models/psa_schema.yml) depends on a node named 'project_budget_summary_transform' in package '' which was not found
[0m14:46:26.768832 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_project_budget_summary_unique_projectid.6534ddac25' (models/psa_schema.yml) depends on a node named 'project_budget_summary_transform' in package '' which was not found
[0m14:46:26.768939 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_putilization_resources_enriched_null_userid.f566dc7f3e' (models/psa_schema.yml) depends on a node named 'utilization_resources_enriched_transform' in package '' which was not found
[0m14:46:26.769046 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_utilization_resources_enriched_unique_userid.7a54cc6c46' (models/psa_schema.yml) depends on a node named 'utilization_resources_enriched_transform' in package '' which was not found
[0m14:46:26.769150 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_margin_variance_null_projectid.1065c180e9' (models/psa_schema.yml) depends on a node named 'margin_variance_transform' in package '' which was not found
[0m14:46:26.769259 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_margin_variance_unique_projectid.9170daf612' (models/psa_schema.yml) depends on a node named 'margin_variance_transform' in package '' which was not found
[0m14:46:26.769366 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_as_is_exhibits_enriched_null_exhibitid.fd9d1e0992' (models/psa_schema.yml) depends on a node named 'as_is_exhibits_enriched_transform' in package '' which was not found
[0m14:46:26.769470 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_as_is_exhibits_enriched_unique_exhibitid.02e1aec310' (models/psa_schema.yml) depends on a node named 'as_is_exhibits_enriched_transform' in package '' which was not found
[0m14:46:26.769576 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_as_is_service_purchase_enriched_null_servicepurchaseid.afb7ef5f2f' (models/psa_schema.yml) depends on a node named 'as_is_service_purchase_enriched_transform' in package '' which was not found
[0m14:46:26.769683 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_as_is_service_purchase_enriched_unique_servicepurchaseid.a3907122fa' (models/psa_schema.yml) depends on a node named 'as_is_service_purchase_enriched_transform' in package '' which was not found
[0m14:46:26.769790 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_as_is_service_engagements_null_serviceengagementid.faf62662f0' (models/psa_schema.yml) depends on a node named 'as_is_service_engagements_transform' in package '' which was not found
[0m14:46:26.769896 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_as_is_service_engagements_unique_serviceengagementid.f28661c492' (models/psa_schema.yml) depends on a node named 'as_is_service_engagements_transform' in package '' which was not found
[0m14:46:26.770000 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_as_is_tenrox_child_projects_null_projectcode.90e092ebb4' (models/psa_schema.yml) depends on a node named 'as_is_tenrox_child_projects_transform' in package '' which was not found
[0m14:46:26.770106 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_as_is_tenrox_child_projects_unique_projectcode.fb7529861f' (models/psa_schema.yml) depends on a node named 'as_is_tenrox_child_projects_transform' in package '' which was not found
[0m14:46:26.770212 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_as_is_tenrox_parent_projects_enriched_null_projectcode.ab7a843cff' (models/psa_schema.yml) depends on a node named 'as_is_tenrox_parent_projects_enriched_transform' in package '' which was not found
[0m14:46:26.770330 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_as_is_tenrox_parent_projects_enriched_unique_projectcode.ca0e1093e5' (models/psa_schema.yml) depends on a node named 'as_is_tenrox_parent_projects_enriched_transform' in package '' which was not found
[0m14:46:26.770438 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.gcd_as_is_tenrox_parent_projects_enriched_null_projectname.a771eb6062' (models/psa_schema.yml) depends on a node named 'as_is_tenrox_parent_projects_enriched_transform' in package '' which was not found
[0m14:46:26.770545 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_greaterthanone_pocprevqtr.80c8782f20' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.770649 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_greaterthanone_pocpcurrentqtr.a0d1ff609b' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.770754 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_greaterthanone_pocplus1qtr.fc9d35aafe' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.770858 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_greaterthanone_pocplus2qtr.ed32265910' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.770963 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_greaterthanone_pocplus3qtr.697546c0e8' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.771069 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_greaterthanone_pocplus4qtr.79d6e765a9' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.771174 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_greaterthanone_pocpplus5qtr.42bb547d5c' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.771282 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_greaterthanone_pocadditionalqtr.a615fe7caf' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.771390 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_greaterthanone_pocadditional2qtr.5ee1b6dad5' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.771491 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_unique_projectcode.3b165c1ad9' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.771594 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_null_projectcode.14fe9168ba' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.771698 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_unique_projectid.107dd2560c' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.771803 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_null_projectid.8605d611fe' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.771912 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_null_projecttype.7a19d6dbe7' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.772021 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_totalrevenue_currentqtr.f3d89d8ecc' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.772132 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_totalrevenue_plus1qtr.9656f9a6f8' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.772239 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_totalrevenue_plus2qtr.bca3091a9f' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.772344 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_totalrevenue_plus3qtr.40ade4ad83' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.772450 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_totalrevenue_plus4qtr.42f0fffea9' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.772552 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_totalrevenue_plus6qtr.410b22e9a9' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.772659 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_totalrevenue_additionalqtrs.f0e922ba32' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.772760 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.my_dbt_projects.tnrxsp_project_forecast_totalrevenue_additionalqtrs2.89701ffa59' (models/psa_schema.yml) depends on a node named 'project_forecast_transform' in package '' which was not found
[0m14:46:26.845771 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.my_dbt_projects.s3.ingest.source_tables
- models.my_dbt_projects.private
- models.my_dbt_projects.s3.ingest
[0m14:46:26.850705 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165e0d510>]}
[0m14:46:26.877305 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x164e0ae90>]}
[0m14:46:26.877533 [info ] [MainThread]: Found 77 models, 24 tests, 0 snapshots, 0 analyses, 991 macros, 2 operations, 0 seed files, 155 sources, 0 exposures, 0 metrics
[0m14:46:26.877654 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1648a8510>]}
[0m14:46:26.880294 [info ] [MainThread]: 
[0m14:46:26.880658 [debug] [MainThread]: Acquiring new snowflake connection 'master'
[0m14:46:26.881866 [debug] [ThreadPool]: Acquiring new snowflake connection 'list_EIO_INGEST'
[0m14:46:26.886158 [debug] [ThreadPool]: Using snowflake connection "list_EIO_INGEST"
[0m14:46:26.886275 [debug] [ThreadPool]: On list_EIO_INGEST: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "connection_name": "list_EIO_INGEST"} */
show terse schemas in database EIO_INGEST
    limit 10000
[0m14:46:26.886362 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m14:46:27.965038 [debug] [ThreadPool]: SQL status: SUCCESS 100 in 1 seconds
[0m14:46:27.966645 [debug] [ThreadPool]: On list_EIO_INGEST: Close
[0m14:46:28.212055 [debug] [ThreadPool]: Acquiring new snowflake connection 'list_EIO_INGEST_TENROX_TRANSFORM'
[0m14:46:28.212472 [debug] [ThreadPool]: Acquiring new snowflake connection 'list_EIO_INGEST_ENGAGEMENT_TRANSFORM'
[0m14:46:28.216084 [debug] [ThreadPool]: Using snowflake connection "list_EIO_INGEST_TENROX_TRANSFORM"
[0m14:46:28.217728 [debug] [ThreadPool]: Using snowflake connection "list_EIO_INGEST_ENGAGEMENT_TRANSFORM"
[0m14:46:28.217842 [debug] [ThreadPool]: On list_EIO_INGEST_TENROX_TRANSFORM: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "connection_name": "list_EIO_INGEST_TENROX_TRANSFORM"} */
show terse objects in EIO_INGEST.TENROX_TRANSFORM
[0m14:46:28.217926 [debug] [ThreadPool]: On list_EIO_INGEST_ENGAGEMENT_TRANSFORM: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "connection_name": "list_EIO_INGEST_ENGAGEMENT_TRANSFORM"} */
show terse objects in EIO_INGEST.ENGAGEMENT_TRANSFORM
[0m14:46:28.218007 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:46:28.218122 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m14:46:29.219418 [debug] [ThreadPool]: SQL status: SUCCESS 172 in 1 seconds
[0m14:46:29.222129 [debug] [ThreadPool]: On list_EIO_INGEST_TENROX_TRANSFORM: Close
[0m14:46:29.255962 [debug] [ThreadPool]: SQL status: SUCCESS 255 in 1 seconds
[0m14:46:29.259563 [debug] [ThreadPool]: On list_EIO_INGEST_ENGAGEMENT_TRANSFORM: Close
[0m14:46:29.514445 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165ed9090>]}
[0m14:46:29.514751 [info ] [MainThread]: 
[0m14:46:29.514908 [info ] [MainThread]: Running 1 on-run-start hook
[0m14:46:29.519961 [debug] [MainThread]: Writing injected SQL for node "operation.elementary.elementary-on-run-start-0"
[0m14:46:29.521256 [info ] [MainThread]: 1 of 1 START hook: elementary.on-run-start.0 ................................... [RUN]
[0m14:46:29.521529 [info ] [MainThread]: 1 of 1 OK hook: elementary.on-run-start.0 ...................................... [[32mOK[0m in 0.00s]
[0m14:46:29.521648 [info ] [MainThread]: 
[0m14:46:29.521942 [info ] [MainThread]: Concurrency: 3 threads (target='stg')
[0m14:46:29.522047 [info ] [MainThread]: 
[0m14:46:29.525648 [debug] [Thread-1 (]: Began running node model.my_dbt_projects.adsk_cm_const_curr_transform
[0m14:46:29.525766 [debug] [Thread-2 (]: Began running node model.my_dbt_projects.adsk_cm_forecast_labor_cost_rates_transform
[0m14:46:29.525872 [debug] [Thread-3 (]: Began running node model.my_dbt_projects.adsk_cm_project_details_transform
[0m14:46:29.525990 [info ] [Thread-1 (]: 1 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_const_curr ............... [RUN]
[0m14:46:29.526130 [info ] [Thread-2 (]: 2 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_forecast_labor_cost_rates  [RUN]
[0m14:46:29.526252 [info ] [Thread-3 (]: 3 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_project_details .......... [RUN]
[0m14:46:29.526617 [debug] [Thread-1 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_const_curr_transform'
[0m14:46:29.526807 [debug] [Thread-2 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_forecast_labor_cost_rates_transform'
[0m14:46:29.526984 [debug] [Thread-3 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_project_details_transform'
[0m14:46:29.527078 [debug] [Thread-1 (]: Began compiling node model.my_dbt_projects.adsk_cm_const_curr_transform
[0m14:46:29.527160 [debug] [Thread-2 (]: Began compiling node model.my_dbt_projects.adsk_cm_forecast_labor_cost_rates_transform
[0m14:46:29.527233 [debug] [Thread-3 (]: Began compiling node model.my_dbt_projects.adsk_cm_project_details_transform
[0m14:46:29.529191 [debug] [Thread-1 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_const_curr_transform"
[0m14:46:29.532495 [debug] [Thread-2 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_forecast_labor_cost_rates_transform"
[0m14:46:29.535263 [debug] [Thread-3 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_project_details_transform"
[0m14:46:29.537260 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_forecast_labor_cost_rates_transform (compile): 2023-08-21 14:46:29.529320 => 2023-08-21 14:46:29.537223
[0m14:46:29.537347 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_project_details_transform (compile): 2023-08-21 14:46:29.532614 => 2023-08-21 14:46:29.537323
[0m14:46:29.537429 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_const_curr_transform (compile): 2023-08-21 14:46:29.527294 => 2023-08-21 14:46:29.537411
[0m14:46:29.537518 [debug] [Thread-2 (]: Began executing node model.my_dbt_projects.adsk_cm_forecast_labor_cost_rates_transform
[0m14:46:29.537600 [debug] [Thread-3 (]: Began executing node model.my_dbt_projects.adsk_cm_project_details_transform
[0m14:46:29.537673 [debug] [Thread-1 (]: Began executing node model.my_dbt_projects.adsk_cm_const_curr_transform
[0m14:46:29.546983 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_forecast_labor_cost_rates_transform"
[0m14:46:29.548914 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_project_details_transform"
[0m14:46:29.550605 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_const_curr_transform"
[0m14:46:29.550720 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_forecast_labor_cost_rates_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_forecast_labor_cost_rates_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:29.550800 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_project_details_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_project_details_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:29.550881 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_const_curr_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_const_curr_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:29.550974 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m14:46:29.551053 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m14:46:29.551115 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:46:30.344295 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:30.349171 [debug] [Thread-1 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_const_curr_transform"
[0m14:46:30.352754 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_const_curr_transform"
[0m14:46:30.352899 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_const_curr_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_const_curr_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_const_curr
  
   as (
    
/* ADSK_FN_CM_CONST_CURR 
  @FiscalYear      INT = NULL
  , @Placeholder02 INT = NULL
  , @Placeholder03 INT = NULL
*/

SELECT
    cld.value                                                       AS rateid
    , LEFT(cld.value, ABS(CHARINDEX('-', cld.value) - 1))           AS fiscalyear
    , RIGHT(cld.value, ABS(CHARINDEX('-', REVERSE(cld.value)) - 1)) AS currencycode
    , cl.id                                                         AS rate
    , 1                                                             AS sqlversion_const_curr
FROM eio_publish.tenrox_private.tcustfld  AS cf
INNER JOIN eio_publish.tenrox_private.tcustlst  AS cl
    ON cf.uniqueid = cl.custfldid
INNER JOIN eio_publish.tenrox_private.tcustlstdesc  AS cld 
    ON cld.custlstid = cl.uniqueid
WHERE cf.id = 'ADSK_LU_Constant_Currency_Rates'
    AND cl.language = 0
    AND cld.language = 0
    AND LEFT(cld.value, ABS(CHARINDEX('-', cld.value) - 1)) = 'FY' || NVL(TO_VARCHAR(DATE_PART('YEAR', CURRENT_DATE()) + CASE WHEN DATE_PART('MONTH', CURRENT_DATE()) = 1 THEN 0 ELSE 1 END), '')
    /*  If current_date() produces 0 result. it appears that TCUSTLSTDESC.VALUE -1 max is FY18
    -- Original
                AND LEFT(TCUSTLSTDESC.VALUE, ABS(CHARINDEX('-', TCUSTLSTDESC.VALUE) - 1)) =
                'FY' + RIGHT(CONVERT(NVARCHAR(4), ISNULL(@FiscalYear, DATEPART(YEAR, GETDATE()) + CASE WHEN DATEPART(MONTH, GETDATE()) = 1
                THEN 0 ELSE 1
                END
                    )), 2)
    */
    -- When ADS_FN_CM_CONST_CURR.sql is queried directly from SSMS, result is = 0 recs
  );
[0m14:46:30.498114 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:30.498985 [debug] [Thread-2 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_forecast_labor_cost_rates_transform"
[0m14:46:30.503353 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_forecast_labor_cost_rates_transform"
[0m14:46:30.503822 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:30.503912 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_forecast_labor_cost_rates_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_forecast_labor_cost_rates_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_forecast_labor_cost_rates
  
   as (
    
/* ADSK_FN_CM_FORECAST_LABOR_COST_RATES 
  @EffectiveDate   DATETIME = NULL
  , @Placeholder02 INT = NULL
  , @Placeholder03 INT = NULL
  , @Placeholder04 INT = NULL
  , @Placeholder05 INT = NULL
*/
SELECT 
    ptr.projectid AS projectid
     , CASE ptr.isrole WHEN 0 THEN resourceid END AS userid
     , CASE ptr.isrole WHEN 1 THEN resourceid END AS roleid
     , ptr.isrole AS isrole
     , IFNULL(CASE ptr.isrole WHEN 0 THEN COALESCE(NULLIF(projanduser.forecastcostrate, 0),
                                                                         NULLIF(useronly.forecastcostrate, 0),
                                                                         CASE ptr.iscustomforecastedcostrate WHEN 1
                                                                                                                 THEN NULLIF(ptr.forecastedcostrate, 0) END,
                                                                         NULLIF(u.forecastcost, 0))
                                                    ELSE COALESCE(NULLIF(projandrole.forecastcostrate, 0),
                                                                  NULLIF(roleonly.forecastcostrate, 0),
                                                                  CASE ptr.iscustomforecastedcostrate WHEN 1
                                                                                                          THEN NULLIF(ptr.forecastedcostrate, 0) END,
                                                                  NULLIF(plr.hourlycostrate, 0)) END,
                                    0) AS forecastcostrate
     , COALESCE(projanduser.currencyid, useronly.currencyid, projandrole.currencyid, roleonly.currencyid,
                1) AS currencyid
     , 1 AS sqlversion_forecast_labor_cost_rates
    FROM eio_publish.tenrox_private.tprojectteamresource AS ptr
    LEFT JOIN
        eio_publish.tenrox_private.tuser AS u
        ON u.uniqueid = ptr.resourceid AND ptr.isrole = 0 
    LEFT JOIN eio_publish.tenrox_private.tplanningrole AS plr 
        ON plr.uniqueid = ptr.resourceid AND ptr.isrole = 1

     LEFT JOIN (SELECT /* Project-to-User has priority */
                            rao.objectid AS projectid
                            , rao.applytoobjectid AS userid
                            , 0 AS isrole
                            , CASE WHEN rao.startdate < re.datefrom THEN re.datefrom
                                ELSE rao.startdate END AS startdate
                            , CASE WHEN rao.enddate > re.dateto THEN re.dateto
                                ELSE rao.enddate END AS enddate
                            , rr.currencyid AS currencyid
                            , re.rate1 AS forecastcostrate
                        FROM eio_publish.tenrox_private.trateassocobjectlink AS rao
                        JOIN eio_publish.tenrox_private.traterule AS rr
                            ON (rao.rateruleid = rr.uniqueid) 
                        JOIN eio_publish.tenrox_private.trateruleentry AS re 
                            ON (re.rateruleid = rr.uniqueid)
                        WHERE rr.type = 0 -- COST
                            AND rr.processing = 0 
                            AND rr.rateentrytype = 1 
                            AND rao.objecttype = 2 -- PROJECT
                            AND rao.applytoobjecttype = 1 -- USER
                            AND (CURRENT_DATE() BETWEEN rao.startdate AND rao.enddate)
                        ) projanduser
                        ON projanduser.projectid = ptr.projectid 
                            AND projanduser.userid = ptr.resourceid 
                            AND projanduser.isrole = ptr.isrole
     LEFT JOIN (SELECT /* If no specified project rate for this user then use User rate with RATEMODE 1016 */
                            rao.objectid AS userid
                            , 0 AS isrole
                            , CASE WHEN rao.startdate < re.datefrom THEN re.datefrom
                                ELSE rao.startdate END AS startdate
                            , CASE WHEN rao.enddate > re.dateto THEN re.dateto
                                ELSE rao.enddate END AS enddate
                            , rr.currencyid AS currencyid
                            , re.rate1 AS forecastcostrate
                        FROM eio_publish.tenrox_private.trateassocobjectlink AS rao
                        JOIN
                            eio_publish.tenrox_private.traterule AS rr
                            ON (rao.rateruleid = rr.uniqueid)
                        JOIN
                            eio_publish.tenrox_private.trateruleentry AS re
                            ON (re.rateruleid = rr.uniqueid)
                        WHERE
                            rr.type = 0  -- COST
                            AND rr.processing = 0
                            AND rr.rateentrytype = 1
                            AND rao.objecttype = 1  -- USER
                            AND rao.applytoobjecttype = 1  -- USER
                            AND (CURRENT_DATE() BETWEEN rao.startdate AND rao.enddate)
                    ) useronly
                    ON useronly.userid = ptr.resourceid
                    AND useronly.isrole = ptr.isrole
     LEFT JOIN (SELECT /* If role, look for project specific role cost rates */
                            rao.objectid AS projectid
                            , rao.applytoobjectid AS roleid
                            , 1 AS isrole
                            , CASE WHEN rao.startdate < re.datefrom THEN re.datefrom
                                ELSE rao.startdate END AS startdate
                            , CASE WHEN rao.enddate > re.dateto THEN re.dateto
                                ELSE rao.enddate END AS enddate
                            , rr.currencyid AS currencyid
                            , re.rate1 AS forecastcostrate
                        FROM eio_publish.tenrox_private.trateassocobjectlink AS rao
                        JOIN eio_publish.tenrox_private.traterule AS rr
                            ON (rao.rateruleid = rr.uniqueid) 
                        JOIN eio_publish.tenrox_private.trateruleentry AS re 
                            ON (re.rateruleid = rr.uniqueid)
                        WHERE rr.type = 0 -- COST
                          AND rr.processing = 0
                          AND rr.rateentrytype = 1
                          AND rao.objecttype = 2 -- PROJECT
                          AND rao.applytoobjecttype = 700 -- ROLE
                          AND (CURRENT_DATE() BETWEEN rao.startdate AND rao.enddate) 
                      ) projandrole
                      ON projandrole.projectid = ptr.projectid 
                          AND projandrole.roleid = ptr.resourceid 
                          AND projandrole.isrole = ptr.isrole
     LEFT JOIN (SELECT /* If no project-to-role rate is specified use the planning role rate */
                            rao.objectid AS roleid
                            , 1 AS isrole
                            , CASE WHEN rao.startdate < re.datefrom THEN re.datefrom
                                ELSE rao.startdate END AS startdate
                             , CASE WHEN rao.enddate > re.dateto THEN re.dateto
                                    ELSE rao.enddate END AS enddate
                             , rr.currencyid AS currencyid
                             , re.rate1 AS forecastcostrate
                        FROM eio_publish.tenrox_private.trateassocobjectlink AS rao
                            JOIN eio_publish.tenrox_private.traterule AS rr
                              ON (rao.rateruleid = rr.uniqueid)
                        JOIN eio_publish.tenrox_private.trateruleentry AS re
                              ON (re.rateruleid = rr.uniqueid)
                        WHERE rr.type = 0 -- COST
                          AND rr.processing = 0 
                          AND rr.rateentrytype = 1 
                          AND rao.objecttype = 700 -- ROLE
                          AND rao.applytoobjecttype = 700 -- ROLE
                          AND (CURRENT_DATE() BETWEEN rao.startdate AND rao.enddate)
                      ) roleonly
                        ON roleonly.roleid = ptr.resourceid 
                        AND roleonly.isrole = ptr.isrole
  );
[0m14:46:30.504609 [debug] [Thread-3 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_project_details_transform"
[0m14:46:30.508361 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_project_details_transform"
[0m14:46:30.508473 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_project_details_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_project_details_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_details
  
   as (
    
/* ADSK_FN_CM_PROJECT_DETAILS*/

SELECT 
    tproject.uniqueid                                                       AS projectid
    , tproject.releasealias                                                 AS projectcode
    , tproject.name                                                         AS projectname
    , TO_DATE(tproject.startdate)                                           AS projectstartdate
    , TO_DATE(tproject.enddate)                                             AS projectenddate
    , pm.uniqueid                                                           AS projectmanagerid
    , IFNULL(NVL(pm.firstname, '') || ' ' || NVL(pm.lastname, ''), '')      AS projectmanagername
    , IFNULL(NVL(pm.lastname, '') || ', ' || NVL(pm.firstname, ''), '')     AS projectmanagername_rev
    , IFNULL(pm.id, '')                                                     AS projectmanageremployeeid
    , IFNULL(pm.emailaddress, '')                                           AS projectmanageremailaddress
    , IFNULL(
       NVL(pmalt.firstname, '') || ' ' || NVL(pmalt.lastname, ''), '')      AS altprojectmanagername
    , IFNULL(
       NVL(pmalt.lastname, '') || ', ' || NVL(pmalt.firstname, ''), '')     AS altprojectmanagername_rev
    , IFNULL(pmalt.id, '')                                                  AS altprojectmanageremployeeid
    , IFNULL(pmalt.emailaddress, '')                                        AS altprojectmanageremailaddress
    , IFNULL(tbl_state.projectstate, 'Closed')                              AS projectstate
    , tclientinvoice.currencyid                                             AS projectcurrencyid
    , IFNULL(tcurrency.currencycode, '')                                    AS projectcurrency
    , IFNULL(tcurrency.currencysymbol, '$')                                 AS projectcurrencysymbol
    , tportfolio.uniqueid                                                   AS portfolioid
    , tportfolio.name                                                       AS portfolioname
    , tportfolio.managerid                                                  AS portfoliomanagerid
    , IFNULL(
       NVL(portman.firstname, '') || ' ' || NVL(portman.lastname, ''), '')  AS portfoliomanagername
    , IFNULL(
       NVL(portman.lastname, '') || ', ' || NVL(portman.firstname, ''), '') AS portfoliomanagername_rev
    , IFNULL(portman.id, '')                                                AS portfoliomanageremployeeid
    , IFNULL(portman.emailaddress, '')                                      AS portfoliomanageremailaddress
    , tclient.uniqueid                                                      AS clientid
    , tclient.name AS clientname
    , tclient.id                                                            AS accountcsn
    , IFNULL(tcurrency.currencycode, '')                                    AS clientcurrency
    , tproject.trackingno                                                   AS tenroxtrackingno
    , 9                                                                     AS sqlversion_project_details  
FROM eio_publish.tenrox_private.tproject tproject
LEFT JOIN
    (
        SELECT 
            twfinstanceobject.objectid AS projectid, wfactivitydesc.displayname AS projectstate
        FROM eio_publish.tenrox_private.twfinstanceobject twfinstanceobject
        INNER JOIN
            eio_publish.tenrox_private.twfworkflowversion twfworkflowversion
            ON twfworkflowversion.uniqueid = twfinstanceobject.workflowversionid
        INNER JOIN
            eio_publish.tenrox_private.twfworkflow twfworkflow
            ON twfworkflow.uniqueid = twfworkflowversion.workflowid
        INNER JOIN
            eio_publish.tenrox_private.twfinstanceactivity AS wfinstact
            ON wfinstact.instanceguid = twfinstanceobject.instanceguid
        INNER JOIN
            eio_publish.tenrox_private.twfworkflowactivitydesc AS wfactivitydesc
            ON wfactivitydesc.workflowactivityid = wfinstact.workflowactivityid
        WHERE twfworkflow.objecttype = 501 AND wfactivitydesc.language = 0
    ) tbl_state
    ON tbl_state.projectid = tproject.uniqueid
LEFT JOIN eio_publish.tenrox_private.tportfolio tportfolio
    ON tportfolio.uniqueid = tproject.portfolioid
LEFT JOIN eio_publish.tenrox_private.tuser pm 
    ON tproject.managerid = pm.uniqueid
LEFT JOIN eio_publish.tenrox_private.tuser pmalt 
    ON tproject.alternatemgrid = pmalt.uniqueid
LEFT JOIN eio_publish.tenrox_private.tuser portman 
    ON tportfolio.managerid = portman.uniqueid
LEFT JOIN eio_publish.tenrox_private.tclient tclient 
    ON tclient.uniqueid = tproject.clientid
LEFT JOIN eio_publish.tenrox_private.tclientinvoice tclientinvoice 
    ON tclientinvoice.clientid = tproject.clientid
LEFT JOIN eio_publish.tenrox_private.tcurrency tcurrency 
    ON tcurrency.uniqueid = tclientinvoice.currencyid
  );
[0m14:46:30.702664 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:30.710574 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_const_curr_transform (execute): 2023-08-21 14:46:29.549024 => 2023-08-21 14:46:30.710544
[0m14:46:30.710719 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_const_curr_transform: Close
[0m14:46:30.796837 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:30.797889 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_project_details_transform (execute): 2023-08-21 14:46:29.547108 => 2023-08-21 14:46:30.797862
[0m14:46:30.798016 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_project_details_transform: Close
[0m14:46:30.917630 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:30.918681 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_forecast_labor_cost_rates_transform (execute): 2023-08-21 14:46:29.537730 => 2023-08-21 14:46:30.918648
[0m14:46:30.918802 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_forecast_labor_cost_rates_transform: Close
[0m14:46:30.954693 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1655e6150>]}
[0m14:46:30.955005 [info ] [Thread-1 (]: 1 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_const_curr .......... [[32mSUCCESS 1[0m in 1.43s]
[0m14:46:30.955805 [debug] [Thread-1 (]: Finished running node model.my_dbt_projects.adsk_cm_const_curr_transform
[0m14:46:30.955951 [debug] [Thread-1 (]: Began running node model.my_dbt_projects.adsk_month_q_ranges_v02_transform
[0m14:46:30.956150 [info ] [Thread-1 (]: 4 of 47 START sql view model TENROX_TRANSFORM.adsk_month_q_ranges_v02 .......... [RUN]
[0m14:46:30.956444 [debug] [Thread-1 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_month_q_ranges_v02_transform'
[0m14:46:30.956541 [debug] [Thread-1 (]: Began compiling node model.my_dbt_projects.adsk_month_q_ranges_v02_transform
[0m14:46:30.959019 [debug] [Thread-1 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_month_q_ranges_v02_transform"
[0m14:46:30.959807 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_month_q_ranges_v02_transform (compile): 2023-08-21 14:46:30.956604 => 2023-08-21 14:46:30.959780
[0m14:46:30.959904 [debug] [Thread-1 (]: Began executing node model.my_dbt_projects.adsk_month_q_ranges_v02_transform
[0m14:46:30.961845 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_month_q_ranges_v02_transform"
[0m14:46:30.961929 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_month_q_ranges_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_month_q_ranges_v02_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:30.961994 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:46:31.042946 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x16619e9d0>]}
[0m14:46:31.043260 [info ] [Thread-3 (]: 3 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_project_details ..... [[32mSUCCESS 1[0m in 1.52s]
[0m14:46:31.043436 [debug] [Thread-3 (]: Finished running node model.my_dbt_projects.adsk_cm_project_details_transform
[0m14:46:31.043564 [debug] [Thread-3 (]: Began running node model.my_dbt_projects.cust_adsk_utilization_resources_transform
[0m14:46:31.043683 [info ] [Thread-3 (]: 5 of 47 START sql view model TENROX_TRANSFORM.cust_adsk_utilization_resources .. [RUN]
[0m14:46:31.043936 [debug] [Thread-3 (]: Acquiring new snowflake connection 'model.my_dbt_projects.cust_adsk_utilization_resources_transform'
[0m14:46:31.044173 [debug] [Thread-3 (]: Began compiling node model.my_dbt_projects.cust_adsk_utilization_resources_transform
[0m14:46:31.048078 [debug] [Thread-3 (]: Writing injected SQL for node "model.my_dbt_projects.cust_adsk_utilization_resources_transform"
[0m14:46:31.049411 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.cust_adsk_utilization_resources_transform (compile): 2023-08-21 14:46:31.044362 => 2023-08-21 14:46:31.049366
[0m14:46:31.049545 [debug] [Thread-3 (]: Began executing node model.my_dbt_projects.cust_adsk_utilization_resources_transform
[0m14:46:31.051572 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.cust_adsk_utilization_resources_transform"
[0m14:46:31.051655 [debug] [Thread-3 (]: On model.my_dbt_projects.cust_adsk_utilization_resources_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.cust_adsk_utilization_resources_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:31.051731 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m14:46:31.162663 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1655e4990>]}
[0m14:46:31.162980 [info ] [Thread-2 (]: 2 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_forecast_labor_cost_rates  [[32mSUCCESS 1[0m in 1.64s]
[0m14:46:31.163154 [debug] [Thread-2 (]: Finished running node model.my_dbt_projects.adsk_cm_forecast_labor_cost_rates_transform
[0m14:46:31.163286 [debug] [Thread-2 (]: Began running node model.my_dbt_projects.fcurrqexchrate_transform
[0m14:46:31.163412 [info ] [Thread-2 (]: 6 of 47 START sql view model TENROX_TRANSFORM.fcurrqexchrate ................... [RUN]
[0m14:46:31.163726 [debug] [Thread-2 (]: Acquiring new snowflake connection 'model.my_dbt_projects.fcurrqexchrate_transform'
[0m14:46:31.163816 [debug] [Thread-2 (]: Began compiling node model.my_dbt_projects.fcurrqexchrate_transform
[0m14:46:31.165707 [debug] [Thread-2 (]: Writing injected SQL for node "model.my_dbt_projects.fcurrqexchrate_transform"
[0m14:46:31.166999 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.fcurrqexchrate_transform (compile): 2023-08-21 14:46:31.163920 => 2023-08-21 14:46:31.166964
[0m14:46:31.167112 [debug] [Thread-2 (]: Began executing node model.my_dbt_projects.fcurrqexchrate_transform
[0m14:46:31.170049 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.fcurrqexchrate_transform"
[0m14:46:31.170189 [debug] [Thread-2 (]: On model.my_dbt_projects.fcurrqexchrate_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.fcurrqexchrate_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:31.170266 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m14:46:31.657674 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:31.658606 [debug] [Thread-1 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_month_q_ranges_v02_transform"
[0m14:46:31.667984 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_month_q_ranges_v02_transform"
[0m14:46:31.668163 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_month_q_ranges_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_month_q_ranges_v02_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02
  
   as (
    
/* adsk_month_q_ranges_v02
  @RangeBegin      DATETIME = NULL
  , @RangeEnd      DATETIME = NULL
  , @CutoverDate   DATETIME = NULL      -> only @CutoverDate is specified (not null)

Unused vars in adsk_month_q_ranges_v02
  , @Placeholder04 INT = NULL
  , @Placeholder05 INT = NULL

 DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0) is only getting the 1st day of the month and can be replaced with TRUNC(CURRENT_DATE(), 'MONTH')
  
*/           
WITH month_q_ranges AS (
   SELECT 
      CURRENT_DATE()                                                       AS fnc_currentdate
      , DATE_TRUNC('W', CURRENT_DATE())-1                                  AS fnc_currentweekbegins
      , TRUNC(CURRENT_DATE(), 'month')                                     AS fnc_currentmonthbegins
      , DATEADD(month, 1, TRUNC(CURRENT_DATE(), 'MONTH'))                  AS fnc_nextmonthbegins
                   /* Define Current Quarter Begins to be used in other calculations */
                    , TO_DATE(TO_VARCHAR(CASE WHEN MONTH(CURRENT_DATE()) = 1
                                                  THEN YEAR(DATEADD(year, -1, CURRENT_DATE()))
                                              ELSE YEAR(CURRENT_DATE()) END) || '-'
                                      || CASE WHEN MONTH(CURRENT_DATE()) IN (2, 3, 4) THEN '02-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (5, 6, 7) THEN '05-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (8, 9, 10) THEN '08-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (11, 12, 1) THEN '11-01'
                     ELSE NULL END)                                         AS fnc_currentqtrbegins
      , DATEADD(month, -3, fnc_currentqtrbegins)                             AS fnc_minus1qtrbegins
      , DATEADD(month, -6, fnc_currentqtrbegins)                             AS fnc_minus2qtrbegins
      , DATEADD(month, -9, fnc_currentqtrbegins)                             AS fnc_minus3qtrbegins
      , DATEADD(month, -12, fnc_currentqtrbegins)                            AS fnc_minus4qtrbegins
      , DATEADD(month, 1, fnc_currentqtrbegins)                              AS fnc_currentqtrm2begins
      , DATEADD(month, 2, fnc_currentqtrbegins)                              AS fnc_currentqtrm3begins
      , DATEADD(month, 3, fnc_currentqtrbegins)                              AS fnc_plus1qtrbegins
      , DATEADD(month, 6, fnc_currentqtrbegins)                              AS fnc_plus2qtrbegins
      , DATEADD(month, 9, fnc_currentqtrbegins)                              AS fnc_plus3qtrbegins
      , DATEADD(month, 12, fnc_currentqtrbegins)                             AS fnc_plus4qtrbegins
      , DATEADD(month, 15, fnc_currentqtrbegins)                             AS fnc_plus5qtrbegins
      , DATEADD(month, 18, fnc_currentqtrbegins)                             AS fnc_plus6qtrbegins
      , 'FY' || CASE WHEN MONTH(fnc_currentqtrbegins) = 1
                                       THEN RIGHT(TO_VARCHAR(YEAR(fnc_currentqtrbegins)), 2)
                                   ELSE RIGHT(TO_VARCHAR(YEAR(DATEADD(year, 1, fnc_currentqtrbegins))), 2) END
                  || ' ' || CASE WHEN MONTH(fnc_currentqtrbegins) IN (2, 3, 4) THEN 'Q1'
                                 WHEN MONTH(fnc_currentqtrbegins) IN (5, 6, 7) THEN 'Q2'
                                 WHEN MONTH(fnc_currentqtrbegins) IN (8, 9, 10) THEN 'Q3'
                                 WHEN MONTH(fnc_currentqtrbegins) IN (11, 12, 1) THEN 'Q4'
                     ELSE '' 
           END                                                              AS fnc_currentqtrtitle
      , 'FY' || CASE WHEN MONTH(fnc_minus1qtrbegins) = 1
                                       THEN RIGHT(TO_VARCHAR(YEAR(fnc_minus1qtrbegins)), 2)
                                   ELSE RIGHT(TO_VARCHAR(YEAR(DATEADD(year, 1, fnc_minus1qtrbegins))), 2) END
                  || ' ' || CASE WHEN MONTH(fnc_minus1qtrbegins) IN (2, 3, 4) THEN 'Q1'
                                 WHEN MONTH(fnc_minus1qtrbegins) IN (5, 6, 7) THEN 'Q2'
                                 WHEN MONTH(fnc_minus1qtrbegins) IN (8, 9, 10) THEN 'Q3'
                                 WHEN MONTH(fnc_minus1qtrbegins) IN (11, 12, 1) THEN 'Q4'
                                 ELSE '' 
          END                                                              AS fnc_minus1qtrtitle
      , 'FY' || CASE WHEN MONTH(fnc_minus2qtrbegins) = 1
                                       THEN RIGHT(TO_VARCHAR(YEAR(fnc_minus2qtrbegins)), 2)
                                   ELSE RIGHT(TO_VARCHAR(YEAR(DATEADD(year, 1, fnc_minus2qtrbegins))), 2) END
                            || ' ' || CASE WHEN MONTH(fnc_minus2qtrbegins) IN (2, 3, 4) THEN 'Q1'
                                           WHEN MONTH(fnc_minus2qtrbegins) IN (5, 6, 7) THEN 'Q2'
                                           WHEN MONTH(fnc_minus2qtrbegins) IN (8, 9, 10) THEN 'Q3'
                                           WHEN MONTH(fnc_minus2qtrbegins) IN (11, 12, 1) THEN 'Q4'
                                           ELSE '' 
           END                                                              AS fnc_minus2qtrtitle
      , 'FY' || CASE WHEN MONTH(fnc_minus3qtrbegins) = 1
                                       THEN RIGHT(TO_VARCHAR(YEAR(fnc_minus3qtrbegins)), 2)
                                   ELSE RIGHT(TO_VARCHAR(YEAR(DATEADD(year, 1, fnc_minus3qtrbegins))), 2) END
                            || ' ' || CASE WHEN MONTH(fnc_minus3qtrbegins) IN (2, 3, 4) THEN 'Q1'
                                           WHEN MONTH(fnc_minus3qtrbegins) IN (5, 6, 7) THEN 'Q2'
                                           WHEN MONTH(fnc_minus3qtrbegins) IN (8, 9, 10) THEN 'Q3'
                                           WHEN MONTH(fnc_minus3qtrbegins) IN (11, 12, 1) THEN 'Q4'
                                           ELSE '' 
           END                                                              AS fnc_minus3qtrtitle
      , 'FY' || CASE WHEN MONTH(fnc_minus4qtrbegins) = 1
                                       THEN RIGHT(TO_VARCHAR(YEAR(fnc_minus4qtrbegins)), 2)
                                   ELSE RIGHT(TO_VARCHAR(YEAR(DATEADD(year, 1, fnc_minus4qtrbegins))), 2) END
                            || ' ' || CASE WHEN MONTH(fnc_minus4qtrbegins) IN (2, 3, 4) THEN 'Q1'
                                           WHEN MONTH(fnc_minus4qtrbegins) IN (5, 6, 7) THEN 'Q2'
                                           WHEN MONTH(fnc_minus4qtrbegins) IN (8, 9, 10) THEN 'Q3'
                                           WHEN MONTH(fnc_minus4qtrbegins) IN (11, 12, 1) THEN 'Q4'
                                           ELSE '' 
           END                                                              AS fnc_minus4qtrtitle
      , 'FY' || CASE WHEN MONTH(fnc_plus1qtrbegins) = 1
                                       THEN RIGHT(TO_VARCHAR(YEAR(fnc_plus1qtrbegins)), 2)
                                   ELSE RIGHT(TO_VARCHAR(YEAR(DATEADD(year, 1, fnc_plus1qtrbegins))), 2) END
                            || ' ' || CASE WHEN MONTH(fnc_plus1qtrbegins) IN (2, 3, 4) THEN 'Q1'
                                           WHEN MONTH(fnc_plus1qtrbegins) IN (5, 6, 7) THEN 'Q2'
                                           WHEN MONTH(fnc_plus1qtrbegins) IN (8, 9, 10) THEN 'Q3'
                                           WHEN MONTH(fnc_plus1qtrbegins) IN (11, 12, 1) THEN 'Q4'
                                           ELSE '' 
           END                                                              AS fnc_plus1qtrtitle
      , 'FY' || CASE WHEN MONTH(fnc_plus2qtrbegins) = 1
                                       THEN RIGHT(TO_VARCHAR(YEAR(fnc_plus2qtrbegins)), 2)
                                   ELSE RIGHT(TO_VARCHAR(YEAR(DATEADD(year, 1, fnc_plus2qtrbegins))), 2) END
                       || ' ' || CASE WHEN MONTH(fnc_plus2qtrbegins) IN (2, 3, 4) THEN 'Q1'
                                      WHEN MONTH(fnc_plus2qtrbegins) IN (5, 6, 7) THEN 'Q2'
                                      WHEN MONTH(fnc_plus2qtrbegins) IN (8, 9, 10) THEN 'Q3'
                                      WHEN MONTH(fnc_plus2qtrbegins) IN (11, 12, 1) THEN 'Q4'
                                      ELSE '' 
           END                                                              AS fnc_plus2qtrtitle
      , 'FY' || CASE WHEN MONTH(fnc_plus3qtrbegins) = 1
                                       THEN RIGHT(TO_VARCHAR(YEAR(fnc_plus3qtrbegins)), 2)
                                   ELSE RIGHT(TO_VARCHAR(YEAR(DATEADD(year, 1, fnc_plus3qtrbegins))), 2) END
                       || ' ' || CASE WHEN MONTH(fnc_plus3qtrbegins) IN (2, 3, 4) THEN 'Q1'
                                      WHEN MONTH(fnc_plus3qtrbegins) IN (5, 6, 7) THEN 'Q2'
                                      WHEN MONTH(fnc_plus3qtrbegins) IN (8, 9, 10) THEN 'Q3'
                                      WHEN MONTH(fnc_plus3qtrbegins) IN (11, 12, 1) THEN 'Q4'
                                      ELSE '' 
           END                                                              AS fnc_plus3qtrtitle
      , 'FY' || CASE WHEN MONTH(fnc_plus4qtrbegins) = 1
                                       THEN RIGHT(TO_VARCHAR(YEAR(fnc_plus4qtrbegins)), 2)
                                   ELSE RIGHT(TO_VARCHAR(YEAR(DATEADD(year, 1, fnc_plus4qtrbegins))), 2) END
                       || ' ' || CASE WHEN MONTH(fnc_plus4qtrbegins) IN (2, 3, 4) THEN 'Q1'
                                      WHEN MONTH(fnc_plus4qtrbegins) IN (5, 6, 7) THEN 'Q2'
                                      WHEN MONTH(fnc_plus4qtrbegins) IN (8, 9, 10) THEN 'Q3'
                                      WHEN MONTH(fnc_plus4qtrbegins) IN (11, 12, 1) THEN 'Q4'
                                      ELSE '' 
           END                                                               AS fnc_plus4qtrtitle
      , MONTHNAME(CURRENT_DATE()) || ' ' || YEAR(CURRENT_DATE())             AS fnc_currentmonthtitle
      , MONTHNAME(fnc_currentqtrbegins) || ' ' || YEAR(fnc_currentqtrbegins) AS fnc_currentqtrm1title
      , MONTHNAME(DATEADD(month, 1, fnc_currentqtrbegins)) || ' '
           || YEAR(DATEADD(month, 1, fnc_currentqtrbegins))                  AS fnc_currentqtrm2title
      , MONTHNAME(DATEADD(month, 2, fnc_currentqtrbegins)) || ' ' 
           || YEAR(DATEADD(month, 2, fnc_currentqtrbegins))                  AS fnc_currentqtrm3title
      , 6                                                                    AS sqlversion_month_q_ranges
)

SELECT 
     fnc_currentdate
     , fnc_currentweekbegins
     , fnc_currentmonthbegins
     , fnc_nextmonthbegins
     , fnc_minus1qtrbegins
     , fnc_minus2qtrbegins
     , fnc_minus3qtrbegins
     , fnc_minus4qtrbegins
     , fnc_currentqtrbegins
     , fnc_currentqtrm2begins
     , fnc_currentqtrm3begins
     , fnc_plus1qtrbegins
     , fnc_plus2qtrbegins
     , fnc_plus3qtrbegins
     , fnc_plus4qtrbegins
     , fnc_plus5qtrbegins
     , fnc_plus6qtrbegins
     , '1900-01-01'                                                                 AS fnc_hist_customrangebegin
     , IFNULL(TO_DATE(TO_VARCHAR(CASE WHEN MONTH(CURRENT_DATE()) = 1 THEN YEAR(DATEADD(year, -1, CURRENT_DATE()))
                                      ELSE YEAR(CURRENT_DATE()) END) || '-' || '02-01'),
              TRUNC(CURRENT_DATE(), 'MONTH'))                                       AS fnc_hist_customrangeend
     , IFNULL(TO_DATE(TO_VARCHAR(CASE WHEN MONTH(CURRENT_DATE()) = 1 THEN YEAR(DATEADD(year, -1, CURRENT_DATE()))
                                      ELSE YEAR(CURRENT_DATE()) END) || '-' || '02-01'),
              TRUNC(CURRENT_DATE(), 'MONTH'))                                       AS fnc_fcst_customrangebegin
     , '3333-12-31'                                                                 AS fnc_fcst_customrangeend
     , fnc_minus1qtrtitle
     , fnc_minus2qtrtitle
     , fnc_minus3qtrtitle
     , fnc_minus4qtrtitle
     , fnc_plus1qtrtitle
     , fnc_plus2qtrtitle
     , fnc_plus3qtrtitle
     , fnc_plus4qtrtitle
     , fnc_currentmonthtitle
     , fnc_currentqtrm1title
     , fnc_currentqtrm2title
     , fnc_currentqtrm3title
     , sqlversion_month_q_ranges
FROM month_q_ranges
  );
[0m14:46:31.751667 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:31.752544 [debug] [Thread-3 (]: Writing runtime sql for node "model.my_dbt_projects.cust_adsk_utilization_resources_transform"
[0m14:46:31.756496 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.cust_adsk_utilization_resources_transform"
[0m14:46:31.756652 [debug] [Thread-3 (]: On model.my_dbt_projects.cust_adsk_utilization_resources_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.cust_adsk_utilization_resources_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.cust_adsk_utilization_resources
  
   as (
    

/* CUST_ADSK_UTILIZATION_RESOURCES.sql
  @BatchSize           INT = 10000
  , @BatchNumber       INT = 0
  , @TerminationCutoff DATETIME = '2014-02-01'
  @SQLScriptVersion = 5
  CUST_ADSK_UTILIZATION_RESOURCES.sql Uses LEFT JOIN for non foregn currency exchange rate and month ranges joins
  The rest of the output tables in eio_publish.tenrox_private are left AS they are, that is; using LEFT OUTER JOIN
*/

WITH tmp_cust_adsk_utilization_resources AS (
    SELECT
          ROW_NUMBER()
                OVER (
                    ORDER BY tuser.uniqueid) AS rownumber
          , tuser.uniqueid                               AS userid
         -- catch employee id = '00001' and employee id = ''
          , CASE WHEN tuser.id = '00001' THEN '1'
                 WHEN tuser.id = '' THEN NULL
                 ELSE tuser.id END                       AS employeeid
          , tuser.lastname                               AS userlastname
          , tuser.firstname                              AS userfirstname
          , tuser.emailaddress                           AS email
          , site_master.name                             AS mastersite
          , site_active.name                             AS activesite
          , ttitle.name                                  AS title
          , group_app.name                               AS approvalgroup
          , NVL(group_appman.lastname, '') || ', '
                || NVL(group_appman.firstname, '')       AS approvalgroupmanager
          , group_funct.name                             AS functionalgroup
          , NVL(group_functman.lastname, '') || ', '
                || NVL(group_functman.firstname, '')     AS functionalgroupmanager
          , tholidayset.name                             AS holidayset
          , mapdata_secgroup.fielddesc                   AS securityrole
          , mapdata_usertype.fielddesc                   AS usertype
          , TO_DATE(tuser.datehired)                     AS hiredate
          , TO_DATE(tuser.servicedate)                   AS servicedate
          , CASE WHEN tuser.terminationdate = TO_DATE('2737-11-27') THEN NULL
                 ELSE TO_DATE(tuser.terminationdate) END AS terminationdate
         --, CONVERT(money, tuser.forecastcost, 1)       AS forecastedcostrate
         --, CONVERT(money, tuser.forecastbill, 1)       AS forecastedbillingrate
          , to_decimal(tuser.forecastcost)               AS forecastedcostrate
          , to_decimal(tuser.forecastbill)               AS forecastedbillingrate
          , CASE tuser.useraccessstatus WHEN 1 THEN 1
                                        ELSE 0 END       AS userisactive
          , tusercustfld.adsk_usertimetimefactor         AS usertimefactor
          , tusercustfld.adsk_utilizationtarget          AS userutilizationtarget
          , costrulerate.currentratecurrencycode         AS currentratecurrencycode
          , costrulerate.currentrate                     AS currentrate
          , TO_DATE(costrulerate.rateeffectivedate)      AS rateeffectivedate
          --, @sqlscriptversion AS sqlscriptversion
          , 5                                            AS sqlscriptversion
      FROM eio_publish.tenrox_private.tuser tuser
      LEFT JOIN eio_publish.tenrox_private.tsite site_active
          ON site_active.uniqueid = tuser.activesiteid
      LEFT JOIN eio_publish.tenrox_private.tsite site_master 
          ON site_master.uniqueid = tuser.siteid 
      LEFT JOIN eio_publish.tenrox_private.ttitle ttitle 
          ON ttitle.uniqueid = tuser.titleid 
      LEFT JOIN eio_publish.tenrox_private.tgroup group_app 
          ON group_app.uniqueid = tuser.groupid 
      LEFT JOIN eio_publish.tenrox_private.tuser group_appman 
          ON group_appman.uniqueid = group_app.manageruniqueid 
      LEFT JOIN eio_publish.tenrox_private.tgroup group_funct 
          ON group_funct.uniqueid = tuser.functionalgroupid 
      LEFT JOIN eio_publish.tenrox_private.tuser group_functman 
          ON group_functman.uniqueid = group_funct.manageruniqueid
      LEFT JOIN eio_publish.tenrox_private.tholidayset tholidayset 
          ON tholidayset.uniqueid = tuser.holidayset 
      LEFT JOIN eio_publish.tenrox_private.tmapdata mapdata_secgroup 
          ON mapdata_secgroup.fieldkey = tuser.security 
      -- AND MAPDATA_SECGROUP.LANGUAGE = 0
      -- AND MAPDATA_SECGROUP.TABLENAME = 'SECURITY'
      LEFT JOIN eio_publish.tenrox_private.tmapdata mapdata_usertype 
          ON mapdata_usertype.fieldkey = tuser.usertype 
      -- AND MAPDATA_USERTYPE.LANGUAGE = 0
      -- AND MAPDATA_USERTYPE.TABLENAME = 'USERTYPE'
      LEFT JOIN eio_publish.tenrox_private.tusercustfld tusercustfld 
          ON tusercustfld.userid = tuser.uniqueid
      LEFT JOIN (SELECT 
                    trateassociated.ownuserid       AS resourceid
                     , tcurrency.currencycode       AS currentratecurrencycode
                     , trateruleentry.rate1         AS currentrate
                     , CASE 
                         WHEN trateruleentry.datefrom < trateassociated.datefrom THEN trateassociated.datefrom
                         ELSE trateruleentry.datefrom 
                       END                          AS rateeffectivedate
                FROM eio_publish.tenrox_private.traterule traterule
                INNER JOIN eio_publish.tenrox_private.trateassociated trateassociated
                    ON trateassociated.rateruleid = traterule.uniqueid
                INNER JOIN eio_publish.tenrox_private.trateruleentry trateruleentry 
                    ON trateruleentry.rateruleid = traterule.uniqueid 
                INNER JOIN eio_publish.tenrox_private.tcurrency tcurrency 
                    ON tcurrency.uniqueid = traterule.currencyid
                INNER JOIN ( SELECT trateassociated.ownuserid, max(trateassociated.uniqueid) 
                    AS maxuid FROM eio_publish.tenrox_private.trateassociated trateassociated 
                GROUP BY trateassociated.ownuserid ) AS mostrecent 
                        ON mostrecent.ownuserid = trateassociated.ownuserid 
                        AND mostrecent.maxuid = trateassociated.uniqueid
                   ) AS costrulerate
                   ON costrulerate.resourceid = tuser.uniqueid
      WHERE IFNULL(tuser.id, '') IS NOT NULL
                  /* Original: AND ISNULL(TUSER.TERMINATIONDATE, '2737-11-27') >= @TerminationCutoff
                     Snowflake: AND IFNULL(TO_DATE(TUSER.TERMINATIONDATE), DATE'2737-11-27') >= DATE'2014-02-01'
                  Note: Having this conditional clause excludes some employee_id values from BSD_PUBLISH version of UTILIZATION_RESOURCE table
                  */
                  AND tuser.usertype = 'EMPLOYEE' 
                  AND tuser.useraccessstatus <> 100 
                  AND tuser.isadministrator <> 1
                  AND tuser.isdefaultuser <> 1 
                  AND tuser.lastname <> 'Administrator' 
                  AND tuser.lastname NOT LIKE '0-Sys Conv%'
                  AND tuser.lastname NOT LIKE '%3rd Party%' 
                  AND tuser.lastname NOT LIKE '1-%' 
                  AND mapdata_secgroup.language = 0
                  AND mapdata_secgroup.tablename = 'SECURITY' 
                  AND mapdata_usertype.language = 0
                  AND mapdata_usertype.tablename = 'USERTYPE'
        ORDER BY
          tuser.uniqueid
)
SELECT 
     rownumber
     , userid
     , employeeid
     , userlastname
     , userfirstname
     , email
     , mastersite
     , activesite
     , title
     , approvalgroup
     , approvalgroupmanager
     , functionalgroup
     , functionalgroupmanager
     , holidayset
     , securityrole
     , usertype
     , hiredate
     , servicedate
     , terminationdate
     , forecastedcostrate
     , forecastedbillingrate
     , userisactive
     , usertimefactor
     , userutilizationtarget
     , currentratecurrencycode
     , currentrate
     , rateeffectivedate
     , 1::BOOLEAN AS wasnewtable
     , sqlscriptversion
FROM tmp_cust_adsk_utilization_resources
     -- WHERE  RowNumber >= (0 * 10000) + 1
     -- AND RowNumber < (0 * 10000) + 10000 + 1
WHERE employeeid IS NOT NULL -- no NULL values for column 'employee_id' in BSD_PUBLISH.tenrox_private.TENROX_UTILIZATION_RESOURCES  
ORDER BY rownumber
  );
[0m14:46:31.917786 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:31.919829 [debug] [Thread-2 (]: Writing runtime sql for node "model.my_dbt_projects.fcurrqexchrate_transform"
[0m14:46:31.920863 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.fcurrqexchrate_transform"
[0m14:46:31.920997 [debug] [Thread-2 (]: On model.my_dbt_projects.fcurrqexchrate_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.fcurrqexchrate_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate
  
   as (
    
/* FCURRQEXCHRATE.sql
	@PBASECURRID INTEGER,
	@PQUOTECURRID INTEGER,
	@PDATE DATETIME

TOP 1 not included from original since the FX rate record row is selected via the ff:
  WHERE dbo.TCURRASSOC.BASECURRENCYID=@PBASECURRID
	  AND dbo.TCURRASSOC.QUOTECURRENCYID=@PQUOTECURRID
	  AND @PDATE BETWEEN dbo.TCURRRATE.STARTDATE AND dbo.TCURRRATE.ENDDATE
*/

SELECT
    ta.basecurrencyid
    , ta.quotecurrencyid
    , tc.rate
    , tc.startdate
    , tc.enddate
FROM eio_publish.tenrox_private.tcurrassoc AS ta
JOIN eio_publish.tenrox_private.tcurrrate AS tc ON ta.uniqueid = tc.curassocid 
ORDER BY tc.startdate DESC
  );
[0m14:46:31.960452 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:31.961430 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_month_q_ranges_v02_transform (execute): 2023-08-21 14:46:30.959966 => 2023-08-21 14:46:31.961406
[0m14:46:31.961531 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_month_q_ranges_v02_transform: Close
[0m14:46:32.113956 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:32.115015 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.cust_adsk_utilization_resources_transform (execute): 2023-08-21 14:46:31.049610 => 2023-08-21 14:46:32.114990
[0m14:46:32.115144 [debug] [Thread-3 (]: On model.my_dbt_projects.cust_adsk_utilization_resources_transform: Close
[0m14:46:32.152100 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:32.153061 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.fcurrqexchrate_transform (execute): 2023-08-21 14:46:31.167177 => 2023-08-21 14:46:32.153038
[0m14:46:32.153167 [debug] [Thread-2 (]: On model.my_dbt_projects.fcurrqexchrate_transform: Close
[0m14:46:32.213824 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1101e8f90>]}
[0m14:46:32.214129 [info ] [Thread-1 (]: 4 of 47 OK created sql view model TENROX_TRANSFORM.adsk_month_q_ranges_v02 ..... [[32mSUCCESS 1[0m in 1.26s]
[0m14:46:32.214310 [debug] [Thread-1 (]: Finished running node model.my_dbt_projects.adsk_month_q_ranges_v02_transform
[0m14:46:32.214442 [debug] [Thread-1 (]: Began running node model.my_dbt_projects.tprojectcustfld_view_transform
[0m14:46:32.214756 [info ] [Thread-1 (]: 7 of 47 START sql view model TENROX_TRANSFORM.tprojectcustfld_view ............. [RUN]
[0m14:46:32.215054 [debug] [Thread-1 (]: Acquiring new snowflake connection 'model.my_dbt_projects.tprojectcustfld_view_transform'
[0m14:46:32.215140 [debug] [Thread-1 (]: Began compiling node model.my_dbt_projects.tprojectcustfld_view_transform
[0m14:46:32.218180 [debug] [Thread-1 (]: Writing injected SQL for node "model.my_dbt_projects.tprojectcustfld_view_transform"
[0m14:46:32.220135 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.tprojectcustfld_view_transform (compile): 2023-08-21 14:46:32.215198 => 2023-08-21 14:46:32.220091
[0m14:46:32.220271 [debug] [Thread-1 (]: Began executing node model.my_dbt_projects.tprojectcustfld_view_transform
[0m14:46:32.222496 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.tprojectcustfld_view_transform"
[0m14:46:32.222583 [debug] [Thread-1 (]: On model.my_dbt_projects.tprojectcustfld_view_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.tprojectcustfld_view_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:32.222720 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:46:32.351489 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165f33190>]}
[0m14:46:32.351765 [info ] [Thread-3 (]: 5 of 47 OK created sql view model TENROX_TRANSFORM.cust_adsk_utilization_resources  [[32mSUCCESS 1[0m in 1.31s]
[0m14:46:32.352028 [debug] [Thread-3 (]: Finished running node model.my_dbt_projects.cust_adsk_utilization_resources_transform
[0m14:46:32.352185 [debug] [Thread-3 (]: Began running node model.my_dbt_projects.viewprojectlist_transform
[0m14:46:32.352382 [info ] [Thread-3 (]: 8 of 47 START sql view model TENROX_TRANSFORM.viewprojectlist .................. [RUN]
[0m14:46:32.352686 [debug] [Thread-3 (]: Acquiring new snowflake connection 'model.my_dbt_projects.viewprojectlist_transform'
[0m14:46:32.352778 [debug] [Thread-3 (]: Began compiling node model.my_dbt_projects.viewprojectlist_transform
[0m14:46:32.360785 [debug] [Thread-3 (]: Writing injected SQL for node "model.my_dbt_projects.viewprojectlist_transform"
[0m14:46:32.361844 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.viewprojectlist_transform (compile): 2023-08-21 14:46:32.352834 => 2023-08-21 14:46:32.361795
[0m14:46:32.361992 [debug] [Thread-3 (]: Began executing node model.my_dbt_projects.viewprojectlist_transform
[0m14:46:32.363929 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.viewprojectlist_transform"
[0m14:46:32.364015 [debug] [Thread-3 (]: On model.my_dbt_projects.viewprojectlist_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.viewprojectlist_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:32.364081 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m14:46:32.403061 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1661de7d0>]}
[0m14:46:32.403348 [info ] [Thread-2 (]: 6 of 47 OK created sql view model TENROX_TRANSFORM.fcurrqexchrate .............. [[32mSUCCESS 1[0m in 1.24s]
[0m14:46:32.403513 [debug] [Thread-2 (]: Finished running node model.my_dbt_projects.fcurrqexchrate_transform
[0m14:46:32.403642 [debug] [Thread-2 (]: Began running node model.my_dbt_projects.cust_adsk_servicesimpact_actuals_transform
[0m14:46:32.404164 [info ] [Thread-2 (]: 9 of 47 START sql view model TENROX_TRANSFORM.cust_adsk_servicesimpact_actuals . [RUN]
[0m14:46:32.404553 [debug] [Thread-2 (]: Acquiring new snowflake connection 'model.my_dbt_projects.cust_adsk_servicesimpact_actuals_transform'
[0m14:46:32.404673 [debug] [Thread-2 (]: Began compiling node model.my_dbt_projects.cust_adsk_servicesimpact_actuals_transform
[0m14:46:32.407151 [debug] [Thread-2 (]: Writing injected SQL for node "model.my_dbt_projects.cust_adsk_servicesimpact_actuals_transform"
[0m14:46:32.408209 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.cust_adsk_servicesimpact_actuals_transform (compile): 2023-08-21 14:46:32.404739 => 2023-08-21 14:46:32.408168
[0m14:46:32.408338 [debug] [Thread-2 (]: Began executing node model.my_dbt_projects.cust_adsk_servicesimpact_actuals_transform
[0m14:46:32.410224 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.cust_adsk_servicesimpact_actuals_transform"
[0m14:46:32.410313 [debug] [Thread-2 (]: On model.my_dbt_projects.cust_adsk_servicesimpact_actuals_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.cust_adsk_servicesimpact_actuals_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:32.410380 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m14:46:32.951325 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:32.952215 [debug] [Thread-1 (]: Writing runtime sql for node "model.my_dbt_projects.tprojectcustfld_view_transform"
[0m14:46:32.954825 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.tprojectcustfld_view_transform"
[0m14:46:32.954923 [debug] [Thread-1 (]: On model.my_dbt_projects.tprojectcustfld_view_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.tprojectcustfld_view_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.tprojectcustfld_view
  
   as (
    
/* TPROJECTCUSTFLD_VIEW UDFs used in
    adsk_cm_project_budget_V02
    CUST_ADSK_MARGINVARIANCE
    CUST_ADSK_SERVICESIMPACT_PROJECTDETAILS

*/


SELECT
     a.projectid
     , a.adsk_geo
     , a.hourly_rate_contractcurrency_adsk                                                                          AS hourly_rate_contractcurrency
     , a.hourly_rate_usd                                                                                      AS hourly_rate_usd
     , a.Total_Planned_Rev_USD_ADSK                                                                                 AS total_planned_rev_usd_adsk
     , IFNULL(tsite3.name, SPACE(0))                                                                                AS adsk_geo_name
     , IFNULL(tsite3.id, '')                                                                                        AS adsk_geo__id__
     , a.adsk_sap_project_id
     , IFNULL(lstdesc_11.value, '')                                                                                 AS adsk_projaccountant
     , IFNULL(lst_11.id, '')                                                                                        AS adsk_projaccountant__id__
--      , IFNULL(lstdesc_12.value, '')                                                                                 AS adsk_contractingentity
--      , IFNULL(lst_12.id, '')                                                                                        AS adsk_contractingentity__id__
     , IFNULL(lstdesc_16.value, '')                                                                                 AS adsk_masteragreement_projecttype
     , IFNULL(lst_16.id, '')                                                                                        AS adsk_masteragreement_projecttype__id__
     , IFNULL(lstdesc_20.value, '')                                                                                 AS adsk_revrectreatment
     , IFNULL(lst_20.id, '')                                                                                        AS adsk_revrectreatment__id__
--      , a.adsk_master_contractdate
     , a.adsk_contractenddate
     , a.adsk_contractstartdate
     , IFNULL(lstdesc_36.value, '')                                                                                 AS adsk_accountingcontracttype
     , IFNULL(lst_36.id, '')                                                                                        AS adsk_accountingcontracttype__id__
     , a.adsk_planned_end_date
FROM eio_publish.tenrox_private.tprojectcustfld AS a
LEFT JOIN eio_publish.tenrox_private.tsite AS tsite3
    ON a.adsk_geo = tsite3.uniqueid
LEFT JOIN eio_publish.tenrox_private.tcustlst AS lst_11 
    ON a.adsk_projaccountant = lst_11.uniqueid
LEFT JOIN eio_publish.tenrox_private.tcustlstdesc AS lstdesc_11 
    ON lst_11.uniqueid = lstdesc_11.custlstid AND lstdesc_11.language = 0
LEFT JOIN eio_publish.tenrox_private.tcustlst AS lst_16 
    ON a.adsk_masteragreement_projecttype = lst_16.uniqueid
LEFT JOIN eio_publish.tenrox_private.tcustlstdesc AS lstdesc_16 
    ON lst_16.uniqueid = lstdesc_16.custlstid AND lstdesc_16.language = 0
LEFT JOIN eio_publish.tenrox_private.tcustlst AS lst_20 
    ON a.adsk_revrectreatment = lst_20.uniqueid 
LEFT JOIN eio_publish.tenrox_private.tcustlstdesc AS lstdesc_20 
    ON lst_20.uniqueid = lstdesc_20.custlstid AND lstdesc_20.language = 0
LEFT JOIN eio_publish.tenrox_private.tcustlst AS lst_36 
    ON a.adsk_accountingcontracttype = lst_36.uniqueid 
LEFT JOIN eio_publish.tenrox_private.tcustlstdesc AS lstdesc_36 
    ON lst_36.uniqueid = lstdesc_36.custlstid AND lstdesc_36.language = 0
  );
[0m14:46:33.060008 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:33.060876 [debug] [Thread-3 (]: Writing runtime sql for node "model.my_dbt_projects.viewprojectlist_transform"
[0m14:46:33.086734 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.viewprojectlist_transform"
[0m14:46:33.086897 [debug] [Thread-3 (]: On model.my_dbt_projects.viewprojectlist_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.viewprojectlist_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.viewprojectlist
  
   as (
    

/* viewprojectlist UDFs used in

*/

WITH ttask AS (
    SELECT * FROM eio_publish.tenrox_private.ttask
    ),
     ttimeentry AS (
         SELECT * FROM eio_publish.tenrox_private.ttimeentry
         ),
     tmilest AS (
         SELECT * FROM eio_publish.tenrox_private.tmilest
         ),
     tprojectteamresource AS (
         SELECT * FROM eio_publish.tenrox_private.tprojectteamresource
         ),
     tproject AS (
         SELECT * FROM eio_publish.tenrox_private.tproject
         ),
     tsysdefs AS (
         SELECT * FROM eio_publish.tenrox_private.tsysdefs
         ),
     tcurrency AS (
         SELECT * FROM eio_publish.tenrox_private.tcurrency
         ),
     tworkflowmap AS (
         SELECT * FROM eio_publish.tenrox_private.tworkflowmap
         ),
     tclient AS (
         SELECT * FROM eio_publish.tenrox_private.tclient
         ),
     tclientinvoice AS (
         SELECT * FROM eio_publish.tenrox_private.tclientinvoice
         ),
     tcurrassoc AS (
         SELECT * FROM eio_publish.tenrox_private.tcurrassoc
         ),
     tcurrrate AS (
         SELECT * FROM eio_publish.tenrox_private.tcurrrate
         ),
     tbudgetdetail AS (
         SELECT * FROM eio_publish.tenrox_private.tbudgetdetail
         ),
     tcurrency AS (
         SELECT * FROM eio_publish.tenrox_private.tcurrency
         ),
     tportfolio AS (
         SELECT * FROM eio_publish.tenrox_private.tportfolio
         ),
     tuser AS (
         SELECT * FROM eio_publish.tenrox_private.tuser
         ),
     tinvoiceproj AS (
         SELECT * FROM eio_publish.tenrox_private.tinvoiceproj
         ),
     tinvoicetask AS (
         SELECT * FROM eio_publish.tenrox_private.tinvoicetask
         ),
     tinvoicetime AS (
         SELECT * FROM eio_publish.tenrox_private.tinvoicetime
         ),
     tinvoiceexp AS (
         SELECT * FROM eio_publish.tenrox_private.tinvoiceexp
         ),
     tinvoicechrg AS (
         SELECT * FROM eio_publish.tenrox_private.tinvoicechrg
         ),
     texpentry AS (
         SELECT * FROM eio_publish.tenrox_private.texpentry
         ),
     tchargeentry AS (
         SELECT * FROM eio_publish.tenrox_private.tchargeentry
         ),
     tcharge AS (
         SELECT * FROM eio_publish.tenrox_private.tcharge
         ),
     ttimeentryrate AS (
         SELECT * FROM eio_publish.tenrox_private.ttimeentryrate
         ),
     tbudgetdetailentry AS (
         SELECT * FROM eio_publish.tenrox_private.tbudgetdetailentry
         ),
     tbudgetdetaillist AS (
         SELECT * FROM eio_publish.tenrox_private.tbudgetdetaillist
         ),
     tnote AS (
         SELECT * FROM eio_publish.tenrox_private.tnote
         ),
     tobjfldlink AS (
         SELECT * FROM eio_publish.tenrox_private.tobjfldlink
         ),
     tfolderitem AS (
         SELECT * FROM eio_publish.tenrox_private.tfolderitem
         ),
     viewbudgetdetaillist  AS (
         SELECT tbudgetdetail.objectid
              , tbudgetdetail.objecttype
              , tbudgetdetail.costcurrencyid
              , tbudgetdetail.billcurrencyid
              , tbudgetdetaillist.uniqueid          AS budgetlistuid
              , tbudgetdetaillist.name              AS budgetlistname
              , tbudgetdetaillist.startdate         AS budgetliststartdate
              , tbudgetdetaillist.enddate           AS budgetlistenddate
              , tbudgetdetaillist.description       AS budgetlistdesc
              , tbudgetdetaillist.ratecosttobasecur AS ratecosttobasecur
              , tbudgetdetaillist.ratebilltobasecur AS ratetocbillcur
              , tbudgetdetaillist.ratetocostcur     AS ratetocostcur
              , tbudgetdetaillist.ratetobillcur     AS ratetobillcur
              , COUNT(*)                        AS number
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype IS NULL
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrenttime
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype IS NULL
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselinetime
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype = 3
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrentbillabletime
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype = 3
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselinebillabletime
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype = 4
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrentnonbillabletime
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype = 4
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselinenonbillabletime
--cost root
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype IS NULL
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrentcostprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype IS NULL
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselinecostprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype IS NULL
                                   THEN tbudgetdetailentry.currentvalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetcurrentcostbasecurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype IS NULL
                                   THEN tbudgetdetailentry.baselinevalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetbaselinecostbasecurrency


--cost time
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 4 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrentcostprojtimecostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 4 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselinecostprojtimecostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 4 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetcurrenttimecostbasecurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 4 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetbaselinetimecostbasecurrency
--cost expense
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 1 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrentexpensecostprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 1 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselineexpensecostprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 1 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetcurrentexpensecostbasecurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 1 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetbaselineexpensecostbasecurrency

--cost charge
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrentchargecostprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselinechargecostprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetcurrentchargecostbasecurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetbaselinechargecostbasecurrency
--cost product
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 3 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrentproductcostprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 3 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselineproductcostprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 3 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetcurrentproductcostbasecurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 3 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetbaselineproductcostbasecurrency

--billable root
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype IS NULL
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrentbillableclientcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype IS NULL
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselinebillableclientcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype IS NULL
                                   THEN tbudgetdetailentry.currentvalue * tbudgetdetaillist.ratebilltobasecur
                               ELSE 0 END, 0))      AS budgetcurrentbillablebasecurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype IS NULL
                                   THEN tbudgetdetailentry.baselinevalue * tbudgetdetaillist.ratebilltobasecur
                               ELSE 0 END, 0))      AS budgetbaselinebillablebasecurrency

--billable time
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 4 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrenttimebillableclientcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 4 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselinetimebillableclientcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 4 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue * tbudgetdetaillist.ratebilltobasecur
                               ELSE 0 END, 0))      AS budgetcurrenttimebillablebasecurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 4 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue * tbudgetdetaillist.ratebilltobasecur
                               ELSE 0 END, 0))      AS budgetbaselinetimebillablebasecurrency
--billable expense
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 1 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrentexpensebillableclientcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 1 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselineexpensebillableclientcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 1 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue * tbudgetdetaillist.ratebilltobasecur
                               ELSE 0 END, 0))      AS budgetcurrentexpensebillablebasecurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 1 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue * tbudgetdetaillist.ratebilltobasecur
                               ELSE 0 END, 0))      AS budgetbaselineexpensebillablebasecurrency
--billable charge
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrentchargebillableclientcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselinechargebillableclientcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue * tbudgetdetaillist.ratebilltobasecur
                               ELSE 0 END, 0))      AS budgetcurrentchargebillablebasecurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue * tbudgetdetaillist.ratebilltobasecur
                               ELSE 0 END, 0))      AS budgetbaselinechargebillablebasecurrency
--billable product
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 3 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrentproductbillableclientcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 3 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselineproductbillableclientcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 3 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue * tbudgetdetaillist.ratebilltobasecur
                               ELSE 0 END, 0))      AS budgetcurrentproductbillablebasecurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 3 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue * tbudgetdetaillist.ratebilltobasecur
                               ELSE 0 END, 0))      AS budgetbaselineproductbillablebasecurrency

--nonbillable root
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype IS NULL
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrentnonbillableprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype IS NULL
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselinenonbillableprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype IS NULL
                                   THEN tbudgetdetailentry.currentvalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetcurrentnonbillablebasecurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype IS NULL
                                   THEN tbudgetdetailentry.baselinevalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetbaselinenonbillablebasecurrency
--nonbillable time
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 4 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrenttimenonbillableprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 4 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselinetimenonbillableprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 4 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetcurrenttimenonbillablebasecurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 4 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetbaselinetimenonbillablebasecurrency

--nonbillable expense
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 1 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrentexpensenonbillableprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 1 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselineexpensenonbillableprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 1 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetcurrentexpensenonbillablebasecurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 1 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetbaselineexpensenonbillablebasecurrency
--nonbillable charge
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 2 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrentchargenonbillableprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 2 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselinechargenonbillableprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 2 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetcurrentchargenonbillablebasecurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 2 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetbaselinechargenonbillablebasecurrency

--nonbillable product
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 3 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue
                               ELSE 0 END, 0))      AS budgetcurrentproductnonbillableprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 3 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue
                               ELSE 0 END, 0))      AS budgetbaselineproductnonbillableprojcostcurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 3 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.currentvalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetcurrentproductnonbillablebasecurrency
              , SUM(COALESCE(CASE
                               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 3 and
                                    tbudgetdetailentry.objectid IS NULL
                                   THEN tbudgetdetailentry.baselinevalue * tbudgetdetaillist.ratecosttobasecur
                               ELSE 0 END, 0))      AS budgetbaselineproductnonbillablebasecurrency

         FROM tbudgetdetailentry
                  JOIN tbudgetdetaillist ON tbudgetdetaillist.uniqueid = tbudgetdetailentry.budgetdetailedlistid
                  JOIN tbudgetdetail ON tbudgetdetail.uniqueid = tbudgetdetaillist.budgetdetailedid
         GROUP BY tbudgetdetail.objectid, tbudgetdetail.objecttype, tbudgetdetail.costcurrencyid
                , tbudgetdetaillist.uniqueid, tbudgetdetaillist.name, tbudgetdetaillist.startdate
                , tbudgetdetaillist.enddate, tbudgetdetaillist.description, tbudgetdetaillist.startdate
                , tbudgetdetaillist.enddate
                , tbudgetdetaillist.ratecosttobasecur, tbudgetdetaillist.ratetocostcur
                , tbudgetdetaillist.ratebilltobasecur
                , tbudgetdetail.billcurrencyid, tbudgetdetaillist.ratetobillcur
         ),
     viewbudgetdetailtotals_proj AS (
         SELECT 2                                                            objecttype
              , budgetinfo.objectid                                          objectid
              , SUM(budgetinfo.budgetcurrenttime)                         AS bdgtimecurrent
              , SUM(budgetinfo.budgetbaselinetime)                        AS bdgtimebaseline
              , SUM(budgetinfo.budgetcurrentbillabletime)                 AS bdgtimebillcurrent
              , SUM(budgetinfo.budgetbaselinebillabletime)                AS bdgtimebillbaseline
              , SUM(budgetinfo.budgetcurrentnonbillabletime)              AS bdgtimenonbillcurrent
              , SUM(budgetinfo.budgetbaselinenonbillabletime)             AS bdgtimenonbillbaseline
              , SUM(budgetinfo.budgetcurrentcostprojcostcurrency)         AS bdgcostcurrent
              , SUM(budgetinfo.budgetbaselinecostprojcostcurrency)        AS bdgcostbaseline
              , SUM(budgetinfo.budgetcurrentcostbasecurrency)             AS bdgcostcurrent_bc
              , SUM(budgetinfo.budgetbaselinecostbasecurrency)            AS bdgcostbaseline_bc
              , SUM(budgetinfo.budgetcurrentcostprojtimecostcurrency)     AS bdgcosttimecurrent
              , SUM(budgetinfo.budgetbaselinecostprojtimecostcurrency)    AS bdgcosttimebaseline
              , SUM(budgetinfo.budgetcurrenttimecostbasecurrency)         AS bdgcosttimecurrent_bc
              , SUM(budgetinfo.budgetbaselinetimecostbasecurrency)        AS bdgcosttimebaseline_bc
              , SUM(budgetinfo.budgetcurrentbillableclientcurrency)       AS bdgbillcurrent
              , SUM(budgetinfo.budgetbaselinebillableclientcurrency)      AS bdgbillbaseline
              , SUM(budgetinfo.budgetcurrentbillablebasecurrency)         AS bdgbillcurrent_bc
              , SUM(budgetinfo.budgetbaselinebillablebasecurrency)        AS bdgbillbaseline_bc
              , SUM(budgetinfo.budgetcurrenttimebillableclientcurrency)   AS bdgbilltimecurrent
              , SUM(budgetinfo.budgetbaselinetimebillableclientcurrency)  AS bdgbilltimebaseline
              , SUM(budgetinfo.budgetcurrenttimebillablebasecurrency)     AS bdgbilltimecurrent_bc
              , SUM(budgetinfo.budgetbaselinetimebillablebasecurrency)    AS bdgbilltimebaseline_bc
              --non billable root
              , SUM(budgetinfo.budgetcurrentnonbillableprojcostcurrency)  AS bdgnbilcurrent
              , SUM(budgetinfo.budgetbaselinenonbillableprojcostcurrency) AS bdgnbilbaseline
              , SUM(budgetinfo.budgetcurrentnonbillablebasecurrency)      AS bdgnbilcurrent_bc
              , SUM(budgetinfo.budgetbaselinenonbillablebasecurrency)     AS bdgnbilbaseline_bc
         FROM viewbudgetdetaillist budgetinfo
         WHERE objecttype =2
         GROUP BY budgetinfo.objectid
         ),
     viewexpense_proj AS (
         SELECT ttask.projectid
              , texpentry.currentdate
              , COUNT(*)                                                               AS number
              , SUM(COALESCE(CASE
                               WHEN texpentry.payable = 1
                                   THEN finalamount
                               ELSE 0 END, 0))                                             AS expensecost
              , SUM(COALESCE(CASE
                               WHEN texpentry.payable = 1
                                   THEN amountwithtips * COALESCE(texpentry.billcurrexchangerate, 0)
                               ELSE 0 END, 0))                                             AS expensecost_clc
              , SUM(COALESCE(CASE
                               WHEN texpentry.billable = 1
                                   THEN totamtwithmarkup
                               ELSE 0 END, 0))                                             AS expensebillable
              , SUM(COALESCE(CASE
                               WHEN texpentry.payable = 1 AND texpentry.billable = 0
                                   THEN totamtwithmarkup
                               ELSE 0 END, 0))                                             AS expensenonbillable
              , SUM(COALESCE(CASE
                               WHEN texpentry.payable = 1 AND texpentry.billable = 0
                                   THEN amountwithtips
                               ELSE 0 END, 0) * COALESCE(texpentry.billcurrexchangerate, 0)) AS expensenonbillable_clc
              , SUM(COALESCE(CASE
                               WHEN texpentry.reimbursable = 1
                                   THEN finalamount
                               ELSE 0 END, 0))                                             AS expensereimbursable
              , SUM(COALESCE(CASE
                               WHEN texpentry.reimbursable = 1
                                   THEN amountwithtips
                               ELSE 0 END, 0))                                             AS expensereimbursable_clc
              , SUM(COALESCE(totamtwithmarkup, 0))                                           AS expensetotal
              , SUM(COALESCE(texpentry.amountwithtips * (1. + texpentry.markuppercentage / 100.), 0) *
                    COALESCE(texpentry.billcurrexchangerate, 0))                             AS expensetotal_clc
              , SUM(COALESCE(CASE
                               WHEN texpentry.billable = 1
                                   THEN totamtwithmarkup *
                                   --tcurrrate.rate
                                        COALESCE(texpentry.billcurrexchangerate, 0)
                               ELSE 0 END, 0))                                             AS expensebillable_clc
         FROM texpentry
                  JOIN ttask ON texpentry.taskid = ttask.uniqueid
         GROUP BY ttask.projectid, texpentry.currentdate
         ),
     viewmoneycharge_proj AS (
         SELECT ttask.projectid
              , tchargeentry.currentdate
              , COUNT(*)                                          AS number
              , SUM(CASE
                        WHEN tchargeentry.costed = 1
                            THEN tchargeentry.amountbasecurrency
                        ELSE 0 END)                                   AS chargecost
              , SUM(CASE
                        WHEN tchargeentry.costed = 1
                            THEN COALESCE(tchargeentry.amount, 0)
                        ELSE 0 END * COALESCE(billcurrexchangerate, 0)) AS chargecost_clc
              , SUM(CASE
                        WHEN tchargeentry.billable = 1
                            THEN tchargeentry.amountbasecurrency
                        ELSE 0 END)                                   AS chargebillable
              , SUM(CASE
                        WHEN tchargeentry.costed = 1 AND tchargeentry.billable = 0
                            THEN tchargeentry.amountbasecurrency
                        ELSE 0 END)                                   AS chargenonbillable
              , SUM(tchargeentry.amountbasecurrency)                  AS chargetotal
              , SUM(CASE
                        WHEN tchargeentry.billable = 1
                            THEN tchargeentry.amountclientcurrency
                        ELSE 0 END)                                   AS chargebillable_clc --clientcurrency
         FROM tchargeentry
                  JOIN ttask ON tchargeentry.taskid = ttask.uniqueid
                  JOIN tcharge ON tchargeentry.chargeid = tcharge.uniqueid
         WHERE tcharge.chargetype = 'M' --for charges
         GROUP BY ttask.projectid, tchargeentry.currentdate
         ),
     viewproduct_proj AS (
         SELECT ttask.projectid
              , tchargeentry.currentdate
              , COUNT(*)                              AS number
              , SUM(COALESCE(CASE
                               WHEN tchargeentry.costed = 1
                                   THEN tchargeentry.costedamount
                               ELSE 0 END, 0))            AS productcost
              , SUM(COALESCE(CASE
                               WHEN tchargeentry.costed = 1
                                   THEN COALESCE(tchargeentry.costamountcostcurrency, 0) *
                                        COALESCE(tchargeentry.billcurrexchangerate, 0)
                               ELSE 0 END, 0))            AS productcost_clc
              , SUM(COALESCE(CASE
                               WHEN tchargeentry.billable = 1
                                   THEN tchargeentry.amountbasecurrency
                               ELSE 0 END, 0))            AS productbillable
              , SUM(COALESCE(CASE
                               WHEN tchargeentry.costed = 1 AND tchargeentry.billable = 0
                                   THEN tchargeentry.costedamount
                               ELSE 0 END, 0))            AS productnonbillable
              , SUM(COALESCE(CASE
                               WHEN tchargeentry.costed = 1 AND tchargeentry.billable = 0
                                   THEN COALESCE(tchargeentry.costamountcostcurrency, 0) *
                                        COALESCE(tchargeentry.billcurrexchangerate, 0)
                               ELSE 0 END, 0))            AS productnonbillable_clc
              , SUM(COALESCE(tchargeentry.costedamount, 0)) AS producttotal
              , SUM(COALESCE(CASE
                               WHEN tchargeentry.billable = 1
                                   THEN tchargeentry.amountclientcurrency
                               ELSE 0 END, 0))            AS productbillable_clc
         FROM tchargeentry
                  JOIN ttask ON tchargeentry.taskid = ttask.uniqueid
                  JOIN tcharge ON tchargeentry.chargeid = tcharge.uniqueid
         WHERE tcharge.chargetype = 'N' -- Product
         GROUP BY ttask.projectid, tchargeentry.currentdate
         ),
     viewtimesheetentries_proj AS (
         SELECT ttask.projectid
              , ttimeentry.currentdate                                                                                     AS entrydate
              , COUNT(*)                                                                                               AS number
              , SUM(COALESCE(ttimeentryrate.costamounttotal, 0) * (CASE COALESCE(ttimeentryrate.costexchangerate, 0)
                                                                     WHEN 0 THEN 1
                                                                     ELSE COALESCE(ttimeentryrate.costexchangerate, 0) END)) AS timecost
              , SUM(COALESCE(ttimeentryrate.costamounttotal, 0) * (CASE COALESCE(ttimeentryrate.costexchangerate, 0)
                                                                     WHEN 0 THEN 1
                                                                     ELSE COALESCE(ttimeentryrate.costexchangerate, 0) END) *
                    (CASE WHEN COALESCE(ttimeentryrate.posted, 0) > 0 THEN 1 ELSE 0 END))                                    AS totalpaidtime
              , SUM(COALESCE(ttimeentryrate.billableamnttotal, 0) * COALESCE(billexchangerate, 0) *
                    COALESCE(billed, 0))                                                                                     AS totalbilledtime
              , SUM(CASE
                        WHEN COALESCE(ttimeentryrate.israted, 0) = 1 AND COALESCE(ttimeentry.billable, 0) = 1 and
                             ttask.milestbilling = 0 THEN COALESCE(ttimeentryrate.billableamnttotal, 0) *
                                                          COALESCE(billexchangerate, 0)
                        ELSE 0 END)                                                                                        AS timebillable
              , SUM(CASE
                        WHEN COALESCE(ttimeentryrate.israted, 0) = 1 AND COALESCE(ttimeentry.billable, 0) = 1 and
                             ttask.milestbilling = 0 then
                                COALESCE(ttimeentryrate.billableamnttotal, 0) * COALESCE(billexchangerate, 0) *
                                COALESCE(billcurrexchangerate, 0)
                        ELSE 0 END)                                                                                        AS billabletimeamnt_clcurr
              , SUM(COALESCE(ttimeentryrate.billableamnttotal, 0) * COALESCE(billexchangerate, 0) * COALESCE(billed, 0)
             * (CASE COALESCE(ttimeentryrate.billexchangerate, 0)
                    WHEN 0 THEN 1
                    ELSE COALESCE(ttimeentryrate.billexchangerate, 0) END)
             * (CASE
                    WHEN COALESCE(ttimeentryrate.billed, 0) > 0 AND COALESCE(ttimeentryrate.invoiceid, 0) > 0 THEN 1
                    ELSE COALESCE(ttimeentryrate.billed, 0) END))                                                            AS billedamount


              , SUM(CASE
                        WHEN (COALESCE(ttimeentry.costedtimespan1, 0)
                            + COALESCE(ttimeentry.costedtimespan2, 0)
                            + COALESCE(ttimeentry.costedtimespan3, 0)) = 0 THEN 0
                        ELSE (CASE
                                  WHEN (COALESCE(ttimeentry.billedtimespan1, 0)
                                      + COALESCE(ttimeentry.billedtimespan2, 0)
                                      + COALESCE(ttimeentry.billedtimespan3, 0)) = 0 then
                                      (COALESCE(ttimeentry.costedtimespan1, 0)
                                          + COALESCE(ttimeentry.costedtimespan2, 0)
                                          + COALESCE(ttimeentry.costedtimespan3, 0))
                                  ELSE
                                      (COALESCE(ttimeentry.timespan, 0)
                                          - (COALESCE(ttimeentry.billedtimespan1, 0)
                                              + COALESCE(ttimeentry.billedtimespan2, 0)
                                              + COALESCE(ttimeentry.billedtimespan3, 0)))
                                  END
                                  * (COALESCE(ttimeentryrate.costamounttotal, 0)
                                * COALESCE(ttimeentryrate.costexchangerate, 0))
                            / (COALESCE(ttimeentry.costedtimespan1, 0)
                                + COALESCE(ttimeentry.costedtimespan2, 0)
                                + COALESCE(ttimeentry.costedtimespan3, 0)))
             END)                                                                                                          AS timenonbillable
              , SUM(COALESCE(ttimeentry.timespan, 0))                                                                        AS totaltime
              , SUM(COALESCE(ttimeentry.billedtimespan1, 0) + COALESCE(ttimeentry.billedtimespan2, 0) +
                    COALESCE(ttimeentry.billedtimespan3, 0))                                                                 AS totaltimebill
              , SUM(COALESCE(ttimeentry.timespan, 0) -
                    (COALESCE(ttimeentry.billedtimespan1, 0) + COALESCE(ttimeentry.billedtimespan2, 0) +
                     COALESCE(ttimeentry.billedtimespan3, 0)))                                                               AS totaltimenonbill
              , SUM((COALESCE(ttimeentry.costedtimespan1, 0) + COALESCE(ttimeentry.costedtimespan2, 0) +
                     COALESCE(ttimeentry.costedtimespan3, 0)))                                                                  totaltimepayable
              , SUM(CASE
                        WHEN COALESCE(ttimeentry.costed, 0) = 1 THEN COALESCE(ttimeentryrate.costamounttotal, 0) *
                                                                   COALESCE(costexchangerate, 0)
                        ELSE 0 END)                                                                                        AS payable_time
         FROM ttask
                  JOIN ttimeentry ON ttimeentry.taskid = ttask.uniqueid
                  JOIN ttimeentryrate ON ttimeentryrate.timeentryuid = ttimeentry.uniqueid
         WHERE ttimeentryrate.splitbilclientid = 0
         GROUP BY ttask.projectid, ttimeentry.currentdate
         ),
     viewprojectlist AS (
         SELECT tproject.uniqueid                                                                          AS uniqueid
              , tproject.name                                                                              AS name
              , tproject.accesstype                                                                        AS accesstype
              , COALESCE(tproject.description, '')                                                           AS description
              , COALESCE(tproject.id, '')                                                                    AS id
              , COALESCE(tproject.releasealias, '')                                                          AS code
              , COALESCE(tproject.trackingno, '')                                                            AS trackingnumber
              , COALESCE(tproject.managerid, 0)                                                              AS managerid
              , COALESCE(tuser.firstname, '')                                                                AS managerfirstname
              , COALESCE(tuser.lastname, '')                                                                 AS managerlastname
              , COALESCE(tuser.emailaddress, '')                                                             AS manageremail
              , ''                                                                                         AS state
              , tproject.clientid                                                                          AS clientid
              , tclient.name                                                                               AS client
              , tclientinvoice.currencyid                                                                  AS clientcurrencyid
              , ''                                                                                         AS clientcurrencydescription
              , ''                                                                                         AS clientcurrencysymbol
              , tportfolio.uniqueid                                                                        AS portfolioid
              , tportfolio.name                                                                            AS portfolio
              , tproject.projecttypeid                                                                     AS type   -- this field is not showed ON ui. tmapdata.tablename='%ppm_project_type%' or tprojecttype
              , COALESCE(tproject.phealth, 'green')                                                          AS health -- green/yellow/red tmapdata.tablename = 'projecthealth'
              , tproject.priority                                                                          AS priority
              , tproject.startdate                                                                         AS startdate
              , tproject.enddate                                                                           AS enddate
              , COALESCE((SELECT min(currentdate) AS mindate
                        FROM ttimeentry
                                 JOIN ttask ON ttimeentry.taskid = ttask.uniqueid
                        WHERE ttask.projectid = tproject.uniqueid),
                       '19000101')                                                                         AS actualstartdate
              , COALESCE((SELECT max(currentdate) AS maxdate
                        FROM ttimeentry
                                 JOIN ttask ON ttimeentry.taskid = ttask.uniqueid
                        WHERE ttask.projectid = tproject.uniqueid),
                       '19000101')                                                                         AS actualenddate

              -- budget
              , COALESCE(viewbudgetdetailtotals_proj.bdgtimecurrent / 3600.00, 0.00)                         AS currenttimebudget
              , COALESCE(viewbudgetdetailtotals_proj.bdgtimebaseline / 3600.00, 0.00)                        AS baselinetimebudget
              , COALESCE(viewbudgetdetailtotals_proj.bdgcostcurrent_bc, 0.00)                                AS currentcostbudget_bc
              , COALESCE(viewbudgetdetailtotals_proj.bdgcostcurrent, 0.00)                                   AS currentcostbudget_cc
              , COALESCE(viewbudgetdetailtotals_proj.bdgcostbaseline_bc, 0.00)                               AS baselinecostbudget_bc
              , COALESCE(viewbudgetdetailtotals_proj.bdgcostbaseline, 0.00)                                  AS baselinecostbudget_cc
              , COALESCE(viewbudgetdetailtotals_proj.bdgbillcurrent_bc, 0.00)                                AS currentbillablebudget_bc
              , COALESCE(viewbudgetdetailtotals_proj.bdgbillcurrent, 0.00)                                   AS currentbillablebudget_clc
              , COALESCE(viewbudgetdetailtotals_proj.bdgbillbaseline, 0.00)                                  AS baselinebillablebudget_clc
              , COALESCE(viewbudgetdetailtotals_proj.bdgbillbaseline_bc, 0.00)                               AS baselinebillablebudget_bc
              , COALESCE(viewbudgetdetailtotals_proj.bdgnbilcurrent_bc, 0.00)                                AS currentnonbillablebudget_bc
              , COALESCE(viewbudgetdetailtotals_proj.bdgnbilcurrent, 0.00)                                   AS currentnonbillablebudget_cc
              , COALESCE(viewbudgetdetailtotals_proj.bdgnbilbaseline_bc, 0.00)                               AS baselinenonbillablebudget_bc
              , COALESCE(viewbudgetdetailtotals_proj.bdgnbilbaseline, 0.00)                                  AS baselinenonbillablebudget_cc

              -- project
              , COALESCE(expenseproj.payableexpenses, 0.00) + COALESCE(moneychargeproj.payablecharges, 0.00) +
                COALESCE(productproj.payableproducts, 0.00) + COALESCE(timeproj.payabletimeamnt_bc, 0.00)      AS actualcost
              , COALESCE(expenseproj.billableexpenses_clc, 0.00) + COALESCE(moneychargeproj.billablecharges_clc, 0.00) +
                COALESCE(productproj.billableproducts_clc, 0.00) +
                COALESCE(timeproj.billabletimeamnt_bc * currrate_bctoclc.rate, 0.00)                         AS actualbilling_clc
              , COALESCE(expenseproj.billableexpenses_bc, 0.00) + COALESCE(moneychargeproj.billablecharges_bc, 0.00) +
                COALESCE(productproj.billableproducts_bc, 0.00) +
                COALESCE(timeproj.billabletimeamnt_bc, 0.00)                                                 AS actualbilling_bc

              --time
              , COALESCE(timeproj.totaltime, 0.00)                                                           AS totaltime
              , COALESCE(timeproj.billabletime, 0.00)                                                        AS billabletime
              , COALESCE(timeproj.payabletime, 0.00)                                                         AS payabletime
              , COALESCE(timeproj.nonbillabletime, 0.00)                                                     AS nonbillabletime
              , COALESCE(timeproj.payabletimeamnt_bc, 0.00)                                                  AS payabletimeamnt_bc
              , COALESCE(timeproj.billabletimeamnt_bc, 0.00)                                                 AS billabletimeamnt_bc
              , COALESCE(timeproj.billabletimeamnt_bc * currrate_bctoclc.rate, 0.00)                         AS billabletimeamnt_clc

              -- expense
              , COALESCE(expenseproj.payableexpenses, 0.00)                                                  AS payableexpense
              , COALESCE(expenseproj.billableexpenses_bc, 0.00)                                              AS billableexpense_bc
              , COALESCE(expenseproj.billableexpenses_clc, 0.00)                                             AS billableexpense_clc
              , COALESCE(expenseproj.reimbursableexpenses, 0.00)                                             AS reimbursableexpenses
              , COALESCE(expenseproj.totalexpenses, 0.00)                                                    AS totalexpenses


              -- charge, all charges
              , COALESCE(moneychargeproj.payablecharges, 0.00)                                               AS payablecharges
              , COALESCE(moneychargeproj.billablecharges_bc, 0.00)                                           AS billablecharges_bc
              , COALESCE(moneychargeproj.billablecharges_clc, 0.00)                                          AS billablecharges_clc
              , COALESCE(moneychargeproj.totalcharges, 0.00)                                                 AS totalcharges

              -- product
              , COALESCE(productproj.payableproducts, 0.00)                                                  AS payableproducts
              , COALESCE(productproj.billableproducts_bc, 0.00)                                              AS billableproducts_bc
              , COALESCE(productproj.billableproducts_clc, 0.00)                                             AS billableproducts_clc
              , COALESCE(productproj.totalproducts, 0.00)                                                    AS totalproducts


              -- cwp
              , 0.00                                                                                       AS committedhours
              , 0.00                                                                                       AS proposedhours
              , 0.00                                                                                       AS forecastedcost
              , 0.00                                                                                       AS forecastedbilling

              -- invoice
              , COALESCE(invoiceproj.totalinvoiced_clc, 0.00)                                                AS totalinvoiced_clc
              , COALESCE(invoiceproj.totalinvoiced_clc * currrate_clctobc.rate, 0.00)                        AS totalinvoiced_bc

              --
              , (SELECT COUNT(*) FROM ttask WHERE projectid = tproject.uniqueid)                           AS tasks
              , (SELECT COUNT(*) FROM tmilest WHERE projectid = tproject.uniqueid)                         AS milestones
              , (SELECT COUNT(*)
                 FROM tprojectteamresource
                 WHERE projectid = tproject.uniqueid)                                                      AS teammembers
              , COALESCE(invoiceproj.invoices, 0)                                                            AS invoices
              , ''                                                                                         AS customfields
              , ''                                                                                         AS actionitems
              , CASE WHEN parent.parentid = 0 THEN '' ELSE parent.name END                                    parent
              , tworkflowmap.name                                                                             workflow
              , COALESCE(notes.countnote, 0)                                                                    notes
              , COALESCE(documents.countdocument, 0)                                                            documents
              , tproject.alternatemgrid                                                                       alternatemanagerid
              , COALESCE( CONCAT(user_alternativemgr.lastname, ', ', user_alternativemgr.firstname), '')               alternatemanager
              , COALESCE(user_alternativemgr.emailaddress, '')                                                  alternatemanageremail
              , tproject.actualmgrid                                                                          actualmanagerid
              , COALESCE( CONCAT(user_activemgr.lastname, ', ', user_activemgr.firstname), '')                         actualmanager
              , COALESCE(user_activemgr.emailaddress, '')                                                       actualmanageremail
              , -1                                                                                         AS stateuid
              , tproject.projectworkflowmapid
              , COALESCE(costcurrency.uniqueid, basecurrency.uniqueid)                                       AS costcurrencyid
              , COALESCE(costcurrency.currencysymbol, basecurrency.currencysymbol)                           AS costcurrencysymbol
              , COALESCE(costcurrency.currencycode, basecurrency.currencycode)                               AS costcurrencydescription
         FROM tproject
                  CROSS JOIN tsysdefs
                  JOIN tcurrency basecurrency ON tsysdefs.currencyid = basecurrency.uniqueid
                  JOIN tworkflowmap ON tproject.projectworkflowmapid = tworkflowmap.uniqueid
                  JOIN tclient ON tproject.clientid = tclient.uniqueid
                  JOIN tclientinvoice ON tclient.uniqueid = tclientinvoice.clientid
                  JOIN tcurrassoc curassoc_bctoclc ON curassoc_bctoclc.basecurrencyid = tsysdefs.currencyid and
                                                      curassoc_bctoclc.quotecurrencyid = tclientinvoice.currencyid
                  JOIN tcurrrate currrate_bctoclc ON currrate_bctoclc.curassocid = curassoc_bctoclc.uniqueid and
                                                     getdate() between currrate_bctoclc.startdate AND currrate_bctoclc.enddate
                  JOIN tcurrassoc curassoc_clctobc ON curassoc_clctobc.basecurrencyid = tclientinvoice.currencyid and
                                                      curassoc_clctobc.quotecurrencyid = tsysdefs.currencyid
                  JOIN tcurrrate currrate_clctobc ON currrate_clctobc.curassocid = curassoc_clctobc.uniqueid and
                                                     getdate() between currrate_clctobc.startdate AND currrate_clctobc.enddate
                  LEFT JOIN viewbudgetdetailtotals_proj ON tproject.uniqueid = viewbudgetdetailtotals_proj.objectid and
                                                           viewbudgetdetailtotals_proj.objecttype = 2
                  LEFT JOIN tbudgetdetail ON tbudgetdetail.objecttype = 2 AND tbudgetdetail.objectid = tproject.uniqueid
                  LEFT JOIN tcurrency costcurrency ON costcurrency.uniqueid = tbudgetdetail.costcurrencyid
                  LEFT JOIN tportfolio ON tproject.portfolioid = tportfolio.uniqueid
                  LEFT JOIN tuser ON tproject.managerid = tuser.uniqueid
                  LEFT JOIN
              (
                  SELECT projectid
                       , SUM(expensecost)         AS payableexpenses
                       , SUM(expensebillable)     AS billableexpenses_bc
                       , SUM(expensereimbursable) AS reimbursableexpenses
                       , SUM(expensetotal)        AS totalexpenses
                       , SUM(expensebillable_clc) AS billableexpenses_clc
                  FROM viewexpense_proj
                  GROUP BY projectid
              ) AS expenseproj ON tproject.uniqueid = expenseproj.projectid

                  LEFT JOIN
              (
                  SELECT projectid
                       , SUM(chargecost)         AS payablecharges
                       , SUM(chargebillable)     AS billablecharges_bc
                       , SUM(chargetotal)        AS totalcharges
                       , SUM(chargebillable_clc) AS billablecharges_clc
                  FROM viewmoneycharge_proj
                  GROUP BY projectid
              ) AS moneychargeproj ON moneychargeproj.projectid = tproject.uniqueid
                  LEFT JOIN
              (
                  SELECT projectid
                       , SUM(productcost)         AS payableproducts
                       , SUM(productbillable)     AS billableproducts_bc
                       , SUM(producttotal)        AS totalproducts
                       , SUM(productbillable_clc) AS billableproducts_clc
                  FROM viewproduct_proj
                  GROUP BY projectid
              ) AS productproj ON productproj.projectid = tproject.uniqueid
                  LEFT JOIN
              (SELECT viewtimesheetentries_proj.projectid
                    , SUM(totaltime) / 3600.00        AS totaltime
                    , SUM(totaltimebill) / 3600.00    AS billabletime
                    , SUM(totaltimepayable) / 3600.00 AS payabletime
                    , SUM(totaltimenonbill) / 3600.00 AS nonbillabletime
                    , SUM(timebillable)               AS billabletimeamnt_bc
                    , SUM(timecost)                   AS payabletimeamnt_bc
               FROM viewtimesheetentries_proj
               GROUP BY viewtimesheetentries_proj.projectid
              ) AS timeproj ON tproject.uniqueid = timeproj.projectid
                  LEFT JOIN(SELECT tinvoiceproj.projectid                 AS projectid
                                 , SUM(taskinvamount.invamount)           AS totalinvoiced_clc
                                 , COUNT(distinct tinvoiceproj.invoiceid) AS invoices
                            FROM tinvoiceproj
                                     JOIN tinvoicetask ON tinvoiceproj.uniqueid = tinvoicetask.invoiceprojid
                                     LEFT JOIN
                                 (SELECT tinvoicetime.invoiceid
                                       , tinvoicetime.taskid
                                       , (tinvoicetime.amount) invamount
                                  FROM tinvoicetime
                                  WHERE tinvoicetime.include = 1
                                  UNION ALL
                                  SELECT tinvoiceexp.invoiceid
                                       , tinvoiceexp.taskid
                                       , tinvoiceexp.amount
                                  FROM tinvoiceexp
                                  WHERE tinvoiceexp.include = 1
                                  UNION ALL
                                  SELECT tinvoicechrg.invoiceid
                                       , tinvoicechrg.taskid
                                       , tinvoicechrg.amount
                                  FROM tinvoicechrg
                                  WHERE tinvoicechrg.include = 1
                                 ) taskinvamount ON tinvoicetask.taskid = taskinvamount.taskid and
                                                    taskinvamount.invoiceid = tinvoiceproj.invoiceid
                            WHERE tinvoiceproj.include = 1
                              AND tinvoicetask.include = 1
                            GROUP BY tinvoiceproj.projectid) invoiceproj ON invoiceproj.projectid = tproject.uniqueid
                  JOIN tproject parent ON tproject.parentid = parent.uniqueid
                  LEFT JOIN (SELECT tnote.objectid        projectid
                                  , COUNT(tnote.uniqueid) countnote
                             FROM tnote
                             WHERE tnote.objecttype = 2
                             GROUP BY tnote.objectid
         ) notes ON notes.projectid = tproject.uniqueid
                  LEFT JOIN (SELECT tobjfldlink.objectid projectid, COUNT(tfolderitem.uniqueid) countdocument
                             FROM tobjfldlink
                                      JOIN tfolderitem ON tobjfldlink.folderid = tfolderitem.folderid
                             WHERE tobjfldlink.objecttype = 2
                             GROUP BY tobjfldlink.objectid
         ) documents ON documents.projectid = tproject.uniqueid
                  LEFT JOIN tuser user_alternativemgr ON user_alternativemgr.uniqueid = tproject.alternatemgrid
                  LEFT JOIN tuser user_activemgr ON user_activemgr.uniqueid = tproject.actualmgrid
         WHERE tproject.virtual = 0
         )
SELECT * FROM viewprojectlist
  );
[0m14:46:33.093508 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:33.094160 [debug] [Thread-2 (]: Writing runtime sql for node "model.my_dbt_projects.cust_adsk_servicesimpact_actuals_transform"
[0m14:46:33.095750 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.cust_adsk_servicesimpact_actuals_transform"
[0m14:46:33.095826 [debug] [Thread-2 (]: On model.my_dbt_projects.cust_adsk_servicesimpact_actuals_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.cust_adsk_servicesimpact_actuals_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.cust_adsk_servicesimpact_actuals
  
   as (
    

/* CUST_ADSK_SERVICESIMPACT_ACTUALS.sql 
  @BatchSize     INT = 10000
  @BatchNumber INT = 0
  @SQLScriptVersion = 4
  var @SQLScriptVersion is referenced only here in CUST_ADSK_SERVICESIMPACT_ACTUALS.sql and value set to 4
*/

WITH tmp_cust_adsk_servicesimpact_actuals AS (
        SELECT 
            ROW_NUMBER()
                OVER (
                    ORDER BY t.projectid, TRUNC(tse.entrydate, 'MONTH') , pr.name
            )                                                       AS rownumber
          , t.projectid                                                                         AS projectid
          , TRUNC(tse.entrydate, 'MONTH')                                                       AS hrsmonth
          , pr.name                                                                             AS userrole
          , SUM(IFNULL(totaltime, 0.00)) / 3600.00                                              AS hrsactual
          , 4                                                                                   AS sqlscriptversion
        FROM eio_publish.tenrox_private.ttimesheetentries AS tse
        INNER JOIN eio_publish.tenrox_private.ttask AS t ON tse.taskuid = t.uniqueid
        INNER JOIN eio_publish.tenrox_private.tuserplanningrole AS upr 
            ON upr.userid = tse.useruid AND upr.isprimaryrole = 1
        INNER JOIN eio_publish.tenrox_private.tplanningrole AS pr 
            ON pr.uniqueid = upr.planningroleid
        WHERE tse.entrydate >= DATE '1990-02-01'
            AND tse.approved = 1
            AND t.projectid NOT IN (SELECT uniqueid 
                                    FROM eio_publish.tenrox_private.tproject 
                                    WHERE releasealias = 'A-ADMIN-00001')
            AND t.projectid NOT IN (
                SELECT projectid
                FROM EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_details
                WHERE
                    projectstate IN (
                        'SCO-Funnel',
                        'Funnel',
                        'Booking Credit',
                        'FY14 Booking Credit',
                        'SCO-Discarded',
                        'Discarded',
                        'Active-Internal-Utilized',
                        'Active-Internal-Non-Utilized',
                        'Bookings Program',
                        'PA Review – Booking',
                        'PA - Conversion Review'
                    )
            )
        GROUP BY t.projectid, TRUNC(tse.entrydate, 'MONTH'), pr.name
        ORDER BY t.projectid, TRUNC(tse.entrydate, 'MONTH'), pr.name
)

SELECT 
    rownumber
     , projectid
     , hrsmonth
     , userrole
     , hrsactual
     , 1::BOOLEAN                    AS wasnewtable
     , sqlscriptversion
FROM tmp_cust_adsk_servicesimpact_actuals
     -- WHERE  RowNumber >= (0 * 1000) + 1
     -- AND RowNumber < (0 * 1000) + 1000 + 1
ORDER BY rownumber
  );
[0m14:46:33.281840 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:33.282884 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.tprojectcustfld_view_transform (execute): 2023-08-21 14:46:32.220337 => 2023-08-21 14:46:33.282856
[0m14:46:33.283005 [debug] [Thread-1 (]: On model.my_dbt_projects.tprojectcustfld_view_transform: Close
[0m14:46:33.489804 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:33.490841 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.cust_adsk_servicesimpact_actuals_transform (execute): 2023-08-21 14:46:32.408406 => 2023-08-21 14:46:33.490816
[0m14:46:33.490957 [debug] [Thread-2 (]: On model.my_dbt_projects.cust_adsk_servicesimpact_actuals_transform: Close
[0m14:46:33.538881 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165549290>]}
[0m14:46:33.539216 [info ] [Thread-1 (]: 7 of 47 OK created sql view model TENROX_TRANSFORM.tprojectcustfld_view ........ [[32mSUCCESS 1[0m in 1.32s]
[0m14:46:33.539393 [debug] [Thread-1 (]: Finished running node model.my_dbt_projects.tprojectcustfld_view_transform
[0m14:46:33.539525 [debug] [Thread-1 (]: Began running node model.my_dbt_projects.adsk_cm_labor_hrs_v02_transform
[0m14:46:33.539644 [info ] [Thread-1 (]: 10 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_labor_hrs_v02 ........... [RUN]
[0m14:46:33.539906 [debug] [Thread-1 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_labor_hrs_v02_transform'
[0m14:46:33.540121 [debug] [Thread-1 (]: Began compiling node model.my_dbt_projects.adsk_cm_labor_hrs_v02_transform
[0m14:46:33.553533 [debug] [Thread-1 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_labor_hrs_v02_transform"
[0m14:46:33.554238 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_labor_hrs_v02_transform (compile): 2023-08-21 14:46:33.540202 => 2023-08-21 14:46:33.554209
[0m14:46:33.554355 [debug] [Thread-1 (]: Began executing node model.my_dbt_projects.adsk_cm_labor_hrs_v02_transform
[0m14:46:33.556259 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_labor_hrs_v02_transform"
[0m14:46:33.556430 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_labor_hrs_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_labor_hrs_v02_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:33.556500 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:46:33.764692 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x166189850>]}
[0m14:46:33.765011 [info ] [Thread-2 (]: 9 of 47 OK created sql view model TENROX_TRANSFORM.cust_adsk_servicesimpact_actuals  [[32mSUCCESS 1[0m in 1.36s]
[0m14:46:33.765182 [debug] [Thread-2 (]: Finished running node model.my_dbt_projects.cust_adsk_servicesimpact_actuals_transform
[0m14:46:33.765306 [debug] [Thread-2 (]: Began running node model.my_dbt_projects.adsk_cm_act_charge_costs_v02_local_cur_transform
[0m14:46:33.765513 [info ] [Thread-2 (]: 11 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_act_charge_costs_local_cur_v02  [RUN]
[0m14:46:33.765805 [debug] [Thread-2 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_act_charge_costs_v02_local_cur_transform'
[0m14:46:33.765904 [debug] [Thread-2 (]: Began compiling node model.my_dbt_projects.adsk_cm_act_charge_costs_v02_local_cur_transform
[0m14:46:33.769300 [debug] [Thread-2 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_act_charge_costs_v02_local_cur_transform"
[0m14:46:33.771064 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_act_charge_costs_v02_local_cur_transform (compile): 2023-08-21 14:46:33.765975 => 2023-08-21 14:46:33.771020
[0m14:46:33.771197 [debug] [Thread-2 (]: Began executing node model.my_dbt_projects.adsk_cm_act_charge_costs_v02_local_cur_transform
[0m14:46:33.773184 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_act_charge_costs_v02_local_cur_transform"
[0m14:46:33.773287 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_act_charge_costs_v02_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_act_charge_costs_v02_local_cur_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:33.773357 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m14:46:33.784417 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:33.785379 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.viewprojectlist_transform (execute): 2023-08-21 14:46:32.362062 => 2023-08-21 14:46:33.785353
[0m14:46:33.785493 [debug] [Thread-3 (]: On model.my_dbt_projects.viewprojectlist_transform: Close
[0m14:46:34.032265 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x166b4c790>]}
[0m14:46:34.032588 [info ] [Thread-3 (]: 8 of 47 OK created sql view model TENROX_TRANSFORM.viewprojectlist ............. [[32mSUCCESS 1[0m in 1.68s]
[0m14:46:34.032752 [debug] [Thread-3 (]: Finished running node model.my_dbt_projects.viewprojectlist_transform
[0m14:46:34.032871 [debug] [Thread-3 (]: Began running node model.my_dbt_projects.adsk_cm_act_charge_costs_v02_transform
[0m14:46:34.033108 [info ] [Thread-3 (]: 12 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_act_charge_costs_v02 .... [RUN]
[0m14:46:34.033483 [debug] [Thread-3 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_act_charge_costs_v02_transform'
[0m14:46:34.033586 [debug] [Thread-3 (]: Began compiling node model.my_dbt_projects.adsk_cm_act_charge_costs_v02_transform
[0m14:46:34.036820 [debug] [Thread-3 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_act_charge_costs_v02_transform"
[0m14:46:34.038172 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_act_charge_costs_v02_transform (compile): 2023-08-21 14:46:34.033643 => 2023-08-21 14:46:34.038139
[0m14:46:34.038289 [debug] [Thread-3 (]: Began executing node model.my_dbt_projects.adsk_cm_act_charge_costs_v02_transform
[0m14:46:34.040208 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_act_charge_costs_v02_transform"
[0m14:46:34.040298 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_act_charge_costs_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_act_charge_costs_v02_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:34.040377 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m14:46:34.307476 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:34.308341 [debug] [Thread-1 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_labor_hrs_v02_transform"
[0m14:46:34.377250 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_labor_hrs_v02_transform"
[0m14:46:34.377495 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_labor_hrs_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_labor_hrs_v02_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_labor_hrs_v02
  
   as (
    
/* ADSK_FN_CM_LABOR_HRS_V02.sql
  @RangeBegin      DATETIME = NULL
  , @RangeEnd      DATETIME = NULL
  , @CutoverDate   DATETIME = NULL
  , @Placeholder04 INT = NULL
  , @Placeholder05 INT = NULL
*/

--DROP VIEW "EIO_INGEST"."TENROX_TRANSFORM"."ADSK_FN_CM_LABOR_HRS_V02_TEST"


WITH actuals AS (
        SELECT
            ttask.projectid AS projectid
            , SUM(IFNULL(totaltime, 0.00)) / 3600.00 AS hrsact_total_all
            , SUM(IFNULL(CASE WHEN ttimesheetentries.entrydate < fnc_currentmonthbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_total_past
            , SUM(IFNULL(CASE WHEN ttimesheetentries.entrydate >= fnc_currentmonthbegins
                                    AND ttimesheetentries.entrydate < ranges.fnc_nextmonthbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_total_currentmonth
            , SUM(IFNULL(CASE WHEN ttimesheetentries.entrydate < fnc_currentqtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_total_pastqtrs
            , SUM(IFNULL(CASE WHEN ttimesheetentries.entrydate >= fnc_currentqtrbegins
                                    AND ttimesheetentries.entrydate < fnc_plus1qtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_total_entirecurrentqtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.entrydate >= fnc_currentqtrbegins
                                    AND ttimesheetentries.entrydate < fnc_currentqtrm2begins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_total_currentqtrm1
            , SUM(IFNULL(CASE WHEN ttimesheetentries.entrydate >= fnc_currentqtrm2begins
                                    AND ttimesheetentries.entrydate < fnc_currentqtrm3begins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_total_currentqtrm2
            , SUM(IFNULL(CASE WHEN ttimesheetentries.entrydate >= fnc_currentqtrm3begins
                                    AND ttimesheetentries.entrydate < fnc_plus1qtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_total_currentqtrm3
            , SUM(IFNULL(CASE WHEN ttimesheetentries.entrydate >= fnc_currentqtrbegins
                                    AND ttimesheetentries.entrydate < fnc_currentmonthbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_total_completedinqtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.entrydate >= fnc_minus1qtrbegins
                                    AND ttimesheetentries.entrydate < fnc_currentqtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_total_minus1qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.entrydate >= fnc_minus2qtrbegins
                                    AND ttimesheetentries.entrydate < fnc_minus1qtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_total_minus2qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.entrydate >= fnc_minus3qtrbegins
                                    AND ttimesheetentries.entrydate < fnc_minus2qtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_total_minus3qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.entrydate < fnc_minus3qtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_total_priorqtrs
            , SUM(IFNULL(CASE WHEN ttimesheetentries.entrydate >= fnc_hist_customrangebegin
                                    AND ttimesheetentries.entrydate < fnc_hist_customrangeend THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_total_customrange
            , SUM(IFNULL(CASE WHEN ttimesheetentries.entrydate < to_timestamp(NULL) THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_total_beforecutover
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1 THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_all
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate < (DATE_TRUNC('W', CURRENT_DATE())-1) THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_past
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_currentmonthbegins
                                    AND ttimesheetentries.entrydate < ranges.fnc_nextmonthbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_currentmonth
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate < fnc_currentqtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_pastqtrs
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
                                        AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
                                        AND ttimesheetentries.entrydate < fnc_plus1qtrbegins
                                        THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_entirecurrentqtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
                                    AND ttimesheetentries.entrydate < fnc_currentqtrm2begins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_currentqtrm1
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrbegins 
                                    AND ttimesheetentries.entrydate < (DATE_TRUNC('W', CURRENT_DATE())-1) THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_currentqtrm1_wk
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrm2begins
                                    AND ttimesheetentries.entrydate < fnc_currentqtrm3begins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_currentqtrm2
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrm2begins
                                    AND ttimesheetentries.entrydate < (DATE_TRUNC('W', CURRENT_DATE())-1) THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_currentqtrm2_wk
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrm3begins
                                    AND ttimesheetentries.entrydate < fnc_plus1qtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_currentqtrm3
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrm3begins
                                    AND ttimesheetentries.entrydate < (DATE_TRUNC('W', CURRENT_DATE())-1) THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_currentqtrm3_wk
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
                                    AND ttimesheetentries.entrydate < fnc_currentmonthbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_completedinqtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_minus1qtrbegins
                                    AND ttimesheetentries.entrydate < fnc_currentqtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_minus1qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_minus2qtrbegins
                                    AND ttimesheetentries.entrydate < fnc_minus1qtrbegins
                                    THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_minus2qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_minus3qtrbegins
                                    AND ttimesheetentries.entrydate < fnc_minus2qtrbegins
                                    THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_minus3qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate < fnc_minus3qtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_priorqtrs
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_hist_customrangebegin
                                    AND ttimesheetentries.entrydate < fnc_hist_customrangeend THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_customrange
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate < to_timestamp(NULL) THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_beforecutover
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 1 THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_unapp_all
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate < fnc_currentmonthbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_unapp_past
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_currentmonthbegins
                                    AND ttimesheetentries.entrydate < ranges.fnc_nextmonthbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_unapp_currentmonth
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate < fnc_currentqtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_unapp_pastqtrs
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrbegins 
                                    AND ttimesheetentries.entrydate < fnc_plus1qtrbegins
                                    THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_unapp_entirecurrentqtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
                                    AND ttimesheetentries.entrydate < fnc_currentqtrm2begins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_unapp_currentqtrm1
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrm2begins
                                    AND ttimesheetentries.entrydate < fnc_currentqtrm3begins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_unapp_currentqtrm2
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrm3begins
                                    AND ttimesheetentries.entrydate < fnc_plus1qtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_unapp_currentqtrm3
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
                                    AND ttimesheetentries.entrydate < fnc_currentmonthbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_unapp_completedinqtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_minus1qtrbegins
                                    AND ttimesheetentries.entrydate < fnc_currentqtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_unapp_minus1qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_minus2qtrbegins
                                    AND ttimesheetentries.entrydate < fnc_minus1qtrbegins
                                    THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_unapp_minus2qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_minus3qtrbegins 
                                    AND ttimesheetentries.entrydate < fnc_minus2qtrbegins
                                    THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_unapp_minus3qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate < fnc_minus3qtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_unapp_priorqtrs
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate >= fnc_hist_customrangebegin
                                    AND ttimesheetentries.entrydate < fnc_hist_customrangeend THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_unapp_customrange
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 1
                                    AND ttimesheetentries.entrydate < to_timestamp(NULL) THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_unapp_beforecutover
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 0 
                                    AND ttimesheetentries.funded = 0 THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_all
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 0 
                                    AND ttimesheetentries.funded = 0
                                    AND ttimesheetentries.entrydate < fnc_currentmonthbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_past
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 0 
                                    AND ttimesheetentries.funded = 0
                                    AND ttimesheetentries.entrydate >= fnc_currentmonthbegins
                                    AND ttimesheetentries.entrydate < ranges.fnc_nextmonthbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_currentmonth
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 0 
                                    AND ttimesheetentries.funded = 0
                                    AND ttimesheetentries.entrydate < fnc_currentqtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_pastqtrs
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 0 
                                    AND ttimesheetentries.funded = 0
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
                                    AND ttimesheetentries.entrydate < fnc_plus1qtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_entirecurrentqtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 0 
                                    AND ttimesheetentries.funded = 0
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
                                    AND ttimesheetentries.entrydate < fnc_currentqtrm2begins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_currentqtrm1
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 0 
                                    AND ttimesheetentries.funded = 0
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrm2begins
                                    AND ttimesheetentries.entrydate < fnc_currentqtrm3begins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_currentqtrm2
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 0 
                                    AND ttimesheetentries.funded = 0
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrm3begins
                                    AND ttimesheetentries.entrydate < fnc_plus1qtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_currentqtrm3
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 0 
                                    AND ttimesheetentries.funded = 0
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
                                    AND ttimesheetentries.entrydate < fnc_currentmonthbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_completedinqtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate >= fnc_minus1qtrbegins
                AND ttimesheetentries.entrydate < fnc_currentqtrbegins THEN totaltime
                ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_minus1qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate >= fnc_minus2qtrbegins
                AND ttimesheetentries.entrydate < fnc_minus1qtrbegins THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_minus2qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate >= fnc_minus3qtrbegins
                AND ttimesheetentries.entrydate < fnc_minus2qtrbegins THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_minus3qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate < fnc_minus3qtrbegins THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_priorqtrs
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate >= fnc_hist_customrangebegin
                AND ttimesheetentries.entrydate < fnc_hist_customrangeend THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_customrange
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate < to_timestamp(NULL) THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_beforecutover
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                 THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_unapp_all
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate < fnc_currentmonthbegins THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_unapp_past
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate >= fnc_currentmonthbegins
                AND ttimesheetentries.entrydate < ranges.fnc_nextmonthbegins THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_unapp_currentmonth
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate < fnc_currentqtrbegins THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_unapp_pastqtrs
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
                AND ttimesheetentries.entrydate < fnc_plus1qtrbegins THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_unapp_entirecurrentqtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
                AND ttimesheetentries.entrydate < fnc_currentqtrm2begins THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_unapp_currentqtrm1
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate >= fnc_currentqtrm2begins
                AND ttimesheetentries.entrydate < fnc_currentqtrm3begins THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_unapp_currentqtrm2
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate >= fnc_currentqtrm3begins
                AND ttimesheetentries.entrydate < fnc_plus1qtrbegins THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_unapp_currentqtrm3
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
                AND ttimesheetentries.entrydate < fnc_currentmonthbegins THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_unapp_completedinqtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate >= fnc_minus1qtrbegins
                AND ttimesheetentries.entrydate < fnc_currentqtrbegins THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_unapp_minus1qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate >= fnc_minus2qtrbegins
                AND ttimesheetentries.entrydate < fnc_minus1qtrbegins THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_unapp_minus2qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate >= fnc_minus3qtrbegins
                AND ttimesheetentries.entrydate < fnc_minus2qtrbegins THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_unapp_minus3qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate < fnc_minus3qtrbegins THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_unapp_priorqtrs
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate >= fnc_hist_customrangebegin
                AND ttimesheetentries.entrydate < fnc_hist_customrangeend THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_unapp_customrange
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 0 
                AND ttimesheetentries.funded = 0
                AND ttimesheetentries.entrydate < to_timestamp(NULL) THEN totaltime
             ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill_unapp_beforecutover
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.funded = 1 THEN totaltime
                ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_all
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.funded = 1
                                    AND ttimesheetentries.entrydate < fnc_currentmonthbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_past
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.funded = 1
                            AND ttimesheetentries.entrydate >= fnc_currentmonthbegins
                            AND ttimesheetentries.entrydate < ranges.fnc_nextmonthbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_currentmonth
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.funded = 1
                                    AND ttimesheetentries.entrydate < fnc_currentqtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_pastqtrs
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.funded = 1
                                    AND ttimesheetentries.entrydate >= fnc_currentqtrbegins AND ttimesheetentries.entrydate < fnc_plus1qtrbegins
                                        THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_entirecurrentqtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.funded = 1
                                AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
                                AND ttimesheetentries.entrydate < fnc_currentqtrm2begins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_currentqtrm1
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.funded = 1
                                AND ttimesheetentries.entrydate >= fnc_currentqtrm2begins
                                AND ttimesheetentries.entrydate < fnc_currentqtrm3begins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_currentqtrm2
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.funded = 1
                                AND ttimesheetentries.entrydate >= fnc_currentqtrm3begins
                                AND ttimesheetentries.entrydate < fnc_plus1qtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_currentqtrm3
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.funded = 1
                            AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
                            AND ttimesheetentries.entrydate < fnc_currentmonthbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_completedinqtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.funded = 1
                                AND ttimesheetentries.entrydate >= fnc_minus1qtrbegins
                                AND ttimesheetentries.entrydate < fnc_currentqtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_minus1qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.funded = 1
                                    AND ttimesheetentries.entrydate >= fnc_minus2qtrbegins AND ttimesheetentries.entrydate < fnc_minus1qtrbegins
                                        THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_minus2qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.funded = 1
                                    AND ttimesheetentries.entrydate >= fnc_minus3qtrbegins AND ttimesheetentries.entrydate < fnc_minus2qtrbegins
                                        THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_minus3qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.funded = 1
                                    AND ttimesheetentries.entrydate < fnc_minus3qtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_priorqtrs
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.funded = 1
                                AND ttimesheetentries.entrydate >= fnc_hist_customrangebegin
                                AND ttimesheetentries.entrydate < fnc_hist_customrangeend THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_customrange
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.funded = 1
                                AND ttimesheetentries.entrydate < to_timestamp(NULL) THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_beforecutover
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.funded = 1 THEN totaltime
                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_unapp_all
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.funded = 1
                                    AND ttimesheetentries.entrydate < fnc_currentmonthbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_unapp_past
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.funded = 1
                            AND ttimesheetentries.entrydate >= fnc_currentmonthbegins
                            AND ttimesheetentries.entrydate < ranges.fnc_nextmonthbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_unapp_currentmonth
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.funded = 1
                                    AND ttimesheetentries.entrydate < fnc_currentqtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_unapp_pastqtrs
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.funded = 1
                                AND ttimesheetentries.entrydate >= fnc_currentqtrbegins AND ttimesheetentries.entrydate < fnc_plus1qtrbegins
                                        THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_unapp_entirecurrentqtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.funded = 1
                                AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
                                AND ttimesheetentries.entrydate < fnc_currentqtrm2begins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_unapp_currentqtrm1
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.funded = 1
                                AND ttimesheetentries.entrydate >= fnc_currentqtrm2begins
                                AND ttimesheetentries.entrydate < fnc_currentqtrm3begins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_unapp_currentqtrm2
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.funded = 1
                                AND ttimesheetentries.entrydate >= fnc_currentqtrm3begins
                                AND ttimesheetentries.entrydate < fnc_plus1qtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_unapp_currentqtrm3
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.funded = 1
                                AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
                                AND ttimesheetentries.entrydate < fnc_currentmonthbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_unapp_completedinqtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.funded = 1
                                AND ttimesheetentries.entrydate >= fnc_minus1qtrbegins
                                AND ttimesheetentries.entrydate < fnc_currentqtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_unapp_minus1qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.funded = 1
                                AND ttimesheetentries.entrydate >= fnc_minus2qtrbegins AND ttimesheetentries.entrydate < fnc_minus1qtrbegins
                                        THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_unapp_minus2qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.funded = 1
                                AND ttimesheetentries.entrydate >= fnc_minus3qtrbegins AND ttimesheetentries.entrydate < fnc_minus2qtrbegins
                                        THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_unapp_minus3qtr
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.funded = 1
                                AND ttimesheetentries.entrydate < fnc_minus3qtrbegins THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_unapp_priorqtrs
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.funded = 1
                                AND ttimesheetentries.entrydate >= fnc_hist_customrangebegin
                                AND ttimesheetentries.entrydate < fnc_hist_customrangeend THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_unapp_customrange
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.funded = 1
                                AND ttimesheetentries.entrydate < to_timestamp(NULL) THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_unapp_beforecutover
            , MAX(fnc_hist_customrangebegin) AS hrsact_customrangebegin
            , MAX(fnc_hist_customrangeend) AS hrsact_customrangeend
        FROM eio_publish.tenrox_private.ttimesheetentries ttimesheetentries 
        INNER JOIN eio_publish.tenrox_private.ttask  ttask
            ON ttimesheetentries.TASKUID = ttask.uniqueid 
        LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02 AS ranges
        GROUP BY ttask.projectid
),

forecast AS (
   SELECT
       trplnbooking.projectid                                            AS projectid
        , SUM(IFNULL(trplnbookingdetails.bookedseconds, 0.00)) / 3600.00 AS hrsfcst_all
        , SUM(IFNULL(
           CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentmonthbegins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_future
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
           AND trplnbookingdetails.bookeddate < ranges.fnc_nextmonthbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_currentmonth
        , SUM(IFNULL(
           CASE WHEN trplnbookingdetails.bookeddate >= ranges.fnc_nextmonthbegins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_futuremonths
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_futureqtrs
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_entirecurrentqtr
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
           AND trplnbookingdetails.bookeddate < fnc_currentqtrm2begins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_currentqtrm1
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentqtrm2begins
           AND trplnbookingdetails.bookeddate < fnc_currentqtrm3begins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_currentqtrm2
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentqtrm3begins
           AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_currentqtrm3
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
           AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_remaininginqtr
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus2qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_plus1qtr
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus2qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus3qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_plus2qtr
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus3qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus4qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_plus3qtr
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus4qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus5qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_plus4qtr
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus5qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus6qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_plus5qtr
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus4qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_additionalqtrs
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus6qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_additional2qtrs
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_fcst_customrangebegin
           AND trplnbookingdetails.bookeddate < fnc_fcst_customrangeend THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_customrange
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= to_timestamp(NULL) THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_aftercutover
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_all
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= (DATE_TRUNC('W', CURRENT_DATE())-1)
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_future
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                   AND trplnbookingdetails.bookeddate < ranges.fnc_nextmonthbegins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_currentmonth
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= ranges.fnc_nextmonthbegins
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_futuremonths
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_futureqtrs
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
                   AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_entirecurrentqtr
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
                   AND trplnbookingdetails.bookeddate < fnc_currentqtrm2begins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_currentqtrm1
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= (DATE_TRUNC('W', CURRENT_DATE())-1)
                   AND trplnbookingdetails.bookeddate < fnc_currentqtrm2begins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_currentqtrm1_wk
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_currentqtrm2begins
                   AND trplnbookingdetails.bookeddate < fnc_currentqtrm3begins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_currentqtrm2
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= (DATE_TRUNC('W', CURRENT_DATE())-1)
                   AND trplnbookingdetails.bookeddate < fnc_currentqtrm3begins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_currentqtrm2_wk
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_currentqtrm3begins
                   AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_currentqtrm3
        ,SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= (DATE_TRUNC('W', CURRENT_DATE())-1)
                   AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_currentqtrm3_wk
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= (DATE_TRUNC('W', CURRENT_DATE())-1)
                   AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_remaininginqtr
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus2qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_plus1qtr
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_plus2qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus3qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_plus2qtr
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_plus3qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus4qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_plus3qtr
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_plus4qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus5qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_plus4qtr
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_plus5qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus6qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_plus5qtr
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_plus4qtrbegins
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_additionalqtrs
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_plus6qtrbegins
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_additionalqtrs2
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_fcst_customrangebegin
                   AND trplnbookingdetails.bookeddate < fnc_fcst_customrangeend THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_customrange
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= to_timestamp(NULL)
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_aftercutover
        , SUM(IFNULL(CASE WHEN trplnbooking.bookingobjecttype = 700 THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_gen_all
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_future
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                   AND trplnbookingdetails.bookeddate < ranges.fnc_nextmonthbegins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_currentmonth
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= ranges.fnc_nextmonthbegins
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_futuremonths
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_futureqtrs
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
                   AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_entirecurrentqtr
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
                   AND trplnbookingdetails.bookeddate < fnc_currentqtrm2begins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_currentqtrm1
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentqtrm2begins
                   AND trplnbookingdetails.bookeddate < fnc_currentqtrm3begins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_currentqtrm2
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentqtrm3begins
                   AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_currentqtrm3
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                   AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_remaininginqtr
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
                   AND trplnbookingdetails.bookeddate < fnc_plus2qtrbegins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_plus1qtr
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus2qtrbegins
                   AND trplnbookingdetails.bookeddate < fnc_plus3qtrbegins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_plus2qtr
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus3qtrbegins
                   AND trplnbookingdetails.bookeddate < fnc_plus4qtrbegins THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_plus3qtr
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus4qtrbegins
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_additionalqtrs
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_fcst_customrangebegin
                   AND trplnbookingdetails.bookeddate < fnc_fcst_customrangeend THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_customrange
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= to_timestamp(NULL)
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_aftercutover
       -- Start Soft Bookings Only section
        , SUM(IFNULL(CASE WHEN trplnbooking.bookingtype = 2 THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_all_soft
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentmonthbegins AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_future_soft
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
           AND trplnbookingdetails.bookeddate < ranges.fnc_nextmonthbegins AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_currentmonth_soft
        , SUM(IFNULL(
           CASE WHEN trplnbookingdetails.bookeddate >= ranges.fnc_nextmonthbegins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_futuremonths_soft
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_futureqtrs_soft
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_entirecurrentqtr_soft
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
           AND trplnbookingdetails.bookeddate < fnc_currentqtrm2begins AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_currentqtrm1_soft
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentqtrm2begins
           AND trplnbookingdetails.bookeddate < fnc_currentqtrm3begins AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_currentqtrm2_soft
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentqtrm3begins
           AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_currentqtrm3_soft
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
           AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_remaininginqtr_soft
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus2qtrbegins AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_plus1qtr_soft
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus2qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus3qtrbegins AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_plus2qtr_soft
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus3qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus4qtrbegins AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_plus3qtr_soft
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus4qtrbegins AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_additionalqtrs_soft
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= fnc_fcst_customrangebegin
           AND trplnbookingdetails.bookeddate < fnc_fcst_customrangeend AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_customrange_soft
        , SUM(IFNULL(CASE WHEN trplnbookingdetails.bookeddate >= to_timestamp(NULL) AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_aftercutover_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_all_soft
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                   AND trplnbooking.bookingtype = 2 THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_future_soft
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                   AND trplnbookingdetails.bookeddate < ranges.fnc_nextmonthbegins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_currentmonth_soft
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= ranges.fnc_nextmonthbegins
                   AND trplnbooking.bookingtype = 2 THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_futuremonths_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
           AND trplnbooking.bookingtype = 2 THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_futureqtrs_soft
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
                   AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_entirecurrentqtr_soft
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
                   AND trplnbookingdetails.bookeddate < fnc_currentqtrm2begins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_currentqtrm1_soft
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= (DATE_TRUNC('W', CURRENT_DATE())-1)
                   AND trplnbookingdetails.bookeddate < fnc_currentqtrm2begins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_currentqtrm1_soft_wk
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_currentqtrm2begins
                   AND trplnbookingdetails.bookeddate < fnc_currentqtrm3begins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_currentqtrm2_soft
        ,SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= (DATE_TRUNC('W', CURRENT_DATE())-1)
                   AND trplnbookingdetails.bookeddate < fnc_currentqtrm3begins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_currentqtrm2_soft_wk
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_currentqtrm3begins
                   AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_currentqtrm3_soft
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= (DATE_TRUNC('W', CURRENT_DATE())-1)
                   AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_currentqtrm3_soft_wk
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= (DATE_TRUNC('W', CURRENT_DATE())-1)
                   AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_remaininginqtr_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus2qtrbegins AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_plus1qtr_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_plus2qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus3qtrbegins AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_plus2qtr_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_plus3qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus4qtrbegins AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_plus3qtr_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_plus4qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus5qtrbegins AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_plus4qtr_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_plus5qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus6qtrbegins AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_plus5qtr_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_plus4qtrbegins
           AND trplnbooking.bookingtype = 2 THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_additionalqtrs_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_plus6qtrbegins
           AND trplnbooking.bookingtype = 2 THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_additionalqtrs2_soft
        , SUM(IFNULL(
           CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= fnc_fcst_customrangebegin
                   AND trplnbookingdetails.bookeddate < fnc_fcst_customrangeend AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_billable_customrange_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbookingdetails.bookeddate >= to_timestamp(NULL)
           AND trplnbooking.bookingtype = 2 THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_aftercutover_soft
        , SUM(IFNULL(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_gen_all_soft
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                   AND trplnbooking.bookingtype = 2 THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_future_soft
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                   AND trplnbookingdetails.bookeddate < ranges.fnc_nextmonthbegins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_currentmonth_soft
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= ranges.fnc_nextmonthbegins
                   AND trplnbooking.bookingtype = 2 THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_futuremonths_soft
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
                   AND trplnbooking.bookingtype = 2 THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_futureqtrs_soft
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
                   AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_entirecurrentqtr_soft
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
                   AND trplnbookingdetails.bookeddate < fnc_currentqtrm2begins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_currentqtrm1_soft
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentqtrm2begins
                   AND trplnbookingdetails.bookeddate < fnc_currentqtrm3begins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_currentqtrm2_soft
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentqtrm3begins
                   AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_currentqtrm3_soft
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                   AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_remaininginqtr_soft
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
                   AND trplnbookingdetails.bookeddate < fnc_plus2qtrbegins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_plus1qtr_soft
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus2qtrbegins
                   AND trplnbookingdetails.bookeddate < fnc_plus3qtrbegins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_plus2qtr_soft
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus3qtrbegins
                   AND trplnbookingdetails.bookeddate < fnc_plus4qtrbegins AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_plus3qtr_soft
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus4qtrbegins
                   AND trplnbooking.bookingtype = 2 THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_additionalqtrs_soft
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_fcst_customrangebegin
                   AND trplnbookingdetails.bookeddate < fnc_fcst_customrangeend AND trplnbooking.bookingtype = 2
                    THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_customrange_soft
        , SUM(IFNULL(
           CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= to_timestamp(NULL)
                   AND trplnbooking.bookingtype = 2 THEN trplnbookingdetails.bookedseconds
                ELSE 0.00 END, 0.00)) / 3600.00                          AS hrsfcst_gen_aftercutover_soft
       -- End Soft Bookings Only section
       -- Start non-billable Generic soft-bookings section
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingobjecttype = 700
           AND trplnbooking.bookingtype = 2 THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_nonbill_gen_all_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingobjecttype = 700
           AND trplnbooking.bookingtype = 2 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_nonbill_gen_future_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingobjecttype = 700
           AND trplnbooking.bookingtype = 2 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
           AND trplnbookingdetails.bookeddate < ranges.fnc_nextmonthbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_nonbill_gen_currentmonth_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingobjecttype = 700
           AND trplnbooking.bookingtype = 2 AND trplnbookingdetails.bookeddate >= ranges.fnc_nextmonthbegins
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_nonbill_gen_futuremonths_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingobjecttype = 700
           AND trplnbooking.bookingtype = 2 AND trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_nonbill_gen_futureqtrs_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingobjecttype = 700
           AND trplnbooking.bookingtype = 2 AND trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_nonbill_gen_entirecurrentqtr_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingobjecttype = 700
           AND trplnbooking.bookingtype = 2 AND trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
           AND trplnbookingdetails.bookeddate < fnc_currentqtrm2begins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_nonbill_gen_currentqtrm1_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingobjecttype = 700
           AND trplnbooking.bookingtype = 2 AND trplnbookingdetails.bookeddate >= fnc_currentqtrm2begins
           AND trplnbookingdetails.bookeddate < fnc_currentqtrm3begins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_nonbill_gen_currentqtrm2_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingobjecttype = 700
           AND trplnbooking.bookingtype = 2 AND trplnbookingdetails.bookeddate >= fnc_currentqtrm3begins
           AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_nonbill_gen_currentqtrm3_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingobjecttype = 700
           AND trplnbooking.bookingtype = 2 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
           AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_nonbill_gen_remaininginqtr_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingobjecttype = 700
           AND trplnbooking.bookingtype = 2 AND trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus2qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_nonbill_gen_plus1qtr_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingobjecttype = 700
           AND trplnbooking.bookingtype = 2 AND trplnbookingdetails.bookeddate >= fnc_plus2qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus3qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_nonbill_gen_plus2qtr_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingobjecttype = 700
           AND trplnbooking.bookingtype = 2 AND trplnbookingdetails.bookeddate >= fnc_plus3qtrbegins
           AND trplnbookingdetails.bookeddate < fnc_plus4qtrbegins THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_nonbill_gen_plus3qtr_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingobjecttype = 700
           AND trplnbooking.bookingtype = 2 AND trplnbookingdetails.bookeddate >= fnc_plus4qtrbegins
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_nonbill_gen_additionalqtrs_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingobjecttype = 700
           AND trplnbooking.bookingtype = 2 AND trplnbookingdetails.bookeddate >= fnc_fcst_customrangebegin
           AND trplnbookingdetails.bookeddate < fnc_fcst_customrangeend THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_nonbill_gen_customrange_soft
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingobjecttype = 700
           AND trplnbooking.bookingtype = 2 AND trplnbookingdetails.bookeddate >= to_timestamp(NULL)
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_nonbill_gen_aftercutover_soft
       -- End non-billable Generic bookings section
        , MAX(fnc_fcst_customrangebegin)                                 AS hrsfcst_customrangebegin
        , MAX(fnc_fcst_customrangeend)                                   AS hrsfcst_customrangeend
    FROM eio_publish.tenrox_private.trplnbooking trplnbooking
    INNER JOIN eio_publish.tenrox_private.trplnbookingdetails  trplnbookingdetails ON trplnbookingdetails.bookingid = trplnbooking.uniqueid 
    INNER JOIN eio_publish.tenrox_private.trplnbookingattributes trplnbookingattributes ON trplnbookingattributes.bookingid = trplnbooking.uniqueid 
    INNER JOIN eio_publish.tenrox_private.tprojectteamresource tprojectteamresource ON tprojectteamresource.projectid = trplnbooking.projectid 
            AND tprojectteamresource.resourceid = CASE trplnbooking.bookingobjecttype 
                                                    WHEN 1 THEN trplnbooking.userid 
                                                    WHEN 700 THEN trplnbooking.roleid 
                                                END 
            AND tprojectteamresource.isrole = CASE trplnbooking.bookingobjecttype 
                                                    WHEN 1 THEN 0
                                                    WHEN 700 THEN 1
                                                END
    LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02 AS ranges -- ON Ranges.FNC_CURRENTDATE = TRPLNBOOKINGDETAILS.BOOKEDDATE
    WHERE trplnbookingdetails.bookedseconds > 0
    GROUP BY 
        trplnbooking.projectid
),

is_parent_child as (
 
SELECT 
CASE
           WHEN lower(LSTDESC_16.VALUE) in ( 'is parent' ) THEN
               cast(tproject.uniqueid as string)
           WHEN lower(LSTDESC_16.VALUE) IN ( 'is master', 'is child' ) THEN
               CONCAT(CAST(tproject.parentid AS STRING))
           ELSE
               CAST(tproject.uniqueid AS STRING)
       END                                                                                     as parent_child_key
     , SUM(IFNULL(actuals.hrsact_total_all, 0.00))                                             AS hrsact_total_all
     , SUM(IFNULL(actuals.hrsact_total_past, 0.00))                                            AS hrsact_total_past
     , SUM(IFNULL(actuals.hrsact_total_currentmonth, 0.00))                                    AS hrsact_total_currentmonth
     , SUM(IFNULL(actuals.hrsact_total_pastqtrs, 0.00))                                        AS hrsact_total_pastqtrs
     , SUM(IFNULL(actuals.hrsact_total_entirecurrentqtr, 0.00))                                AS hrsact_total_entirecurrentqtr
     , SUM(IFNULL(actuals.hrsact_total_currentqtrm1, 0.00))                                    AS hrsact_total_currentqtrm1
     , SUM(IFNULL(actuals.hrsact_total_currentqtrm2, 0.00))                                    AS hrsact_total_currentqtrm2
     , SUM(IFNULL(actuals.hrsact_total_currentqtrm3, 0.00))                                    AS hrsact_total_currentqtrm3
     , SUM(IFNULL(actuals.hrsact_total_completedinqtr, 0.00))                                  AS hrsact_total_completedinqtr
     , SUM(IFNULL(actuals.hrsact_total_minus1qtr, 0.00))                                       AS hrsact_total_minus1qtr
     , SUM(IFNULL(actuals.hrsact_total_minus2qtr, 0.00))                                       AS hrsact_total_minus2qtr
     , SUM(IFNULL(actuals.hrsact_total_minus3qtr, 0.00))                                       AS hrsact_total_minus3qtr
     , SUM(IFNULL(actuals.hrsact_total_priorqtrs, 0.00))                                       AS hrsact_total_priorqtrs
     , SUM(IFNULL(actuals.hrsact_total_customrange, 0.00))                                     AS hrsact_total_customrange
     , SUM(IFNULL(actuals.hrsact_total_beforecutover, 0.00))                                   AS hrsact_total_beforecutover
     , SUM(IFNULL(actuals.hrsact_all, 0.00))                                                   AS hrsact_all
     , SUM(IFNULL(actuals.hrsact_past, 0.00))                                                  AS hrsact_past
     , SUM(IFNULL(actuals.hrsact_currentmonth, 0.00))                                          AS hrsact_currentmonth
     , SUM(IFNULL(actuals.hrsact_pastqtrs, 0.00))                                              AS hrsact_pastqtrs
     , SUM(IFNULL(actuals.hrsact_entirecurrentqtr, 0.00))                                      AS hrsact_entirecurrentqtr
     , SUM(IFNULL(actuals.hrsact_currentqtrm1, 0.00))                                          AS hrsact_currentqtrm1
     , SUM(IFNULL(actuals.hrsact_currentqtrm1_wk, 0.00))                                       AS hrsact_currentqtrm1_wk
     , SUM(IFNULL(actuals.hrsact_currentqtrm2, 0.00))                                          AS hrsact_currentqtrm2
     , SUM(IFNULL(actuals.hrsact_currentqtrm2_wk, 0.00))                                       AS hrsact_currentqtrm2_wk
     , SUM(IFNULL(actuals.hrsact_currentqtrm3, 0.00))                                          AS hrsact_currentqtrm3
     , SUM(IFNULL(actuals.hrsact_currentqtrm3_wk, 0.00))                                       AS hrsact_currentqtrm3_wk
     , SUM(IFNULL(actuals.hrsact_completedinqtr, 0.00))                                        AS hrsact_completedinqtr
     , SUM(IFNULL(actuals.hrsact_minus1qtr, 0.00))                                             AS hrsact_minus1qtr
     , SUM(IFNULL(actuals.hrsact_minus2qtr, 0.00))                                             AS hrsact_minus2qtr
     , SUM(IFNULL(actuals.hrsact_minus3qtr, 0.00))                                             AS hrsact_minus3qtr
     , SUM(IFNULL(actuals.hrsact_priorqtrs, 0.00))                                             AS hrsact_priorqtrs
     , SUM(IFNULL(actuals.hrsact_customrange, 0.00))                                           AS hrsact_customrange
     , SUM(IFNULL(actuals.hrsact_beforecutover, 0.00))                                         AS hrsact_beforecutover
     , SUM(IFNULL(actuals.hrsact_unapp_all, 0.00))                                             AS hrsact_unapp_all
     , SUM(IFNULL(actuals.hrsact_unapp_past, 0.00))                                            AS hrsact_unapp_past
     , SUM(IFNULL(actuals.hrsact_unapp_currentmonth, 0.00))                                    AS hrsact_unapp_currentmonth
     , SUM(IFNULL(actuals.hrsact_unapp_pastqtrs, 0.00))                                        AS hrsact_unapp_pastqtrs
     , SUM(IFNULL(actuals.hrsact_unapp_entirecurrentqtr, 0.00))                                AS hrsact_unapp_entirecurrentqtr
     , SUM(IFNULL(actuals.hrsact_unapp_currentqtrm1, 0.00))                                    AS hrsact_unapp_currentqtrm1
     , SUM(IFNULL(actuals.hrsact_unapp_currentqtrm2, 0.00))                                    AS hrsact_unapp_currentqtrm2
     , SUM(IFNULL(actuals.hrsact_unapp_currentqtrm3, 0.00))                                    AS hrsact_unapp_currentqtrm3
     , SUM(IFNULL(actuals.hrsact_unapp_completedinqtr, 0.00))                                  AS hrsact_unapp_completedinqtr
     , SUM(IFNULL(actuals.hrsact_unapp_minus1qtr, 0.00))                                       AS hrsact_unapp_minus1qtr
     , SUM(IFNULL(actuals.hrsact_unapp_minus2qtr, 0.00))                                       AS hrsact_unapp_minus2qtr
     , SUM(IFNULL(actuals.hrsact_unapp_minus3qtr, 0.00))                                       AS hrsact_unapp_minus3qtr
     , SUM(IFNULL(actuals.hrsact_unapp_priorqtrs, 0.00))                                       AS hrsact_unapp_priorqtrs
     , SUM(IFNULL(actuals.hrsact_unapp_customrange, 0.00))                                     AS hrsact_unapp_customrange
     , SUM(IFNULL(actuals.hrsact_unapp_beforecutover, 0.00))                                   AS hrsact_unapp_beforecutover
     , SUM(IFNULL(actuals.hrsact_nonbill_all, 0.00))                                           AS hrsact_nonbill_all
     , SUM(IFNULL(actuals.hrsact_nonbill_past, 0.00))                                          AS hrsact_nonbill_past
     , SUM(IFNULL(actuals.hrsact_nonbill_currentmonth, 0.00))                                  AS hrsact_nonbill_currentmonth
     , SUM(IFNULL(actuals.hrsact_nonbill_pastqtrs, 0.00))                                      AS hrsact_nonbill_pastqtrs
     , SUM(IFNULL(actuals.hrsact_nonbill_entirecurrentqtr, 0.00))                              AS hrsact_nonbill_entirecurrentqtr
     , SUM(IFNULL(actuals.hrsact_nonbill_currentqtrm1, 0.00))                                  AS hrsact_nonbill_currentqtrm1
     , SUM(IFNULL(actuals.hrsact_nonbill_currentqtrm2, 0.00))                                  AS hrsact_nonbill_currentqtrm2
     , SUM(IFNULL(actuals.hrsact_nonbill_currentqtrm3, 0.00))                                  AS hrsact_nonbill_currentqtrm3
     , SUM(IFNULL(actuals.hrsact_nonbill_completedinqtr, 0.00))                                AS hrsact_nonbill_completedinqtr
     , SUM(IFNULL(actuals.hrsact_nonbill_minus1qtr, 0.00))                                     AS hrsact_nonbill_minus1qtr
     , SUM(IFNULL(actuals.hrsact_nonbill_minus2qtr, 0.00))                                     AS hrsact_nonbill_minus2qtr
     , SUM(IFNULL(actuals.hrsact_nonbill_minus3qtr, 0.00))                                     AS hrsact_nonbill_minus3qtr
     , SUM(IFNULL(actuals.hrsact_nonbill_priorqtrs, 0.00))                                     AS hrsact_nonbill_priorqtrs
     , SUM(IFNULL(actuals.hrsact_nonbill_customrange, 0.00))                                   AS hrsact_nonbill_customrange
     , SUM(IFNULL(actuals.hrsact_nonbill_beforecutover, 0.00))                                 AS hrsact_nonbill_beforecutover
     , SUM(IFNULL(actuals.hrsact_nonbill_unapp_all, 0.00))                                     AS hrsact_nonbill_unapp_all
     , SUM(IFNULL(actuals.hrsact_nonbill_unapp_past, 0.00))                                    AS hrsact_nonbill_unapp_past
     , SUM(IFNULL(actuals.hrsact_nonbill_unapp_currentmonth, 0.00))                            AS hrsact_nonbill_unapp_currentmonth
     , SUM(IFNULL(actuals.hrsact_nonbill_unapp_pastqtrs, 0.00))                                AS hrsact_nonbill_unapp_pastqtrs
     , SUM(IFNULL(actuals.hrsact_nonbill_unapp_entirecurrentqtr, 0.00))                        AS hrsact_nonbill_unapp_entirecurrentqtr
     , SUM(IFNULL(actuals.hrsact_nonbill_unapp_currentqtrm1, 0.00))                            AS hrsact_nonbill_unapp_currentqtrm1
     , SUM(IFNULL(actuals.hrsact_nonbill_unapp_currentqtrm2, 0.00))                            AS hrsact_nonbill_unapp_currentqtrm2
     , SUM(IFNULL(actuals.hrsact_nonbill_unapp_currentqtrm3, 0.00))                            AS hrsact_nonbill_unapp_currentqtrm3
     , SUM(IFNULL(actuals.hrsact_nonbill_unapp_completedinqtr, 0.00))                          AS hrsact_nonbill_unapp_completedinqtr
     , SUM(IFNULL(actuals.hrsact_nonbill_unapp_minus1qtr, 0.00))                               AS hrsact_nonbill_unapp_minus1qtr
     , SUM(IFNULL(actuals.hrsact_nonbill_unapp_minus2qtr, 0.00))                               AS hrsact_nonbill_unapp_minus2qtr
     , SUM(IFNULL(actuals.hrsact_nonbill_unapp_minus3qtr, 0.00))                               AS hrsact_nonbill_unapp_minus3qtr
     , SUM(IFNULL(actuals.hrsact_nonbill_unapp_priorqtrs, 0.00))                               AS hrsact_nonbill_unapp_priorqtrs
     , SUM(IFNULL(actuals.hrsact_nonbill_unapp_customrange, 0.00))                             AS hrsact_nonbill_unapp_customrange
     , SUM(IFNULL(actuals.hrsact_nonbill_unapp_beforecutover, 0.00))                           AS hrsact_nonbill_unapp_beforecutover
     , SUM(IFNULL(actuals.hrsact_utilized_all, 0.00))                                          AS hrsact_utilized_all
     , SUM(IFNULL(actuals.hrsact_utilized_past, 0.00))                                         AS hrsact_utilized_past
     , SUM(IFNULL(actuals.hrsact_utilized_currentmonth, 0.00))                                 AS hrsact_utilized_currentmonth
     , SUM(IFNULL(actuals.hrsact_utilized_pastqtrs, 0.00))                                     AS hrsact_utilized_pastqtrs
     , SUM(IFNULL(actuals.hrsact_utilized_entirecurrentqtr, 0.00))                             AS hrsact_utilized_entirecurrentqtr
     , SUM(IFNULL(actuals.hrsact_utilized_currentqtrm1, 0.00))                                 AS hrsact_utilized_currentqtrm1
     , SUM(IFNULL(actuals.hrsact_utilized_currentqtrm2, 0.00))                                 AS hrsact_utilized_currentqtrm2
     , SUM(IFNULL(actuals.hrsact_utilized_currentqtrm3, 0.00))                                 AS hrsact_utilized_currentqtrm3
     , SUM(IFNULL(actuals.hrsact_utilized_completedinqtr, 0.00))                               AS hrsact_utilized_completedinqtr
     , SUM(IFNULL(actuals.hrsact_utilized_minus1qtr, 0.00))                                    AS hrsact_utilized_minus1qtr
     , SUM(IFNULL(actuals.hrsact_utilized_minus2qtr, 0.00))                                    AS hrsact_utilized_minus2qtr
     , SUM(IFNULL(actuals.hrsact_utilized_minus3qtr, 0.00))                                    AS hrsact_utilized_minus3qtr
     , SUM(IFNULL(actuals.hrsact_utilized_priorqtrs, 0.00))                                    AS hrsact_utilized_priorqtrs
     , SUM(IFNULL(actuals.hrsact_utilized_customrange, 0.00))                                  AS hrsact_utilized_customrange
     , SUM(IFNULL(actuals.hrsact_utilized_beforecutover, 0.00))                                AS hrsact_utilized_beforecutover
     , SUM(IFNULL(actuals.hrsact_utilized_unapp_all, 0.00))                                    AS hrsact_utilized_unapp_all
     , SUM(IFNULL(actuals.hrsact_utilized_unapp_past, 0.00))                                   AS hrsact_utilized_unapp_past
     , SUM(IFNULL(actuals.hrsact_utilized_unapp_currentmonth, 0.00))                           AS hrsact_utilized_unapp_currentmonth
     , SUM(IFNULL(actuals.hrsact_utilized_unapp_pastqtrs, 0.00))                               AS hrsact_utilized_unapp_pastqtrs
     , SUM(IFNULL(actuals.hrsact_utilized_unapp_entirecurrentqtr, 0.00))                       AS hrsact_utilized_unapp_entirecurrentqtr
     , SUM(IFNULL(actuals.hrsact_utilized_unapp_currentqtrm1, 0.00))                           AS hrsact_utilized_unapp_currentqtrm1
     , SUM(IFNULL(actuals.hrsact_utilized_unapp_currentqtrm2, 0.00))                           AS hrsact_utilized_unapp_currentqtrm2
     , SUM(IFNULL(actuals.hrsact_utilized_unapp_currentqtrm3, 0.00))                           AS hrsact_utilized_unapp_currentqtrm3
     , SUM(IFNULL(actuals.hrsact_utilized_unapp_completedinqtr, 0.00))                         AS hrsact_utilized_unapp_completedinqtr
     , SUM(IFNULL(actuals.hrsact_utilized_unapp_minus1qtr, 0.00))                              AS hrsact_utilized_unapp_minus1qtr
     , SUM(IFNULL(actuals.hrsact_utilized_unapp_minus2qtr, 0.00))                              AS hrsact_utilized_unapp_minus2qtr
     , SUM(IFNULL(actuals.hrsact_utilized_unapp_minus3qtr, 0.00))                              AS hrsact_utilized_unapp_minus3qtr
     , SUM(IFNULL(actuals.hrsact_utilized_unapp_priorqtrs, 0.00))                              AS hrsact_utilized_unapp_priorqtrs
     , SUM(IFNULL(actuals.hrsact_utilized_unapp_customrange, 0.00))                            AS hrsact_utilized_unapp_customrange
     , SUM(IFNULL(actuals.hrsact_utilized_unapp_beforecutover, 0.00))                          AS hrsact_utilized_unapp_beforecutover
     , SUM(IFNULL(actuals.hrsact_past, 0.00) + IFNULL(actuals.hrsact_utilized_past, 0.00)
           + IFNULL(forecast.hrsfcst_future, 0.00)
          )                                                                                    AS hrs_eac_with_utilized
     , SUM(IFNULL(forecast.hrsfcst_all, 0.00))                                                 AS hrsfcst_all
     , SUM(IFNULL(forecast.hrsfcst_future, 0.00))                                              AS hrsfcst_future
     , SUM(IFNULL(forecast.hrsfcst_currentmonth, 0.00))                                        AS hrsfcst_currentmonth
     , SUM(IFNULL(forecast.hrsfcst_futuremonths, 0.00))                                        AS hrsfcst_futuremonths
     , SUM(IFNULL(forecast.hrsfcst_futureqtrs, 0.00))                                          AS hrsfcst_futureqtrs
     , SUM(IFNULL(forecast.hrsfcst_entirecurrentqtr, 0.00))                                    AS hrsfcst_entirecurrentqtr
     , SUM(IFNULL(forecast.hrsfcst_currentqtrm1, 0.00))                                        AS hrsfcst_currentqtrm1
     , SUM(IFNULL(forecast.hrsfcst_currentqtrm2, 0.00))                                        AS hrsfcst_currentqtrm2
     , SUM(IFNULL(forecast.hrsfcst_currentqtrm3, 0.00))                                        AS hrsfcst_currentqtrm3
     , SUM(IFNULL(forecast.hrsfcst_remaininginqtr, 0.00))                                      AS hrsfcst_remaininginqtr
     , SUM(IFNULL(forecast.hrsfcst_plus1qtr, 0.00))                                            AS hrsfcst_plus1qtr
     , SUM(IFNULL(forecast.hrsfcst_plus2qtr, 0.00))                                            AS hrsfcst_plus2qtr
     , SUM(IFNULL(forecast.hrsfcst_plus3qtr, 0.00))                                            AS hrsfcst_plus3qtr
     , SUM(IFNULL(forecast.hrsfcst_plus4qtr, 0.00))                                            AS hrsfcst_plus4qtr
     , SUM(IFNULL(forecast.hrsfcst_plus5qtr, 0.00))                                            AS hrsfcst_plus5qtr
     , SUM(IFNULL(forecast.hrsfcst_additionalqtrs, 0.00))                                      AS hrsfcst_additionalqtrs
     , SUM(IFNULL(forecast.hrsfcst_additional2qtrs, 0.00))                                     AS hrsfcst_additional2qtrs
     , SUM(IFNULL(forecast.hrsfcst_customrange, 0.00))                                         AS hrsfcst_customrange
     , SUM(IFNULL(forecast.hrsfcst_aftercutover, 0.00))                                        AS hrsfcst_aftercutover
     , SUM(IFNULL(actuals.hrsact_past, 0.00)) + SUM(IFNULL(forecast.hrsfcst_future, 0.00))     AS hrs_eac
     , SUM(IFNULL(forecast.hrsfcst_billable_all, 0.00))                                        AS hrsfcst_billable_all
     , SUM(IFNULL(forecast.hrsfcst_billable_future, 0.00))                                     AS hrsfcst_billable_future
     , SUM(IFNULL(forecast.hrsfcst_billable_currentmonth, 0.00))                               AS hrsfcst_billable_currentmonth
     , SUM(IFNULL(forecast.hrsfcst_billable_futuremonths, 0.00))                               AS hrsfcst_billable_futuremonths
     , SUM(IFNULL(forecast.hrsfcst_billable_futureqtrs, 0.00))                                 AS hrsfcst_billable_futureqtrs
     , SUM(IFNULL(forecast.hrsfcst_billable_entirecurrentqtr, 0.00))                           AS hrsfcst_billable_entirecurrentqtr
     , SUM(IFNULL(forecast.hrsfcst_billable_currentqtrm1, 0.00))                               AS hrsfcst_billable_currentqtrm1
     , SUM(IFNULL(forecast.hrsfcst_billable_currentqtrm1_wk, 0.00))                            AS hrsfcst_billable_currentqtrm1_wk
     , SUM(IFNULL(forecast.hrsfcst_billable_currentqtrm2, 0.00))                               AS hrsfcst_billable_currentqtrm2
     , SUM(IFNULL(forecast.hrsfcst_billable_currentqtrm2_wk, 0.00))                            AS hrsfcst_billable_currentqtrm2_wk
     , SUM(IFNULL(forecast.hrsfcst_billable_currentqtrm3, 0.00))                               AS hrsfcst_billable_currentqtrm3
     , SUM(IFNULL(forecast.hrsfcst_billable_currentqtrm3_wk, 0.00))                            AS hrsfcst_billable_currentqtrm3_wk
     , SUM(IFNULL(forecast.hrsfcst_billable_remaininginqtr, 0.00))                             AS hrsfcst_billable_remaininginqtr
     , SUM(IFNULL(forecast.hrsfcst_billable_plus1qtr, 0.00))                                   AS hrsfcst_billable_plus1qtr
     , SUM(IFNULL(forecast.hrsfcst_billable_plus2qtr, 0.00))                                   AS hrsfcst_billable_plus2qtr
     , SUM(IFNULL(forecast.hrsfcst_billable_plus3qtr, 0.00))                                   AS hrsfcst_billable_plus3qtr
     , SUM(IFNULL(forecast.hrsfcst_billable_plus4qtr, 0.00))                                   AS hrsfcst_billable_plus4qtr
     , SUM(IFNULL(forecast.hrsfcst_billable_plus5qtr, 0.00))                                   AS hrsfcst_billable_plus5qtr
     , SUM(IFNULL(forecast.hrsfcst_billable_additionalqtrs, 0.00))                             AS hrsfcst_billable_additionalqtrs
     , SUM(IFNULL(forecast.hrsfcst_billable_additionalqtrs2, 0.00))                            AS hrsfcst_billable_additionalqtrs2
     , SUM(IFNULL(forecast.hrsfcst_billable_customrange, 0.00))                                AS hrsfcst_billable_customrange
     , SUM(IFNULL(forecast.hrsfcst_billable_aftercutover, 0.00))                               AS hrsfcst_billable_aftercutover
     , SUM(IFNULL(actuals.hrsact_past, 0.00) + IFNULL(forecast.hrsfcst_billable_future, 0.00)) AS hrs_billable_eac
     , SUM(IFNULL(forecast.hrsfcst_gen_all, 0.00))                                             AS hrsfcst_gen_all
     , SUM(IFNULL(forecast.hrsfcst_gen_future, 0.00))                                          AS hrsfcst_gen_future
     , SUM(IFNULL(forecast.hrsfcst_gen_currentmonth, 0.00))                                    AS hrsfcst_gen_currentmonth
     , SUM(IFNULL(forecast.hrsfcst_gen_futuremonths, 0.00))                                    AS hrsfcst_gen_futuremonths
     , SUM(IFNULL(forecast.hrsfcst_gen_futureqtrs, 0.00))                                      AS hrsfcst_gen_futureqtrs
     , SUM(IFNULL(forecast.hrsfcst_gen_entirecurrentqtr, 0.00))                                AS hrsfcst_gen_entirecurrentqtr
     , SUM(IFNULL(forecast.hrsfcst_gen_currentqtrm1, 0.00))                                    AS hrsfcst_gen_currentqtrm1
     , SUM(IFNULL(forecast.hrsfcst_gen_currentqtrm2, 0.00))                                    AS hrsfcst_gen_currentqtrm2
     , SUM(IFNULL(forecast.hrsfcst_gen_currentqtrm3, 0.00))                                    AS hrsfcst_gen_currentqtrm3
     , SUM(IFNULL(forecast.hrsfcst_gen_remaininginqtr, 0.00))                                  AS hrsfcst_gen_remaininginqtr
     , SUM(IFNULL(forecast.hrsfcst_gen_plus1qtr, 0.00))                                        AS hrsfcst_gen_plus1qtr
     , SUM(IFNULL(forecast.hrsfcst_gen_plus2qtr, 0.00))                                        AS hrsfcst_gen_plus2qtr
     , SUM(IFNULL(forecast.hrsfcst_gen_plus3qtr, 0.00))                                        AS hrsfcst_gen_plus3qtr
     , SUM(IFNULL(forecast.hrsfcst_gen_additionalqtrs, 0.00))                                  AS hrsfcst_gen_additionalqtrs
     , SUM(IFNULL(forecast.hrsfcst_gen_customrange, 0.00))                                     AS hrsfcst_gen_customrange
     , SUM(IFNULL(forecast.hrsfcst_gen_aftercutover, 0.00))                                    AS hrsfcst_gen_aftercutover
     , SUM(IFNULL(hrsfcst_all_soft, 0.00))                                                     AS hrsfcst_all_soft
     , SUM(IFNULL(hrsfcst_future_soft, 0.00))                                                  AS hrsfcst_future_soft
     , SUM(IFNULL(hrsfcst_currentmonth_soft, 0.00))                                            AS hrsfcst_currentmonth_soft
     , SUM(IFNULL(hrsfcst_futuremonths_soft, 0.00))                                            AS hrsfcst_futuremonths_soft
     , SUM(IFNULL(hrsfcst_futureqtrs_soft, 0.00))                                              AS hrsfcst_futureqtrs_soft
     , SUM(IFNULL(hrsfcst_entirecurrentqtr_soft, 0.00))                                        AS hrsfcst_entirecurrentqtr_soft
     , SUM(IFNULL(hrsfcst_currentqtrm1_soft, 0.00))                                            AS hrsfcst_currentqtrm1_soft
     , SUM(IFNULL(hrsfcst_currentqtrm2_soft, 0.00))                                            AS hrsfcst_currentqtrm2_soft
     , SUM(IFNULL(hrsfcst_currentqtrm3_soft, 0.00))                                            AS hrsfcst_currentqtrm3_soft
     , SUM(IFNULL(hrsfcst_remaininginqtr_soft, 0.00))                                          AS hrsfcst_remaininginqtr_soft
     , SUM(IFNULL(hrsfcst_plus1qtr_soft, 0.00))                                                AS hrsfcst_plus1qtr_soft
     , SUM(IFNULL(hrsfcst_plus2qtr_soft, 0.00))                                                AS hrsfcst_plus2qtr_soft
     , SUM(IFNULL(hrsfcst_plus3qtr_soft, 0.00))                                                AS hrsfcst_plus3qtr_soft
     , SUM(IFNULL(hrsfcst_additionalqtrs_soft, 0.00))                                          AS hrsfcst_additionalqtrs_soft
     , SUM(IFNULL(hrsfcst_customrange_soft, 0.00))                                             AS hrsfcst_customrange_soft
     , SUM(IFNULL(hrsfcst_aftercutover_soft, 0.00))                                            AS hrsfcst_aftercutover_soft
     , SUM(IFNULL(hrsfcst_billable_all_soft, 0.00))                                            AS hrsfcst_billable_all_soft
     , SUM(IFNULL(hrsfcst_billable_future_soft, 0.00))                                         AS hrsfcst_billable_future_soft
     , SUM(IFNULL(hrsfcst_billable_currentmonth_soft, 0.00))                                   AS hrsfcst_billable_currentmonth_soft
     , SUM(IFNULL(hrsfcst_billable_futuremonths_soft, 0.00))                                   AS hrsfcst_billable_futuremonths_soft
     , SUM(IFNULL(hrsfcst_billable_futureqtrs_soft, 0.00))                                     AS hrsfcst_billable_futureqtrs_soft
     , SUM(IFNULL(hrsfcst_billable_entirecurrentqtr_soft, 0.00))                               AS hrsfcst_billable_entirecurrentqtr_soft
     , SUM(IFNULL(hrsfcst_billable_currentqtrm1_soft, 0.00))                                   AS hrsfcst_billable_currentqtrm1_soft
     , SUM(IFNULL(hrsfcst_billable_currentqtrm2_soft, 0.00))                                   AS hrsfcst_billable_currentqtrm2_soft
     , SUM(IFNULL(hrsfcst_billable_currentqtrm3_soft, 0.00))                                   AS hrsfcst_billable_currentqtrm3_soft
     , SUM(IFNULL(hrsfcst_billable_currentqtrm1_soft_wk, 0.00))                                AS hrsfcst_billable_currentqtrm1_soft_wk
     , SUM(IFNULL(hrsfcst_billable_currentqtrm2_soft_wk, 0.00))                                AS hrsfcst_billable_currentqtrm2_soft_wk
     , SUM(IFNULL(hrsfcst_billable_currentqtrm3_soft_wk, 0.00))                                AS hrsfcst_billable_currentqtrm3_soft_wk
     , SUM(IFNULL(hrsfcst_billable_remaininginqtr_soft, 0.00))                                 AS hrsfcst_billable_remaininginqtr_soft
     , SUM(IFNULL(hrsfcst_billable_plus1qtr_soft, 0.00))                                       AS hrsfcst_billable_plus1qtr_soft
     , SUM(IFNULL(hrsfcst_billable_plus2qtr_soft, 0.00))                                       AS hrsfcst_billable_plus2qtr_soft
     , SUM(IFNULL(hrsfcst_billable_plus3qtr_soft, 0.00))                                       AS hrsfcst_billable_plus3qtr_soft
     , SUM(IFNULL(hrsfcst_billable_plus4qtr_soft, 0.00))                                       AS hrsfcst_billable_plus4qtr_soft
     , SUM(IFNULL(hrsfcst_billable_plus5qtr_soft, 0.00))                                       AS hrsfcst_billable_plus5qtr_soft
     , SUM(IFNULL(hrsfcst_billable_additionalqtrs_soft, 0.00))                                 AS hrsfcst_billable_additionalqtrs_soft
     , SUM(IFNULL(hrsfcst_billable_additionalqtrs2_soft, 0.00))                                AS hrsfcst_billable_additionalqtrs2_soft
     , SUM(IFNULL(hrsfcst_billable_customrange_soft, 0.00))                                    AS hrsfcst_billable_customrange_soft
     , SUM(IFNULL(hrsfcst_billable_aftercutover_soft, 0.00))                                   AS hrsfcst_billable_aftercutover_soft
     , SUM(IFNULL(hrsfcst_gen_all_soft, 0.00))                                                 AS hrsfcst_gen_all_soft
     , SUM(IFNULL(hrsfcst_gen_future_soft, 0.00))                                              AS hrsfcst_gen_future_soft
     , SUM(IFNULL(hrsfcst_gen_currentmonth_soft, 0.00))                                        AS hrsfcst_gen_currentmonth_soft
     , SUM(IFNULL(hrsfcst_gen_futuremonths_soft, 0.00))                                        AS hrsfcst_gen_futuremonths_soft
     , SUM(IFNULL(hrsfcst_gen_futureqtrs_soft, 0.00))                                          AS hrsfcst_gen_futureqtrs_soft
     , SUM(IFNULL(hrsfcst_gen_entirecurrentqtr_soft, 0.00))                                    AS hrsfcst_gen_entirecurrentqtr_soft
     , SUM(IFNULL(hrsfcst_gen_currentqtrm1_soft, 0.00))                                        AS hrsfcst_gen_currentqtrm1_soft
     , SUM(IFNULL(hrsfcst_gen_currentqtrm2_soft, 0.00))                                        AS hrsfcst_gen_currentqtrm2_soft
     , SUM(IFNULL(hrsfcst_gen_currentqtrm3_soft, 0.00))                                        AS hrsfcst_gen_currentqtrm3_soft
     , SUM(IFNULL(hrsfcst_gen_remaininginqtr_soft, 0.00))                                      AS hrsfcst_gen_remaininginqtr_soft
     , SUM(IFNULL(hrsfcst_gen_plus1qtr_soft, 0.00))                                            AS hrsfcst_gen_plus1qtr_soft
     , SUM(IFNULL(hrsfcst_gen_plus2qtr_soft, 0.00))                                            AS hrsfcst_gen_plus2qtr_soft
     , SUM(IFNULL(hrsfcst_gen_plus3qtr_soft, 0.00))                                            AS hrsfcst_gen_plus3qtr_soft
     , SUM(IFNULL(hrsfcst_gen_additionalqtrs_soft, 0.00))                                      AS hrsfcst_gen_additionalqtrs_soft
     , SUM(IFNULL(hrsfcst_gen_customrange_soft, 0.00))                                         AS hrsfcst_gen_customrange_soft
     , SUM(IFNULL(hrsfcst_gen_aftercutover_soft, 0.00))                                        AS hrsfcst_gen_aftercutover_soft
     , SUM(IFNULL(hrsfcst_nonbill_gen_all_soft, 0.00))                                         AS hrsfcst_nonbill_gen_all_soft
     , SUM(IFNULL(hrsfcst_nonbill_gen_future_soft, 0.00))                                      AS hrsfcst_nonbill_gen_future_soft
     , SUM(IFNULL(hrsfcst_nonbill_gen_currentmonth_soft, 0.00))                                AS hrsfcst_nonbill_gen_currentmonth_soft
     , SUM(IFNULL(hrsfcst_nonbill_gen_futuremonths_soft, 0.00))                                AS hrsfcst_nonbill_gen_futuremonths_soft
     , SUM(IFNULL(hrsfcst_nonbill_gen_futureqtrs_soft, 0.00))                                  AS hrsfcst_nonbill_gen_futureqtrs_soft
     , SUM(IFNULL(hrsfcst_nonbill_gen_entirecurrentqtr_soft, 0.00))                            AS hrsfcst_nonbill_gen_entirecurrentqtr_soft
     , SUM(IFNULL(hrsfcst_nonbill_gen_currentqtrm1_soft, 0.00))                                AS hrsfcst_nonbill_gen_currentqtrm1_soft
     , SUM(IFNULL(hrsfcst_nonbill_gen_currentqtrm2_soft, 0.00))                                AS hrsfcst_nonbill_gen_currentqtrm2_soft
     , SUM(IFNULL(hrsfcst_nonbill_gen_currentqtrm3_soft, 0.00))                                AS hrsfcst_nonbill_gen_currentqtrm3_soft
     , SUM(IFNULL(hrsfcst_nonbill_gen_remaininginqtr_soft, 0.00))                              AS hrsfcst_nonbill_gen_remaininginqtr_soft
     , SUM(IFNULL(hrsfcst_nonbill_gen_plus1qtr_soft, 0.00))                                    AS hrsfcst_nonbill_gen_plus1qtr_soft
     , SUM(IFNULL(hrsfcst_nonbill_gen_plus2qtr_soft, 0.00))                                    AS hrsfcst_nonbill_gen_plus2qtr_soft
     , SUM(IFNULL(hrsfcst_nonbill_gen_plus3qtr_soft, 0.00))                                    AS hrsfcst_nonbill_gen_plus3qtr_soft
     , SUM(IFNULL(hrsfcst_nonbill_gen_additionalqtrs_soft, 0.00))                              AS hrsfcst_nonbill_gen_additionalqtrs_soft
     , SUM(IFNULL(hrsfcst_nonbill_gen_customrange_soft, 0.00))                                 AS hrsfcst_nonbill_gen_customrange_soft
     , SUM(IFNULL(hrsfcst_nonbill_gen_aftercutover_soft, 0.00))                                AS hrsfcst_nonbill_gen_aftercutover_soft
  
                                  
FROM eio_publish.tenrox_private.tproject  tproject
        LEFT JOIN eio_publish.tenrox_private.tprojectcustfld  a On a.PROJECTID = tproject.uniqueid
        LEFT JOIN eio_publish.tenrox_private.tcustlst AS LST_16  ON a.ADSK_MasterAgreement_ProjectType = LST_16.UNIQUEID 
        LEFT JOIN eio_publish.tenrox_private.tcustlstdesc AS LSTDESC_16  ON LST_16.UNIQUEID = LSTDESC_16.CUSTLSTID AND LSTDESC_16.LANGUAGE = 0
LEFT JOIN
    (
        SELECT DISTINCT 
            projectid AS projectid
        FROM eio_publish.tenrox_private.ttimeentry ttimeentry
        JOIN eio_publish.tenrox_private.ttask ttask
            ON ttimeentry.taskid = ttask.uniqueid
        UNION
        SELECT DISTINCT 
            trplnbooking.projectid AS projectid
        FROM eio_publish.tenrox_private.trplnbooking trplnbooking
        JOIN eio_publish.tenrox_private.trplnbookingdetails trplnbookingdetails
            ON trplnbookingdetails.bookingid = trplnbooking.uniqueid
    ) projectlinks
    ON projectlinks.projectid = tproject.uniqueid 
LEFT JOIN actuals ON actuals.projectid = projectlinks.projectid 
LEFT JOIN forecast ON forecast.projectid = projectlinks.projectid
where LSTDESC_16.VALUE in ('IS Parent','IS Child')
group by
parent_child_key 


)


--select * from is_parent_child where parent_child_key = '14989';

SELECT 
     tproject.uniqueid                                                  AS projectid
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_total_all
        ELSE IFNULL(actuals.hrsact_total_all, 0.00)  
  END                AS hrsact_total_all
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_total_past 
        ELSE IFNULL(actuals.hrsact_total_past, 0.00) 
  END                AS hrsact_total_past
  ,CASE
    WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_total_currentmonth
    ELSE COALESCE(actuals.hrsact_total_currentmonth, 0.00) 
  END          AS hrsact_total_currentmonth

  ,CASE
    WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_total_pastqtrs
    ELSE COALESCE(actuals.hrsact_total_pastqtrs, 0.00)
  END                                                                   AS hrsact_total_pastqtrs

  ,CASE
    WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_total_entirecurrentqtr
    ELSE COALESCE(actuals.hrsact_total_entirecurrentqtr, 0.00)
  END                                                                    AS hrsact_total_entirecurrentqtr

  ,CASE
    WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_total_currentqtrm1
    ELSE COALESCE(actuals.hrsact_total_currentqtrm1, 0.00)
  END                                                                    AS hrsact_total_currentqtrm1

  ,CASE
    WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_total_currentqtrm2
    ELSE COALESCE(actuals.hrsact_total_currentqtrm2, 0.00)
  END                                                                   AS hrsact_total_currentqtrm2

  ,CASE
    WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_total_currentqtrm3
    ELSE COALESCE(actuals.hrsact_total_currentqtrm3, 0.00)
  END                                                                   AS hrsact_total_currentqtrm3

  ,CASE
    WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_total_completedinqtr
    ELSE COALESCE(actuals.hrsact_total_completedinqtr, 0.00)
  END                                                                   AS hrsact_total_completedinqtr

  ,CASE
    WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_total_minus1qtr
    ELSE COALESCE(actuals.hrsact_total_minus1qtr, 0.00)
  END                                                                   AS hrsact_total_minus1qtr

  ,CASE
    WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_total_minus2qtr
    ELSE COALESCE(actuals.hrsact_total_minus2qtr, 0.00)
  END                                                                   AS hrsact_total_minus2qtr

  ,CASE
    WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_total_minus3qtr
    ELSE COALESCE(actuals.hrsact_total_minus3qtr, 0.00)
  END                                                                   AS hrsact_total_minus3qtr

  ,CASE
    WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_total_priorqtrs
    ELSE COALESCE(actuals.hrsact_total_priorqtrs, 0.00)
  END                                                                   AS hrsact_total_priorqtrs

  ,CASE
    WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_total_customrange
    ELSE COALESCE(actuals.hrsact_total_customrange, 0.00)
  END                                                                   AS hrsact_total_customrange

  ,CASE
    WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_total_beforecutover
    ELSE COALESCE(actuals.hrsact_total_beforecutover, 0.00)
  END                                                                   AS hrsact_total_beforecutover

  ,CASE
    WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_all
    ELSE COALESCE(actuals.hrsact_all, 0.00)
  END                                                                   AS hrsact_all

 ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_past  
        ELSE IFNULL(actuals.hrsact_past, 0.00)  
  END                     AS hrsact_past
 ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_currentmonth 
       ELSE IFNULL(actuals.hrsact_currentmonth, 0.00) 
  END               AS hrsact_currentmonth

 ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_pastqtrs  
       ELSE IFNULL(actuals.hrsact_pastqtrs, 0.00) 
  END                   AS hrsact_pastqtrs

 ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_entirecurrentqtr
       ELSE IFNULL(actuals.hrsact_entirecurrentqtr, 0.00) 
  END           AS hrsact_entirecurrentqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_currentqtrm1
       ELSE IFNULL(actuals.hrsact_currentqtrm1, 0.00) 
  END               AS hrsact_currentqtrm1
   ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_currentqtrm1_wk
       ELSE IFNULL(actuals.hrsact_currentqtrm1_wk, 0.00) 
  END               AS hrsact_currentqtrm1_wk

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_currentqtrm2
       ELSE IFNULL(actuals.hrsact_currentqtrm2, 0.00) 
  END               AS hrsact_currentqtrm2
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_currentqtrm2_wk
       ELSE IFNULL(actuals.hrsact_currentqtrm2_wk, 0.00) 
  END               AS hrsact_currentqtrm2_wk

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_currentqtrm3
       ELSE IFNULL(actuals.hrsact_currentqtrm3, 0.00) 
  END               AS hrsact_currentqtrm3
  
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_currentqtrm3_wk
       ELSE IFNULL(actuals.hrsact_currentqtrm3_wk, 0.00) 
  END               AS hrsact_currentqtrm3_wk
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_completedinqtr
       ELSE IFNULL(actuals.hrsact_completedinqtr, 0.00) 
  END             AS hrsact_completedinqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_minus1qtr
       ELSE IFNULL(actuals.hrsact_minus1qtr, 0.00) 
  END                  AS hrsact_minus1qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_minus2qtr
       ELSE IFNULL(actuals.hrsact_minus2qtr, 0.00) 
  END                  AS hrsact_minus2qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_minus3qtr
       ELSE IFNULL(actuals.hrsact_minus3qtr, 0.00) 
  END                  AS hrsact_minus3qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_priorqtrs
       ELSE IFNULL(actuals.hrsact_priorqtrs, 0.00) 
  END                  AS hrsact_priorqtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_customrange
       ELSE IFNULL(actuals.hrsact_customrange, 0.00) 
  END                AS hrsact_customrange

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_beforecutover
       ELSE IFNULL(actuals.hrsact_beforecutover, 0.00) 
  END              AS hrsact_beforecutover
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_unapp_all 
       ELSE IFNULL(actuals.hrsact_unapp_all, 0.00) 
  END                  AS hrsact_unapp_all

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_unapp_past 
       ELSE IFNULL(actuals.hrsact_unapp_past, 0.00) 
  END                 AS hrsact_unapp_past

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_unapp_currentmonth 
       ELSE IFNULL(actuals.hrsact_unapp_currentmonth, 0.00) 
  END         AS hrsact_unapp_currentmonth

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_unapp_pastqtrs 
       ELSE IFNULL(actuals.hrsact_unapp_pastqtrs, 0.00) 
  END             AS hrsact_unapp_pastqtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_unapp_entirecurrentqtr 
       ELSE IFNULL(actuals.hrsact_unapp_entirecurrentqtr, 0.00) 
  END     AS hrsact_unapp_entirecurrentqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_unapp_currentqtrm1 
       ELSE IFNULL(actuals.hrsact_unapp_currentqtrm1, 0.00) 
  END         AS hrsact_unapp_currentqtrm1

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_unapp_currentqtrm2 
       ELSE IFNULL(actuals.hrsact_unapp_currentqtrm2, 0.00) 
  END         AS hrsact_unapp_currentqtrm2

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_unapp_currentqtrm3 
       ELSE IFNULL(actuals.hrsact_unapp_currentqtrm3, 0.00) 
  END         AS hrsact_unapp_currentqtrm3

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_unapp_completedinqtr 
       ELSE IFNULL(actuals.hrsact_unapp_completedinqtr, 0.00) 
  END       AS hrsact_unapp_completedinqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_unapp_minus1qtr 
       ELSE IFNULL(actuals.hrsact_unapp_minus1qtr, 0.00) 
  END            AS hrsact_unapp_minus1qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_unapp_minus2qtr 
       ELSE IFNULL(actuals.hrsact_unapp_minus2qtr, 0.00) 
  END            AS hrsact_unapp_minus2qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_unapp_minus3qtr 
       ELSE IFNULL(actuals.hrsact_unapp_minus3qtr, 0.00) 
  END            AS hrsact_unapp_minus3qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_unapp_priorqtrs 
       ELSE IFNULL(actuals.hrsact_unapp_priorqtrs, 0.00) 
  END            AS hrsact_unapp_priorqtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_unapp_customrange 
       ELSE IFNULL(actuals.hrsact_unapp_customrange, 0.00) 
  END          AS hrsact_unapp_customrange

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_unapp_beforecutover 
       ELSE IFNULL(actuals.hrsact_unapp_beforecutover, 0.00) 
  END        AS hrsact_unapp_beforecutover
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_all 
       ELSE IFNULL(actuals.hrsact_nonbill_all, 0.00) 
  END                AS hrsact_nonbill_all

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_past 
       ELSE IFNULL(actuals.hrsact_nonbill_past, 0.00) 
  END               AS hrsact_nonbill_past

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_currentmonth 
       ELSE IFNULL(actuals.hrsact_nonbill_currentmonth, 0.00) 
  END       AS hrsact_nonbill_currentmonth

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_pastqtrs 
       ELSE IFNULL(actuals.hrsact_nonbill_pastqtrs, 0.00) 
  END           AS hrsact_nonbill_pastqtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_entirecurrentqtr 
       ELSE IFNULL(actuals.hrsact_nonbill_entirecurrentqtr, 0.00) 
  END   AS hrsact_nonbill_entirecurrentqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_currentqtrm1 
       ELSE IFNULL(actuals.hrsact_nonbill_currentqtrm1, 0.00) 
  END       AS hrsact_nonbill_currentqtrm1

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_currentqtrm2 
       ELSE IFNULL(actuals.hrsact_nonbill_currentqtrm2, 0.00) 
  END       AS hrsact_nonbill_currentqtrm2

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_currentqtrm3 
       ELSE IFNULL(actuals.hrsact_nonbill_currentqtrm3, 0.00) 
  END       AS hrsact_nonbill_currentqtrm3

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_completedinqtr 
       ELSE IFNULL(actuals.hrsact_nonbill_completedinqtr, 0.00) 
  END     AS hrsact_nonbill_completedinqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_minus1qtr 
       ELSE IFNULL(actuals.hrsact_nonbill_minus1qtr, 0.00) 
  END          AS hrsact_nonbill_minus1qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_minus2qtr 
       ELSE IFNULL(actuals.hrsact_nonbill_minus2qtr, 0.00) 
  END          AS hrsact_nonbill_minus2qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_minus3qtr 
       ELSE IFNULL(actuals.hrsact_nonbill_minus3qtr, 0.00) 
  END          AS hrsact_nonbill_minus3qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_priorqtrs 
       ELSE IFNULL(actuals.hrsact_nonbill_priorqtrs, 0.00) 
  END          AS hrsact_nonbill_priorqtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_customrange 
       ELSE IFNULL(actuals.hrsact_nonbill_customrange, 0.00) 
  END        AS hrsact_nonbill_customrange

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_beforecutover 
       ELSE IFNULL(actuals.hrsact_nonbill_beforecutover, 0.00) 
  END      AS hrsact_nonbill_beforecutover
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_unapp_all 
       ELSE IFNULL(actuals.hrsact_nonbill_unapp_all, 0.00) 
  END          AS hrsact_nonbill_unapp_all

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_unapp_past 
       ELSE IFNULL(actuals.hrsact_nonbill_unapp_past, 0.00) 
  END         AS hrsact_nonbill_unapp_past

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_unapp_currentmonth 
       ELSE IFNULL(actuals.hrsact_nonbill_unapp_currentmonth, 0.00) 
  END                                                                   AS hrsact_nonbill_unapp_currentmonth

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_unapp_pastqtrs 
       ELSE IFNULL(actuals.hrsact_nonbill_unapp_pastqtrs, 0.00) 
  END     AS hrsact_nonbill_unapp_pastqtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_unapp_entirecurrentqtr 
       ELSE IFNULL(actuals.hrsact_nonbill_unapp_entirecurrentqtr, 0.00) 
   END                                                                  AS hrsact_nonbill_unapp_entirecurrentqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_unapp_currentqtrm1 
       ELSE IFNULL(actuals.hrsact_nonbill_unapp_currentqtrm1, 0.00) 
  END                                                                   AS hrsact_nonbill_unapp_currentqtrm1

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_unapp_currentqtrm2 
       ELSE IFNULL(actuals.hrsact_nonbill_unapp_currentqtrm2, 0.00) 
  END                                                                   AS hrsact_nonbill_unapp_currentqtrm2

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_unapp_currentqtrm3 
       ELSE IFNULL(actuals.hrsact_nonbill_unapp_currentqtrm3, 0.00) 
  END                                                                   AS hrsact_nonbill_unapp_currentqtrm3

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_unapp_completedinqtr 
       ELSE IFNULL(actuals.hrsact_nonbill_unapp_completedinqtr, 0.00) 
  END                                                                   AS hrsact_nonbill_unapp_completedinqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_unapp_minus1qtr 
       ELSE IFNULL(actuals.hrsact_nonbill_unapp_minus1qtr, 0.00) 
  END                                                                   AS hrsact_nonbill_unapp_minus1qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_unapp_minus2qtr 
       ELSE IFNULL(actuals.hrsact_nonbill_unapp_minus2qtr, 0.00) 
  END                                                                   AS hrsact_nonbill_unapp_minus2qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_unapp_minus3qtr 
       ELSE IFNULL(actuals.hrsact_nonbill_unapp_minus3qtr, 0.00) 
  END                                                                   AS hrsact_nonbill_unapp_minus3qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_unapp_priorqtrs 
       ELSE IFNULL(actuals.hrsact_nonbill_unapp_priorqtrs, 0.00) 
  END                                                                   AS hrsact_nonbill_unapp_priorqtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_unapp_customrange 
       ELSE IFNULL(actuals.hrsact_nonbill_unapp_customrange, 0.00) 
  END                                                                   AS hrsact_nonbill_unapp_customrange

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_nonbill_unapp_beforecutover 
       ELSE IFNULL(actuals.hrsact_nonbill_unapp_beforecutover, 0.00) 
  END                                                                   AS hrsact_nonbill_unapp_beforecutover
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_all 
       ELSE IFNULL(actuals.hrsact_utilized_all, 0.00) 
  END               AS hrsact_utilized_all

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_past 
       ELSE IFNULL(actuals.hrsact_utilized_past, 0.00) 
  END              AS hrsact_utilized_past

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_currentmonth 
       ELSE IFNULL(actuals.hrsact_utilized_currentmonth, 0.00) 
  END                                                                   AS hrsact_utilized_currentmonth

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_pastqtrs 
       ELSE IFNULL(actuals.hrsact_utilized_pastqtrs, 0.00) 
  END                                                                   AS hrsact_utilized_pastqtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_entirecurrentqtr 
       ELSE IFNULL(actuals.hrsact_utilized_entirecurrentqtr, 0.00) 
  END                                                                   AS hrsact_utilized_entirecurrentqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_currentqtrm1 
       ELSE IFNULL(actuals.hrsact_utilized_currentqtrm1, 0.00) 
  END      AS hrsact_utilized_currentqtrm1

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_currentqtrm2 
       ELSE IFNULL(actuals.hrsact_utilized_currentqtrm2, 0.00) 
  END      AS hrsact_utilized_currentqtrm2

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_currentqtrm3 
       ELSE IFNULL(actuals.hrsact_utilized_currentqtrm3, 0.00) 
  END      AS hrsact_utilized_currentqtrm3

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_completedinqtr 
       ELSE IFNULL(actuals.hrsact_utilized_completedinqtr, 0.00) 
  END    AS hrsact_utilized_completedinqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_minus1qtr 
       ELSE IFNULL(actuals.hrsact_utilized_minus1qtr, 0.00) 
  END         AS hrsact_utilized_minus1qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_minus2qtr 
       ELSE IFNULL(actuals.hrsact_utilized_minus2qtr, 0.00) 
  END         AS hrsact_utilized_minus2qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_minus3qtr 
       ELSE IFNULL(actuals.hrsact_utilized_minus3qtr, 0.00) 
  END         AS hrsact_utilized_minus3qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_priorqtrs 
       ELSE IFNULL(actuals.hrsact_utilized_priorqtrs, 0.00) 
  END         AS hrsact_utilized_priorqtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_customrange 
       ELSE IFNULL(actuals.hrsact_utilized_customrange, 0.00) 
  END       AS hrsact_utilized_customrange

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_beforecutover 
       ELSE IFNULL(actuals.hrsact_utilized_beforecutover, 0.00) 
  END     AS hrsact_utilized_beforecutover
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_unapp_all 
       ELSE IFNULL(actuals.hrsact_utilized_unapp_all, 0.00) 
  END         AS hrsact_utilized_unapp_all

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_unapp_past 
       ELSE IFNULL(actuals.hrsact_utilized_unapp_past, 0.00) 
  END        AS hrsact_utilized_unapp_past

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_unapp_currentmonth 
       ELSE IFNULL(actuals.hrsact_utilized_unapp_currentmonth, 0.00) 
  END                                                                   AS hrsact_utilized_unapp_currentmonth

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_unapp_pastqtrs 
       ELSE IFNULL(actuals.hrsact_utilized_unapp_pastqtrs, 0.00) 
  END                                                                   AS hrsact_utilized_unapp_pastqtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_unapp_entirecurrentqtr 
       ELSE IFNULL(actuals.hrsact_utilized_unapp_entirecurrentqtr, 0.00) 
  END                                                                   AS hrsact_utilized_unapp_entirecurrentqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_unapp_currentqtrm1 
       ELSE IFNULL(actuals.hrsact_utilized_unapp_currentqtrm1, 0.00) 
  END                                                                   AS hrsact_utilized_unapp_currentqtrm1

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_unapp_currentqtrm2 
       ELSE IFNULL(actuals.hrsact_utilized_unapp_currentqtrm2, 0.00) 
  END                                                                   AS hrsact_utilized_unapp_currentqtrm2

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_unapp_currentqtrm3 
       ELSE IFNULL(actuals.hrsact_utilized_unapp_currentqtrm3, 0.00) 
  END                                                                   AS hrsact_utilized_unapp_currentqtrm3

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_unapp_completedinqtr 
       ELSE IFNULL(actuals.hrsact_utilized_unapp_completedinqtr, 0.00) 
  END                                                                   AS hrsact_utilized_unapp_completedinqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_unapp_minus1qtr 
       ELSE IFNULL(actuals.hrsact_utilized_unapp_minus1qtr, 0.00) 
  END                                                                   AS hrsact_utilized_unapp_minus1qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_unapp_minus2qtr 
       ELSE IFNULL(actuals.hrsact_utilized_unapp_minus2qtr, 0.00) END   AS hrsact_utilized_unapp_minus2qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_unapp_minus3qtr 
       ELSE IFNULL(actuals.hrsact_utilized_unapp_minus3qtr, 0.00) END   AS hrsact_utilized_unapp_minus3qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_unapp_priorqtrs 
       ELSE IFNULL(actuals.hrsact_utilized_unapp_priorqtrs, 0.00) END   AS hrsact_utilized_unapp_priorqtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_unapp_customrange 
       ELSE IFNULL(actuals.hrsact_utilized_unapp_customrange, 0.00) 
  END                                                                   AS hrsact_utilized_unapp_customrange

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsact_utilized_unapp_beforecutover 
       ELSE IFNULL(actuals.hrsact_utilized_unapp_beforecutover, 0.00) 
  END                                                                   AS hrsact_utilized_unapp_beforecutover
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrs_eac_with_utilized
    ELSE IFNULL(actuals.hrsact_past, 0.00)
         + IFNULL(actuals.hrsact_utilized_past, 0.00)
         + IFNULL(forecast.hrsfcst_future, 0.00)    
  END                 AS hrs_eac_with_utilized
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_all 
       ELSE IFNULL(forecast.hrsfcst_all, 0.00) END                      AS hrsfcst_all

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_future 
       ELSE IFNULL(forecast.hrsfcst_future, 0.00) 
  END                   AS hrsfcst_future

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_currentmonth 
       ELSE IFNULL(forecast.hrsfcst_currentmonth, 0.00) 
  END             AS hrsfcst_currentmonth

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_futuremonths 
       ELSE IFNULL(forecast.hrsfcst_futuremonths, 0.00) 
  END             AS hrsfcst_futuremonths

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_futureqtrs 
       ELSE IFNULL(forecast.hrsfcst_futureqtrs, 0.00) 
  END               AS hrsfcst_futureqtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_entirecurrentqtr 
       ELSE IFNULL(forecast.hrsfcst_entirecurrentqtr, 0.00) 
  END         AS hrsfcst_entirecurrentqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_currentqtrm1 
       ELSE IFNULL(forecast.hrsfcst_currentqtrm1, 0.00) 
  END             AS hrsfcst_currentqtrm1

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_currentqtrm2 
       ELSE IFNULL(forecast.hrsfcst_currentqtrm2, 0.00) 
  END             AS hrsfcst_currentqtrm2

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_currentqtrm3 
       ELSE IFNULL(forecast.hrsfcst_currentqtrm3, 0.00) 
  END             AS hrsfcst_currentqtrm3

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_remaininginqtr 
       ELSE IFNULL(forecast.hrsfcst_remaininginqtr, 0.00) 
  END           AS hrsfcst_remaininginqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_plus1qtr 
       ELSE IFNULL(forecast.hrsfcst_plus1qtr, 0.00) 
  END                 AS hrsfcst_plus1qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_plus2qtr 
       ELSE IFNULL(forecast.hrsfcst_plus2qtr, 0.00) 
  END                 AS hrsfcst_plus2qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_plus3qtr 
       ELSE IFNULL(forecast.hrsfcst_plus3qtr, 0.00) 
  END                 AS hrsfcst_plus3qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_plus4qtr 
       ELSE IFNULL(forecast.hrsfcst_plus4qtr, 0.00) 
  END                 AS hrsfcst_plus4qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_plus5qtr 
       ELSE IFNULL(forecast.hrsfcst_plus5qtr, 0.00) 
  END                 AS hrsfcst_plus5qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_additionalqtrs 
       ELSE IFNULL(forecast.hrsfcst_additionalqtrs, 0.00) 
  END           AS hrsfcst_additionalqtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_additional2qtrs 
       ELSE IFNULL(forecast.hrsfcst_additional2qtrs, 0.00) 
  END          AS hrsfcst_additional2qtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_customrange 
       ELSE IFNULL(forecast.hrsfcst_customrange, 0.00) 
  END              AS hrsfcst_customrange

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_aftercutover 
       ELSE IFNULL(forecast.hrsfcst_aftercutover, 0.00) 
  END             AS hrsfcst_aftercutover
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN  ipc.hrs_eac
    ELSE IFNULL(actuals.hrsact_past, 0.00)
         + IFNULL(forecast.hrsfcst_future, 0.00)     
  END                   AS hrs_eac
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_all 
       ELSE IFNULL(forecast.hrsfcst_billable_all, 0.00) 
  END             AS hrsfcst_billable_all

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_future 
       ELSE IFNULL(forecast.hrsfcst_billable_future, 0.00) 
  END          AS hrsfcst_billable_future

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_currentmonth 
       ELSE IFNULL(forecast.hrsfcst_billable_currentmonth, 0.00) 
  END    AS hrsfcst_billable_currentmonth

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_futuremonths 
       ELSE IFNULL(forecast.hrsfcst_billable_futuremonths, 0.00) 
  END    AS hrsfcst_billable_futuremonths

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_futureqtrs 
       ELSE IFNULL(forecast.hrsfcst_billable_futureqtrs, 0.00) 
  END      AS hrsfcst_billable_futureqtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_entirecurrentqtr 
       ELSE IFNULL(forecast.hrsfcst_billable_entirecurrentqtr, 0.00) 
  END                                                                   AS hrsfcst_billable_entirecurrentqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_currentqtrm1 
       ELSE IFNULL(forecast.hrsfcst_billable_currentqtrm1, 0.00) 
  END    AS hrsfcst_billable_currentqtrm1
 ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_currentqtrm1_wk
       ELSE IFNULL(forecast.hrsfcst_billable_currentqtrm1_wk, 0.00) 
  END    AS hrsfcst_billable_currentqtrm1_wk

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_currentqtrm2 
       ELSE IFNULL(forecast.hrsfcst_billable_currentqtrm2, 0.00) 
  END    AS hrsfcst_billable_currentqtrm2
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_currentqtrm2_wk
       ELSE IFNULL(forecast.hrsfcst_billable_currentqtrm2_wk, 0.00) 
  END    AS hrsfcst_billable_currentqtrm2_wk

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_currentqtrm3 
       ELSE IFNULL(forecast.hrsfcst_billable_currentqtrm3, 0.00) 
  END    AS hrsfcst_billable_currentqtrm3

 ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_currentqtrm3_wk 
       ELSE IFNULL(forecast.hrsfcst_billable_currentqtrm3_wk, 0.00) 
  END    AS hrsfcst_billable_currentqtrm3_wk
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_remaininginqtr 
       ELSE IFNULL(forecast.hrsfcst_billable_remaininginqtr, 0.00) 
  END  AS hrsfcst_billable_remaininginqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_plus1qtr 
       ELSE IFNULL(forecast.hrsfcst_billable_plus1qtr, 0.00) 
  END        AS hrsfcst_billable_plus1qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_plus2qtr 
       ELSE IFNULL(forecast.hrsfcst_billable_plus2qtr, 0.00) 
  END        AS hrsfcst_billable_plus2qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_plus3qtr 
       ELSE IFNULL(forecast.hrsfcst_billable_plus3qtr, 0.00) 
  END        AS hrsfcst_billable_plus3qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_plus4qtr 
       ELSE IFNULL(forecast.hrsfcst_billable_plus4qtr, 0.00) 
  END        AS hrsfcst_billable_plus4qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_plus5qtr 
       ELSE IFNULL(forecast.hrsfcst_billable_plus5qtr, 0.00) 
  END        AS hrsfcst_billable_plus5qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_additionalqtrs 
       ELSE IFNULL(forecast.hrsfcst_billable_additionalqtrs, 0.00) 
  END  AS hrsfcst_billable_additionalqtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_additionalqtrs2 
       ELSE IFNULL(forecast.hrsfcst_billable_additionalqtrs2, 0.00) 
  END AS hrsfcst_billable_additionalqtrs2

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_customrange 
       ELSE IFNULL(forecast.hrsfcst_billable_customrange, 0.00) 
  END     AS hrsfcst_billable_customrange

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_aftercutover 
       ELSE IFNULL(forecast.hrsfcst_billable_aftercutover, 0.00) 
  END    AS hrsfcst_billable_aftercutover
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' then ipc.hrs_billable_eac 
        ELSE (IFNULL(actuals.hrsact_past, 0.00)
         + IFNULL(forecast.hrsfcst_billable_future, 0.00)) 
  END          AS hrs_billable_eac
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_all 
       ELSE IFNULL(forecast.hrsfcst_gen_all, 0.00) 
  END                  AS hrsfcst_gen_all

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_future 
       ELSE IFNULL(forecast.hrsfcst_gen_future, 0.00) 
  END               AS hrsfcst_gen_future

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_currentmonth 
       ELSE IFNULL(forecast.hrsfcst_gen_currentmonth, 0.00) 
  END         AS hrsfcst_gen_currentmonth

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_futuremonths 
       ELSE IFNULL(forecast.hrsfcst_gen_futuremonths, 0.00) 
  END         AS hrsfcst_gen_futuremonths

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_futureqtrs 
       ELSE IFNULL(forecast.hrsfcst_gen_futureqtrs, 0.00) 
  END           AS hrsfcst_gen_futureqtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_entirecurrentqtr 
       ELSE IFNULL(forecast.hrsfcst_gen_entirecurrentqtr, 0.00) 
  END     AS hrsfcst_gen_entirecurrentqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_currentqtrm1 
       ELSE IFNULL(forecast.hrsfcst_gen_currentqtrm1, 0.00) 
  END         AS hrsfcst_gen_currentqtrm1

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_currentqtrm2 
       ELSE IFNULL(forecast.hrsfcst_gen_currentqtrm2, 0.00) 
  END         AS hrsfcst_gen_currentqtrm2

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_currentqtrm3 
       ELSE IFNULL(forecast.hrsfcst_gen_currentqtrm3, 0.00) 
  END         AS hrsfcst_gen_currentqtrm3

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_remaininginqtr 
       ELSE IFNULL(forecast.hrsfcst_gen_remaininginqtr, 0.00) 
  END       AS hrsfcst_gen_remaininginqtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_plus1qtr 
       ELSE IFNULL(forecast.hrsfcst_gen_plus1qtr, 0.00) 
  END             AS hrsfcst_gen_plus1qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_plus2qtr 
       ELSE IFNULL(forecast.hrsfcst_gen_plus2qtr, 0.00) 
  END             AS hrsfcst_gen_plus2qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_plus3qtr 
       ELSE IFNULL(forecast.hrsfcst_gen_plus3qtr, 0.00) 
  END             AS hrsfcst_gen_plus3qtr

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_additionalqtrs 
       ELSE IFNULL(forecast.hrsfcst_gen_additionalqtrs, 0.00) 
  END       AS hrsfcst_gen_additionalqtrs

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_customrange 
       ELSE IFNULL(forecast.hrsfcst_gen_customrange, 0.00) 
  END          AS hrsfcst_gen_customrange

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_aftercutover 
       ELSE IFNULL(forecast.hrsfcst_gen_aftercutover, 0.00) 
  END         AS hrsfcst_gen_aftercutover
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_all_soft 
       ELSE IFNULL(forecast.hrsfcst_all_soft, 0.00) 
  END                 AS hrsfcst_all_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_future_soft 
       ELSE IFNULL(forecast.hrsfcst_future_soft, 0.00) 
  END              AS hrsfcst_future_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_currentmonth_soft 
       ELSE IFNULL(forecast.hrsfcst_currentmonth_soft, 0.00) 
  END        AS hrsfcst_currentmonth_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_futuremonths_soft 
       ELSE IFNULL(forecast.hrsfcst_futuremonths_soft, 0.00) 
  END        AS hrsfcst_futuremonths_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_futureqtrs_soft 
       ELSE IFNULL(forecast.hrsfcst_futureqtrs_soft, 0.00) 
  END          AS hrsfcst_futureqtrs_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_entirecurrentqtr_soft 
       ELSE IFNULL(forecast.hrsfcst_entirecurrentqtr_soft, 0.00) 
  END    AS hrsfcst_entirecurrentqtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_currentqtrm1_soft 
       ELSE IFNULL(forecast.hrsfcst_currentqtrm1_soft, 0.00) 
  END        AS hrsfcst_currentqtrm1_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_currentqtrm2_soft 
       ELSE IFNULL(forecast.hrsfcst_currentqtrm2_soft, 0.00) 
  END        AS hrsfcst_currentqtrm2_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_currentqtrm3_soft 
       ELSE IFNULL(forecast.hrsfcst_currentqtrm3_soft, 0.00) 
  END        AS hrsfcst_currentqtrm3_soft
  
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_remaininginqtr_soft 
       ELSE IFNULL(forecast.hrsfcst_remaininginqtr_soft, 0.00) 
  END      AS hrsfcst_remaininginqtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_plus1qtr_soft 
       ELSE IFNULL(forecast.hrsfcst_plus1qtr_soft, 0.00) 
  END            AS hrsfcst_plus1qtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_plus2qtr_soft 
       ELSE IFNULL(forecast.hrsfcst_plus2qtr_soft, 0.00) 
  END            AS hrsfcst_plus2qtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_plus3qtr_soft 
       ELSE IFNULL(forecast.hrsfcst_plus3qtr_soft, 0.00) 
  END            AS hrsfcst_plus3qtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_additionalqtrs_soft 
       ELSE IFNULL(forecast.hrsfcst_additionalqtrs_soft, 0.00) 
  END      AS hrsfcst_additionalqtrs_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_customrange_soft 
       ELSE IFNULL(forecast.hrsfcst_customrange_soft, 0.00) 
  END         AS hrsfcst_customrange_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_aftercutover_soft 
       ELSE IFNULL(forecast.hrsfcst_aftercutover_soft, 0.00) 
  END        AS hrsfcst_aftercutover_soft
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_all_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_all_soft, 0.00) 
  END AS hrsfcst_billable_all_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_future_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_future_soft, 0.00) 
  END     AS hrsfcst_billable_future_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_currentmonth_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_currentmonth_soft, 0.00) 
  END                                                                   AS hrsfcst_billable_currentmonth_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_futuremonths_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_futuremonths_soft, 0.00) 
  END                                                                   AS hrsfcst_billable_futuremonths_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_futureqtrs_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_futureqtrs_soft, 0.00) 
  END                                                                   AS hrsfcst_billable_futureqtrs_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_entirecurrentqtr_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_entirecurrentqtr_soft, 0.00) 
  END                                                                   AS hrsfcst_billable_entirecurrentqtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_currentqtrm1_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_currentqtrm1_soft, 0.00) 
  END                                                                   AS hrsfcst_billable_currentqtrm1_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_currentqtrm2_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_currentqtrm2_soft, 0.00) 
  END                                                                   AS hrsfcst_billable_currentqtrm2_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_currentqtrm3_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_currentqtrm3_soft, 0.00) 
  END                                                                   AS hrsfcst_billable_currentqtrm3_soft
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_currentqtrm1_soft_wk 
       ELSE IFNULL(forecast.hrsfcst_billable_currentqtrm1_soft_wk, 0.00) 
  END                                                                   AS hrsfcst_billable_currentqtrm1_soft_wk

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_currentqtrm2_soft_wk
       ELSE IFNULL(forecast.hrsfcst_billable_currentqtrm2_soft_wk, 0.00) 
  END                                                                   AS hrsfcst_billable_currentqtrm2_soft_wk

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_currentqtrm3_soft_wk 
       ELSE IFNULL(forecast.hrsfcst_billable_currentqtrm3_soft_wk, 0.00) 
  END                                                                   AS hrsfcst_billable_currentqtrm3_soft_wk
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_remaininginqtr_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_remaininginqtr_soft, 0.00) 
  END                                                                   AS hrsfcst_billable_remaininginqtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_plus1qtr_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_plus1qtr_soft, 0.00) 
  END   AS hrsfcst_billable_plus1qtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_plus2qtr_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_plus2qtr_soft, 0.00) 
  END   AS hrsfcst_billable_plus2qtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_plus3qtr_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_plus3qtr_soft, 0.00) 
  END   AS hrsfcst_billable_plus3qtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_plus4qtr_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_plus4qtr_soft, 0.00) 
  END   AS hrsfcst_billable_plus4qtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_plus5qtr_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_plus5qtr_soft, 0.00) 
  END   AS hrsfcst_billable_plus5qtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_additionalqtrs_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_additionalqtrs_soft, 0.00) 
  END                                                                   AS hrsfcst_billable_additionalqtrs_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_additionalqtrs2_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_additionalqtrs2_soft, 0.00) 
  END                                                                   AS hrsfcst_billable_additionalqtrs2_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_customrange_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_customrange_soft, 0.00) 
  END                                                                   AS hrsfcst_billable_customrange_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_billable_aftercutover_soft 
       ELSE IFNULL(forecast.hrsfcst_billable_aftercutover_soft, 0.00) 
  END                                                                   AS hrsfcst_billable_aftercutover_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_all_soft 
       ELSE IFNULL(forecast.hrsfcst_gen_all_soft, 0.00) 
  END                                                                   AS hrsfcst_gen_all_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_future_soft 
       ELSE IFNULL(forecast.hrsfcst_gen_future_soft, 0.00) 
  END          AS hrsfcst_gen_future_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_currentmonth_soft 
       ELSE IFNULL(forecast.hrsfcst_gen_currentmonth_soft, 0.00) 
  END    AS hrsfcst_gen_currentmonth_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_futuremonths_soft 
       ELSE IFNULL(forecast.hrsfcst_gen_futuremonths_soft, 0.00) 
  END    AS hrsfcst_gen_futuremonths_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_futureqtrs_soft 
       ELSE IFNULL(forecast.hrsfcst_gen_futureqtrs_soft, 0.00) 
  END      AS hrsfcst_gen_futureqtrs_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_entirecurrentqtr_soft 
       ELSE IFNULL(forecast.hrsfcst_gen_entirecurrentqtr_soft, 0.00) 
  END                                                                   AS hrsfcst_gen_entirecurrentqtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_currentqtrm1_soft 
       ELSE IFNULL(forecast.hrsfcst_gen_currentqtrm1_soft, 0.00) 
  END    AS hrsfcst_gen_currentqtrm1_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_currentqtrm2_soft 
       ELSE IFNULL(forecast.hrsfcst_gen_currentqtrm2_soft, 0.00) 
  END    AS hrsfcst_gen_currentqtrm2_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_currentqtrm3_soft 
       ELSE IFNULL(forecast.hrsfcst_gen_currentqtrm3_soft, 0.00) 
  END    AS hrsfcst_gen_currentqtrm3_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_remaininginqtr_soft 
       ELSE IFNULL(forecast.hrsfcst_gen_remaininginqtr_soft, 0.00) 
  END  AS hrsfcst_gen_remaininginqtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_plus1qtr_soft 
       ELSE IFNULL(forecast.hrsfcst_gen_plus1qtr_soft, 0.00) 
  END        AS hrsfcst_gen_plus1qtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_plus2qtr_soft 
       ELSE IFNULL(forecast.hrsfcst_gen_plus2qtr_soft, 0.00) 
  END        AS hrsfcst_gen_plus2qtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_plus3qtr_soft 
       ELSE IFNULL(forecast.hrsfcst_gen_plus3qtr_soft, 0.00) 
  END        AS hrsfcst_gen_plus3qtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_additionalqtrs_soft 
       ELSE IFNULL(forecast.hrsfcst_gen_additionalqtrs_soft, 0.00) 
  END  AS hrsfcst_gen_additionalqtrs_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_customrange_soft 
       ELSE IFNULL(forecast.hrsfcst_gen_customrange_soft, 0.00) 
  END     AS hrsfcst_gen_customrange_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_gen_aftercutover_soft 
       ELSE IFNULL(forecast.hrsfcst_gen_aftercutover_soft, 0.00) 
  END    AS hrsfcst_gen_aftercutover_soft
  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_nonbill_gen_all_soft 
       ELSE IFNULL(forecast.hrsfcst_nonbill_gen_all_soft, 0.00) 
  END     AS hrsfcst_nonbill_gen_all_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_nonbill_gen_future_soft 
       ELSE IFNULL(forecast.hrsfcst_nonbill_gen_future_soft, 0.00) 
  END  AS hrsfcst_nonbill_gen_future_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_nonbill_gen_currentmonth_soft 
       ELSE IFNULL(forecast.hrsfcst_nonbill_gen_currentmonth_soft, 0.00) 
  END                                                                   AS hrsfcst_nonbill_gen_currentmonth_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_nonbill_gen_futuremonths_soft 
       ELSE IFNULL(forecast.hrsfcst_nonbill_gen_futuremonths_soft, 0.00) 
  END                                                                   AS hrsfcst_nonbill_gen_futuremonths_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_nonbill_gen_futureqtrs_soft 
       ELSE IFNULL(forecast.hrsfcst_nonbill_gen_futureqtrs_soft, 0.00) 
  END                                                                   AS hrsfcst_nonbill_gen_futureqtrs_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_nonbill_gen_entirecurrentqtr_soft 
       ELSE IFNULL(forecast.hrsfcst_nonbill_gen_entirecurrentqtr_soft, 0.00) 
  END                                                                   AS hrsfcst_nonbill_gen_entirecurrentqtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_nonbill_gen_currentqtrm1_soft 
       ELSE IFNULL(forecast.hrsfcst_nonbill_gen_currentqtrm1_soft, 0.00) 
  END                                                                   AS hrsfcst_nonbill_gen_currentqtrm1_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_nonbill_gen_currentqtrm2_soft 
       ELSE IFNULL(forecast.hrsfcst_nonbill_gen_currentqtrm2_soft, 0.00) 
  END                                                                   AS hrsfcst_nonbill_gen_currentqtrm2_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_nonbill_gen_currentqtrm3_soft 
       ELSE IFNULL(forecast.hrsfcst_nonbill_gen_currentqtrm3_soft, 0.00) 
  END                                                                   AS hrsfcst_nonbill_gen_currentqtrm3_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_nonbill_gen_remaininginqtr_soft 
       ELSE IFNULL(forecast.hrsfcst_nonbill_gen_remaininginqtr_soft, 0.00) 
  END                                                                   AS hrsfcst_nonbill_gen_remaininginqtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_nonbill_gen_plus1qtr_soft 
       ELSE IFNULL(forecast.hrsfcst_nonbill_gen_plus1qtr_soft, 0.00) 
  END                                                                   AS hrsfcst_nonbill_gen_plus1qtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_nonbill_gen_plus2qtr_soft 
       ELSE IFNULL(forecast.hrsfcst_nonbill_gen_plus2qtr_soft, 0.00) 
  END                                                                   AS hrsfcst_nonbill_gen_plus2qtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_nonbill_gen_plus3qtr_soft 
       ELSE IFNULL(forecast.hrsfcst_nonbill_gen_plus3qtr_soft, 0.00) 
  END                                                                   AS hrsfcst_nonbill_gen_plus3qtr_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_nonbill_gen_additionalqtrs_soft 
       ELSE IFNULL(forecast.hrsfcst_nonbill_gen_additionalqtrs_soft, 0.00) 
  END                                                                   AS hrsfcst_nonbill_gen_additionalqtrs_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_nonbill_gen_customrange_soft 
       ELSE IFNULL(forecast.hrsfcst_nonbill_gen_customrange_soft, 0.00) 
  END                                                                   AS hrsfcst_nonbill_gen_customrange_soft

  ,CASE WHEN LSTDESC_16.VALUE = 'IS Parent' THEN ipc.hrsfcst_nonbill_gen_aftercutover_soft
    ELSE IFNULL(forecast.hrsfcst_nonbill_gen_aftercutover_soft, 0.00) 
  END         
                                                                        AS hrsfcst_nonbill_gen_aftercutover_soft
  ,actuals.hrsact_total_all AS hrsact_total_all_org
  ,actuals.hrsact_total_past AS hrsact_total_past_org
  ,actuals.hrsact_past AS hrsact_past_org
  ,actuals.hrsact_pastqtrs AS hrsact_pastqtrs_org
  ,actuals.hrsact_currentqtrm1 AS hrsact_currentqtrm1_org
  ,actuals.hrsact_currentqtrm2 AS hrsact_currentqtrm2_org
  ,actuals.hrsact_currentqtrm3 AS hrsact_currentqtrm3_org
  ,(IFNULL(actuals.hrsact_past, 0.00)
         + IFNULL(forecast.hrsfcst_billable_future, 0.00)) 
                                AS hrs_billable_eac_org
  ,forecast.hrsfcst_billable_all AS hrsfcst_billable_all_org
  ,forecast.hrsfcst_billable_currentqtrm1 AS hrsfcst_billable_currentqtrm1_org
  ,forecast.hrsfcst_billable_currentqtrm2 AS hrsfcst_billable_currentqtrm2_org
  ,forecast.hrsfcst_billable_currentqtrm3 AS hrsfcst_billable_currentqtrm3_org
  ,forecast.hrsfcst_billable_plus1qtr AS hrsfcst_billable_plus1qtr_org
  ,forecast.hrsfcst_billable_plus2qtr AS hrsfcst_billable_plus2qtr_org
  ,forecast.hrsfcst_billable_plus3qtr AS hrsfcst_billable_plus3qtr_org
  ,forecast.hrsfcst_billable_plus4qtr AS hrsfcst_billable_plus4qtr_org
  ,forecast.hrsfcst_billable_plus5qtr AS hrsfcst_billable_plus5qtr_org
  ,forecast.hrsfcst_billable_additionalqtrs AS hrsfcst_billable_additionalqtrs_org
  ,forecast.hrsfcst_billable_additionalqtrs2 AS hrsfcst_billable_additionalqtrs2_org
  , actuals.hrsact_customrangebegin                                  AS hrsact_customrangebegin
  , actuals.hrsact_customrangeend                                    AS hrsact_customrangeend
  , forecast.hrsfcst_customrangebegin                                AS hrsfcst_customrangebegin
  , forecast.hrsfcst_customrangeend                                  AS hrsfcst_customrangeend
  , ipc.parent_child_key                                             AS parent_child_key
  , LSTDESC_16.VALUE                                                 AS adsk_masteragreement_projecttype
  , 22                                                               AS sqlversion_labor_hrs

FROM eio_publish.tenrox_private.tproject  tproject
        LEFT JOIN eio_publish.tenrox_private.tprojectcustfld  a On a.PROJECTID = tproject.uniqueid
        LEFT JOIN eio_publish.tenrox_private.tcustlst AS LST_16  ON a.ADSK_MasterAgreement_ProjectType = LST_16.UNIQUEID 
        LEFT JOIN eio_publish.tenrox_private.tcustlstdesc AS LSTDESC_16  ON LST_16.UNIQUEID = LSTDESC_16.CUSTLSTID AND LSTDESC_16.LANGUAGE = 0
LEFT JOIN
    (
        SELECT DISTINCT 
            projectid AS projectid
        FROM eio_publish.tenrox_private.ttimeentry ttimeentry
        JOIN eio_publish.tenrox_private.ttask ttask
            ON ttimeentry.taskid = ttask.uniqueid
        UNION
        SELECT DISTINCT 
            trplnbooking.projectid AS projectid
        FROM eio_publish.tenrox_private.trplnbooking trplnbooking
        JOIN eio_publish.tenrox_private.trplnbookingdetails trplnbookingdetails
            ON trplnbookingdetails.bookingid = trplnbooking.uniqueid
    ) projectlinks
    ON projectlinks.projectid = tproject.uniqueid 
LEFT JOIN actuals ON actuals.projectid = projectlinks.projectid 
LEFT JOIN forecast ON forecast.projectid = projectlinks.projectid
left join is_parent_child ipc on ipc.parent_child_key = tproject.uniqueid
  );
[0m14:46:34.462379 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:34.463193 [debug] [Thread-2 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_act_charge_costs_v02_local_cur_transform"
[0m14:46:34.471409 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_act_charge_costs_v02_local_cur_transform"
[0m14:46:34.471530 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_act_charge_costs_v02_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_act_charge_costs_v02_local_cur_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_act_charge_costs_local_cur_v02
  
   as (
    

/* ADSK_FN_CM_ACT_CHARGE_COSTS_V02.sql
  @OverrideCurID   INT = 1
  , @RangeBegin    DATETIME = NULL
  , @RangeEnd      DATETIME = NULL
  , @CutoverDate   DATETIME = NULL
  , @Placeholder05 INT = NULL
  
	FXRate.BASECURRENCYID : @PBASECURRID=TCHARGEENTRY.CLIENTCURRENCYID
    FXRate.QUOTECURRENCYID : @PQUOTECURRID=COALESCE(1, TCHARGEENTRY.CLIENTCURRENCYID, LUBaseCurrencyID)
    FXRate.STARTDATE & ENDDATE : @PDATE=TCHARGEENTRY.CURRENTDATE
*/
SELECT 
    tproject.uniqueid AS projectid
     , SUM(IFNULL(CASE WHEN 1 = 1 THEN tchargeentry.amountclientcurrency * fxrate.rate
                                                       ELSE 0.00 END, 0.00)) AS actcostcharge_all
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_currentmonthbegins THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_past
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentmonthbegins AND tchargeentry.currentdate < fnc_nextmonthbegins
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_currentmonth
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_currentqtrbegins THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_pastqtrs
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_plus1qtrbegins
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_currentmonthbegins
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_completedinqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus1qtrbegins AND tchargeentry.currentdate < fnc_currentqtrbegins
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_minus1qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus2qtrbegins AND tchargeentry.currentdate < fnc_minus1qtrbegins
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_minus2qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus3qtrbegins AND tchargeentry.currentdate < fnc_minus2qtrbegins
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_minus3qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_minus3qtrbegins THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_priorqtrs
     , SUM(IFNULL(CASE WHEN tchargeentry.currentdate >= fnc_hist_customrangebegin
        AND tchargeentry.currentdate < fnc_hist_customrangeend THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostcharge_customrange
    -- Chargest flagged as LABOR-Releated. (Mostly ratable.)
     , SUM(IFNULL(CASE WHEN 1 = 1 AND tcharge.custom1 = 1 THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostlaborcharge_all
     , SUM(IFNULL(CASE WHEN tchargeentry.currentdate < fnc_currentmonthbegins AND tcharge.custom1 = 1
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostlaborcharge_past
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentmonthbegins AND tchargeentry.currentdate < fnc_nextmonthbegins
                AND tcharge.custom1 = 1 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostlaborcharge_currentmonth
     , SUM(IFNULL(CASE WHEN tchargeentry.currentdate < fnc_currentqtrbegins AND tcharge.custom1 = 1
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostlaborcharge_pastqtrs
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_plus1qtrbegins
                AND tcharge.custom1 = 1 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostlaborcharge_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_currentmonthbegins
                AND tcharge.custom1 = 1 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostlaborcharge_completedinqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus1qtrbegins AND tchargeentry.currentdate < fnc_currentqtrbegins
                AND tcharge.custom1 = 1 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostlaborcharge_minus1qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus2qtrbegins AND tchargeentry.currentdate < fnc_minus1qtrbegins
                AND tcharge.custom1 = 1 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostlaborcharge_minus2qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus3qtrbegins AND tchargeentry.currentdate < fnc_minus2qtrbegins
                AND tcharge.custom1 = 1 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostlaborcharge_minus3qtr
     , SUM(IFNULL(CASE WHEN tchargeentry.currentdate < fnc_minus3qtrbegins AND tcharge.custom1 = 1
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostlaborcharge_priorqtrs
     , SUM(IFNULL(CASE WHEN tchargeentry.currentdate >= fnc_hist_customrangebegin
        AND tchargeentry.currentdate < fnc_hist_customrangeend AND tcharge.custom1 = 1
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostlaborcharge_customrange
    -- Third Party Product-Costs
     , SUM(IFNULL(CASE WHEN 1 = 1 AND tcharge.name = 'Third Party Product-Costs'
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_all
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_currentmonthbegins AND tcharge.name = 'Third Party Product-Costs'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_past
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentmonthbegins AND tchargeentry.currentdate < fnc_nextmonthbegins
                AND tcharge.name = 'Third Party Product-Costs' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_currentmonth
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_currentqtrbegins AND tcharge.name = 'Third Party Product-Costs'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_pastqtrs
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_plus1qtrbegins
                AND tcharge.name = 'Third Party Product-Costs' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_currentmonthbegins
                AND tcharge.name = 'Third Party Product-Costs' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_completedinqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus1qtrbegins AND tchargeentry.currentdate < fnc_currentqtrbegins
                AND tcharge.name = 'Third Party Product-Costs' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_minus1qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus2qtrbegins AND tchargeentry.currentdate < fnc_minus1qtrbegins
                AND tcharge.name = 'Third Party Product-Costs' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_minus2qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus3qtrbegins AND tchargeentry.currentdate < fnc_minus2qtrbegins
                AND tcharge.name = 'Third Party Product-Costs' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_minus3qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_minus3qtrbegins AND tcharge.name = 'Third Party Product-Costs'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_priorqtrs
     , SUM(IFNULL(CASE WHEN tchargeentry.currentdate >= fnc_hist_customrangebegin
        AND tchargeentry.currentdate < fnc_hist_customrangeend AND tcharge.name = 'Third Party Product-Costs'
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_customrange
    -- 3rd Party-Non-Billable T&E
     , SUM(IFNULL(CASE WHEN 1 = 1 AND tcharge.name = '3rd Party-Non-Billable T&E'
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_all
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_currentmonthbegins AND tcharge.name = '3rd Party-Non-Billable T&E'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_past
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentmonthbegins AND tchargeentry.currentdate < fnc_nextmonthbegins
                AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_currentmonth
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_currentqtrbegins AND tcharge.name = '3rd Party-Non-Billable T&E'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_pastqtrs
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_plus1qtrbegins
                AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_currentmonthbegins
                AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_completedinqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus1qtrbegins AND tchargeentry.currentdate < fnc_currentqtrbegins
                AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_minus1qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus2qtrbegins AND tchargeentry.currentdate < fnc_minus1qtrbegins
                AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_minus2qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus3qtrbegins AND tchargeentry.currentdate < fnc_minus2qtrbegins
                AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_minus3qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_minus3qtrbegins AND tcharge.name = '3rd Party-Non-Billable T&E'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_priorqtrs
     , SUM(IFNULL(CASE WHEN tchargeentry.currentdate >= fnc_hist_customrangebegin
        AND tchargeentry.currentdate < fnc_hist_customrangeend AND tcharge.name = '3rd Party-Non-Billable T&E'
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_customrange
    -- 3rd Party-Billable Expenses
     , SUM(IFNULL(CASE WHEN 1 = 1 AND tcharge.name = '3rd Party-Billable Expenses'
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_all
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_currentmonthbegins AND tcharge.name = '3rd Party-Billable Expenses'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_past
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentmonthbegins AND tchargeentry.currentdate < fnc_nextmonthbegins
                AND tcharge.name = '3rd Party-Billable Expenses' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_currentmonth
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_currentqtrbegins AND tcharge.name = '3rd Party-Billable Expenses'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_pastqtrs
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_plus1qtrbegins
                AND tcharge.name = '3rd Party-Billable Expenses' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_currentmonthbegins
                AND tcharge.name = '3rd Party-Billable Expenses' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_completedinqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus1qtrbegins AND tchargeentry.currentdate < fnc_currentqtrbegins
                AND tcharge.name = '3rd Party-Billable Expenses' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_minus1qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus2qtrbegins AND tchargeentry.currentdate < fnc_minus1qtrbegins
                AND tcharge.name = '3rd Party-Billable Expenses' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_minus2qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus3qtrbegins AND tchargeentry.currentdate < fnc_minus2qtrbegins
                AND tcharge.name = '3rd Party-Billable Expenses' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_minus3qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_minus3qtrbegins AND tcharge.name = '3rd Party-Billable Expenses'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_priorqtrs
     , SUM(IFNULL(CASE WHEN tchargeentry.currentdate >= fnc_hist_customrangebegin
        AND tchargeentry.currentdate < fnc_hist_customrangeend AND tcharge.name = '3rd Party-Billable Expenses'
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_customrange
     , 8 AS sqlversion_act_charge_costs
FROM eio_publish.tenrox_private.tproject tproject
LEFT JOIN eio_publish.tenrox_private.ttask ttask ON ttask.projectid = tproject.uniqueid
LEFT JOIN eio_publish.tenrox_private.tchargeentry tchargeentry
     ON tchargeentry.taskid = ttask.uniqueid AND tchargeentry.approved = 1
INNER JOIN
    eio_publish.tenrox_private.tcharge tcharge
    ON tcharge.uniqueid = tchargeentry.chargeid
    AND tcharge.costed = 1
    AND tcharge.chargetype = 'M'
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02 AS ranges
LEFT OUTER JOIN(SELECT 
                  IFNULL(uniqueid, 1) AS lubasecurrencyid  -- if CURRENCYCODE = 'USD' has uniqueid null, it's still forced to value 1
               FROM eio_publish.tenrox_private.tcurrency tcurrency
               -- CURRENCYCODE = 'USD' means UNIQUEID is 1
               WHERE currencycode = 'USD') basecur
-- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN(SELECT 
                  IFNULL(uniqueid, 1) AS overridecurid 
               FROM eio_publish.tenrox_private.tcurrency 
               WHERE currencycode = 'USD'
               ) usdcurid
-- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate AS fxrate
            ON fxrate.basecurrencyid = tchargeentry.clientcurrencyid
            AND fxrate.quotecurrencyid = COALESCE(NULL, tchargeentry.clientcurrencyid, lubasecurrencyid)  -- @OverrideCurID | @PQUOTECURRID is declared = 1 from adsk_fn_cm_marginvariance
            AND tchargeentry.currentdate BETWEEN fxrate.startdate AND fxrate.enddate
GROUP           BY
tproject.uniqueid
  );
[0m14:46:34.834243 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:34.835082 [debug] [Thread-3 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_act_charge_costs_v02_transform"
[0m14:46:34.843517 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_act_charge_costs_v02_transform"
[0m14:46:34.843671 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_act_charge_costs_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_act_charge_costs_v02_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_act_charge_costs_v02
  
   as (
    

/* adsk_cm_act_charge_costs_v02.sql
  @OverrideCurID   INT = 1
  , @RangeBegin    DATETIME = NULL
  , @RangeEnd      DATETIME = NULL
  , @CutoverDate   DATETIME = NULL
  , @Placeholder05 INT = NULL
  
	FXRate.BASECURRENCYID : @PBASECURRID=TCHARGEENTRY.CLIENTCURRENCYID
    FXRate.QUOTECURRENCYID : @PQUOTECURRID=COALESCE(1, TCHARGEENTRY.CLIENTCURRENCYID, LUBaseCurrencyID)
    FXRate.STARTDATE & ENDDATE : @PDATE=TCHARGEENTRY.CURRENTDATE
*/
SELECT 
    tproject.uniqueid AS projectid
     , SUM(IFNULL(CASE WHEN 1 = 1 THEN tchargeentry.amountclientcurrency * fxrate.rate
                                                       ELSE 0.00 END, 0.00)) AS actcostcharge_all
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_currentmonthbegins THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_past
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentmonthbegins AND tchargeentry.currentdate < fnc_nextmonthbegins
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_currentmonth
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_currentqtrbegins THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_pastqtrs
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_plus1qtrbegins
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_currentmonthbegins
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_completedinqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus1qtrbegins AND tchargeentry.currentdate < fnc_currentqtrbegins
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_minus1qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus2qtrbegins AND tchargeentry.currentdate < fnc_minus1qtrbegins
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_minus2qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus3qtrbegins AND tchargeentry.currentdate < fnc_minus2qtrbegins
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_minus3qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_minus3qtrbegins THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_priorqtrs
     , SUM(IFNULL(CASE WHEN tchargeentry.currentdate >= fnc_hist_customrangebegin
        AND tchargeentry.currentdate < fnc_hist_customrangeend THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostcharge_customrange
    -- Chargest flagged as LABOR-Releated. (Mostly ratable.)
     , SUM(IFNULL(CASE WHEN 1 = 1 AND tcharge.custom1 = 1 THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostlaborcharge_all
     , SUM(IFNULL(CASE WHEN tchargeentry.currentdate < fnc_currentmonthbegins AND tcharge.custom1 = 1
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostlaborcharge_past
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentmonthbegins AND tchargeentry.currentdate < fnc_nextmonthbegins
                AND tcharge.custom1 = 1 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostlaborcharge_currentmonth
     , SUM(IFNULL(CASE WHEN tchargeentry.currentdate < fnc_currentqtrbegins AND tcharge.custom1 = 1
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostlaborcharge_pastqtrs
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_plus1qtrbegins
                AND tcharge.custom1 = 1 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostlaborcharge_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_currentmonthbegins
                AND tcharge.custom1 = 1 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostlaborcharge_completedinqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus1qtrbegins AND tchargeentry.currentdate < fnc_currentqtrbegins
                AND tcharge.custom1 = 1 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostlaborcharge_minus1qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus2qtrbegins AND tchargeentry.currentdate < fnc_minus1qtrbegins
                AND tcharge.custom1 = 1 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostlaborcharge_minus2qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus3qtrbegins AND tchargeentry.currentdate < fnc_minus2qtrbegins
                AND tcharge.custom1 = 1 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostlaborcharge_minus3qtr
     , SUM(IFNULL(CASE WHEN tchargeentry.currentdate < fnc_minus3qtrbegins AND tcharge.custom1 = 1
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostlaborcharge_priorqtrs
     , SUM(IFNULL(CASE WHEN tchargeentry.currentdate >= fnc_hist_customrangebegin
        AND tchargeentry.currentdate < fnc_hist_customrangeend AND tcharge.custom1 = 1
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostlaborcharge_customrange
    -- Third Party Product-Costs
     , SUM(IFNULL(CASE WHEN 1 = 1 AND tcharge.name = 'Third Party Product-Costs'
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_all
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_currentmonthbegins AND tcharge.name = 'Third Party Product-Costs'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_past
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentmonthbegins AND tchargeentry.currentdate < fnc_nextmonthbegins
                AND tcharge.name = 'Third Party Product-Costs' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_currentmonth
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_currentqtrbegins AND tcharge.name = 'Third Party Product-Costs'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_pastqtrs
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_plus1qtrbegins
                AND tcharge.name = 'Third Party Product-Costs' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_currentmonthbegins
                AND tcharge.name = 'Third Party Product-Costs' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_completedinqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus1qtrbegins AND tchargeentry.currentdate < fnc_currentqtrbegins
                AND tcharge.name = 'Third Party Product-Costs' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_minus1qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus2qtrbegins AND tchargeentry.currentdate < fnc_minus1qtrbegins
                AND tcharge.name = 'Third Party Product-Costs' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_minus2qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus3qtrbegins AND tchargeentry.currentdate < fnc_minus2qtrbegins
                AND tcharge.name = 'Third Party Product-Costs' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_minus3qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_minus3qtrbegins AND tcharge.name = 'Third Party Product-Costs'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_priorqtrs
     , SUM(IFNULL(CASE WHEN tchargeentry.currentdate >= fnc_hist_customrangebegin
        AND tchargeentry.currentdate < fnc_hist_customrangeend AND tcharge.name = 'Third Party Product-Costs'
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostcharge_ipprodsales_customrange
    -- 3rd Party-Non-Billable T&E
     , SUM(IFNULL(CASE WHEN 1 = 1 AND tcharge.name = '3rd Party-Non-Billable T&E'
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_all
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_currentmonthbegins AND tcharge.name = '3rd Party-Non-Billable T&E'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_past
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentmonthbegins AND tchargeentry.currentdate < fnc_nextmonthbegins
                AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_currentmonth
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_currentqtrbegins AND tcharge.name = '3rd Party-Non-Billable T&E'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_pastqtrs
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_plus1qtrbegins
                AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_currentmonthbegins
                AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_completedinqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus1qtrbegins AND tchargeentry.currentdate < fnc_currentqtrbegins
                AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_minus1qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus2qtrbegins AND tchargeentry.currentdate < fnc_minus1qtrbegins
                AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_minus2qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus3qtrbegins AND tchargeentry.currentdate < fnc_minus2qtrbegins
                AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_minus3qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_minus3qtrbegins AND tcharge.name = '3rd Party-Non-Billable T&E'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_priorqtrs
     , SUM(IFNULL(CASE WHEN tchargeentry.currentdate >= fnc_hist_customrangebegin
        AND tchargeentry.currentdate < fnc_hist_customrangeend AND tcharge.name = '3rd Party-Non-Billable T&E'
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostcharge_3rdnonbillte_customrange
    -- 3rd Party-Billable Expenses
     , SUM(IFNULL(CASE WHEN 1 = 1 AND tcharge.name = '3rd Party-Billable Expenses'
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_all
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_currentmonthbegins AND tcharge.name = '3rd Party-Billable Expenses'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_past
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentmonthbegins AND tchargeentry.currentdate < fnc_nextmonthbegins
                AND tcharge.name = '3rd Party-Billable Expenses' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_currentmonth
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_currentqtrbegins AND tcharge.name = '3rd Party-Billable Expenses'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_pastqtrs
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_plus1qtrbegins
                AND tcharge.name = '3rd Party-Billable Expenses' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_currentqtrbegins AND tchargeentry.currentdate < fnc_currentmonthbegins
                AND tcharge.name = '3rd Party-Billable Expenses' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_completedinqtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus1qtrbegins AND tchargeentry.currentdate < fnc_currentqtrbegins
                AND tcharge.name = '3rd Party-Billable Expenses' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_minus1qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus2qtrbegins AND tchargeentry.currentdate < fnc_minus1qtrbegins
                AND tcharge.name = '3rd Party-Billable Expenses' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_minus2qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate >= fnc_minus3qtrbegins AND tchargeentry.currentdate < fnc_minus2qtrbegins
                AND tcharge.name = '3rd Party-Billable Expenses' THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_minus3qtr
     , SUM(IFNULL(
        CASE WHEN tchargeentry.currentdate < fnc_minus3qtrbegins AND tcharge.name = '3rd Party-Billable Expenses'
                 THEN tchargeentry.amountclientcurrency * fxrate.rate
             ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_priorqtrs
     , SUM(IFNULL(CASE WHEN tchargeentry.currentdate >= fnc_hist_customrangebegin
        AND tchargeentry.currentdate < fnc_hist_customrangeend AND tcharge.name = '3rd Party-Billable Expenses'
                           THEN tchargeentry.amountclientcurrency * fxrate.rate
                       ELSE 0.00 END, 0.00)) AS actcostcharge_3rdbillableexp_customrange
     , 8 AS sqlversion_act_charge_costs
FROM eio_publish.tenrox_private.tproject tproject
LEFT JOIN eio_publish.tenrox_private.ttask ttask ON ttask.projectid = tproject.uniqueid
LEFT JOIN eio_publish.tenrox_private.tchargeentry tchargeentry
     ON tchargeentry.taskid = ttask.uniqueid AND tchargeentry.approved = 1
INNER JOIN
    eio_publish.tenrox_private.tcharge tcharge
    ON tcharge.uniqueid = tchargeentry.chargeid
    AND tcharge.costed = 1
    AND tcharge.chargetype = 'M'
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02 AS ranges
LEFT OUTER JOIN(SELECT 
                  IFNULL(uniqueid, 1) AS lubasecurrencyid  -- if CURRENCYCODE = 'USD' has uniqueid null, it's still forced to value 1
               FROM eio_publish.tenrox_private.tcurrency tcurrency
               -- CURRENCYCODE = 'USD' means UNIQUEID is 1
               WHERE currencycode = 'USD') basecur
-- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN(SELECT 
                  IFNULL(uniqueid, 1) AS overridecurid 
               FROM eio_publish.tenrox_private.tcurrency 
               WHERE currencycode = 'USD'
               ) usdcurid
-- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate AS fxrate
            ON fxrate.basecurrencyid = tchargeentry.clientcurrencyid
            AND fxrate.quotecurrencyid = COALESCE(overridecurid, tchargeentry.clientcurrencyid, lubasecurrencyid)  -- @OverrideCurID | @PQUOTECURRID is declared = 1 from adsk_fn_cm_marginvariance
            AND tchargeentry.currentdate BETWEEN fxrate.startdate AND fxrate.enddate
GROUP           BY
tproject.uniqueid
  );
[0m14:46:34.913103 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:34.914232 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_act_charge_costs_v02_local_cur_transform (execute): 2023-08-21 14:46:33.771264 => 2023-08-21 14:46:34.914202
[0m14:46:34.914362 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_act_charge_costs_v02_local_cur_transform: Close
[0m14:46:35.166094 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165f03910>]}
[0m14:46:35.166436 [info ] [Thread-2 (]: 11 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_act_charge_costs_local_cur_v02  [[32mSUCCESS 1[0m in 1.40s]
[0m14:46:35.166611 [debug] [Thread-2 (]: Finished running node model.my_dbt_projects.adsk_cm_act_charge_costs_v02_local_cur_transform
[0m14:46:35.166738 [debug] [Thread-2 (]: Began running node model.my_dbt_projects.adsk_cm_act_labor_costs_v02_transform
[0m14:46:35.167003 [info ] [Thread-2 (]: 13 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_act_labor_costs_v02 ..... [RUN]
[0m14:46:35.167471 [debug] [Thread-2 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_act_labor_costs_v02_transform'
[0m14:46:35.167590 [debug] [Thread-2 (]: Began compiling node model.my_dbt_projects.adsk_cm_act_labor_costs_v02_transform
[0m14:46:35.170690 [debug] [Thread-2 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_act_labor_costs_v02_transform"
[0m14:46:35.171438 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_act_labor_costs_v02_transform (compile): 2023-08-21 14:46:35.167650 => 2023-08-21 14:46:35.171412
[0m14:46:35.171539 [debug] [Thread-2 (]: Began executing node model.my_dbt_projects.adsk_cm_act_labor_costs_v02_transform
[0m14:46:35.173519 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_act_labor_costs_v02_transform"
[0m14:46:35.173598 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_act_labor_costs_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_act_labor_costs_v02_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:35.173661 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m14:46:35.202730 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:35.203962 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_act_charge_costs_v02_transform (execute): 2023-08-21 14:46:34.038350 => 2023-08-21 14:46:35.203934
[0m14:46:35.204095 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_act_charge_costs_v02_transform: Close
[0m14:46:35.293902 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:35.294935 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_labor_hrs_v02_transform (execute): 2023-08-21 14:46:33.554415 => 2023-08-21 14:46:35.294910
[0m14:46:35.295052 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_labor_hrs_v02_transform: Close
[0m14:46:35.453611 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107aafc90>]}
[0m14:46:35.453988 [info ] [Thread-3 (]: 12 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_act_charge_costs_v02  [[32mSUCCESS 1[0m in 1.42s]
[0m14:46:35.454217 [debug] [Thread-3 (]: Finished running node model.my_dbt_projects.adsk_cm_act_charge_costs_v02_transform
[0m14:46:35.454403 [debug] [Thread-3 (]: Began running node model.my_dbt_projects.adsk_cm_forecast_chrg_cost_local_cur_transform
[0m14:46:35.454779 [info ] [Thread-3 (]: 14 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_forecast_chrg_cost_local_cur  [RUN]
[0m14:46:35.455339 [debug] [Thread-3 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_forecast_chrg_cost_local_cur_transform'
[0m14:46:35.455583 [debug] [Thread-3 (]: Began compiling node model.my_dbt_projects.adsk_cm_forecast_chrg_cost_local_cur_transform
[0m14:46:35.461950 [debug] [Thread-3 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_forecast_chrg_cost_local_cur_transform"
[0m14:46:35.462858 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_forecast_chrg_cost_local_cur_transform (compile): 2023-08-21 14:46:35.455648 => 2023-08-21 14:46:35.462809
[0m14:46:35.463016 [debug] [Thread-3 (]: Began executing node model.my_dbt_projects.adsk_cm_forecast_chrg_cost_local_cur_transform
[0m14:46:35.465507 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_forecast_chrg_cost_local_cur_transform"
[0m14:46:35.465635 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_forecast_chrg_cost_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_forecast_chrg_cost_local_cur_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:35.465713 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m14:46:35.537163 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165f43fd0>]}
[0m14:46:35.537466 [info ] [Thread-1 (]: 10 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_labor_hrs_v02 ...... [[32mSUCCESS 1[0m in 2.00s]
[0m14:46:35.537637 [debug] [Thread-1 (]: Finished running node model.my_dbt_projects.adsk_cm_labor_hrs_v02_transform
[0m14:46:35.537766 [debug] [Thread-1 (]: Began running node model.my_dbt_projects.adsk_cm_forecast_chrg_cost_transform
[0m14:46:35.538061 [info ] [Thread-1 (]: 15 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_forecast_chrg_cost ...... [RUN]
[0m14:46:35.538330 [debug] [Thread-1 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_forecast_chrg_cost_transform'
[0m14:46:35.538413 [debug] [Thread-1 (]: Began compiling node model.my_dbt_projects.adsk_cm_forecast_chrg_cost_transform
[0m14:46:35.544179 [debug] [Thread-1 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_forecast_chrg_cost_transform"
[0m14:46:35.545186 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_forecast_chrg_cost_transform (compile): 2023-08-21 14:46:35.538468 => 2023-08-21 14:46:35.545119
[0m14:46:35.545376 [debug] [Thread-1 (]: Began executing node model.my_dbt_projects.adsk_cm_forecast_chrg_cost_transform
[0m14:46:35.548613 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_forecast_chrg_cost_transform"
[0m14:46:35.548718 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_forecast_chrg_cost_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_forecast_chrg_cost_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:35.548784 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:46:35.897892 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:35.898672 [debug] [Thread-2 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_act_labor_costs_v02_transform"
[0m14:46:35.907460 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_act_labor_costs_v02_transform"
[0m14:46:35.907613 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_act_labor_costs_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_act_labor_costs_v02_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_act_labor_costs_v02
  
   as (
    
/* ADSK_FN_CM_ACT_LABOR_COSTS_V02.sql
  @OverrideCurID   INT = 1
  , @RangeBegin    DATETIME = NULL
  , @RangeEnd      DATETIME = NULL
  , @CutoverDate   DATETIME = NULL
  , @Placeholder05 INT = NULL

  FXRate.BASECURRENCYID : @PBASECURRID = COALESCE(TTIMEENTRYRATE.COSTCURRENCYID, LUBaseCurrencyID)
  FXRate.QUOTECURRENCYID : @PQUOTECURRID = COALESCE(1, TCLIENTINVOICE.CURRENCYID, LUBaseCurrencyID)
  FXRate.STARTDATE & ENDDATE : @PDATE IS BETWEEN = TTIMESHEETENTRIES.ENTRYDATE BETWEEN
*/
SELECT 
     tproject.uniqueid AS projectid
    -- Approved
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 THEN IFNULL(fxrate.rate, 0.00)
        * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_all
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.entrydate < fnc_currentmonthbegins
                           THEN IFNULL(fxrate.rate, 0.00) * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_past
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.entrydate >= fnc_currentmonthbegins
        AND ttimesheetentries.entrydate < fnc_nextmonthbegins THEN IFNULL(fxrate.rate, 0.00)
        * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_currentmonth
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.entrydate < fnc_currentqtrbegins
                           THEN IFNULL(fxrate.rate, 0.00) * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_pastqtrs
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
        AND ttimesheetentries.entrydate < fnc_plus1qtrbegins THEN IFNULL(fxrate.rate, 0.00)
        * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
        AND ttimesheetentries.entrydate < fnc_currentmonthbegins THEN IFNULL(fxrate.rate, 0.00)
        * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_completedinqtr
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.entrydate >= fnc_minus1qtrbegins
        AND ttimesheetentries.entrydate < fnc_currentqtrbegins THEN IFNULL(fxrate.rate, 0.00)
        * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_minus1qtr
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.entrydate >= fnc_minus2qtrbegins
        AND ttimesheetentries.entrydate < fnc_minus1qtrbegins THEN IFNULL(fxrate.rate, 0.00)
        * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_minus2qtr
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.entrydate >= fnc_minus3qtrbegins
        AND ttimesheetentries.entrydate < fnc_minus2qtrbegins THEN IFNULL(fxrate.rate, 0.00)
        * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_minus3qtr
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.entrydate < fnc_minus3qtrbegins
                           THEN IFNULL(fxrate.rate, 0.00) * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_priorqtrs
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.entrydate >= fnc_hist_customrangebegin
        AND ttimesheetentries.entrydate < fnc_hist_customrangeend THEN IFNULL(fxrate.rate, 0.00)
        * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_customrange
    -- Unapproved
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 THEN IFNULL(fxrate.rate, 0.00)
        * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_unapp_all
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.entrydate < fnc_currentmonthbegins
                           THEN IFNULL(fxrate.rate, 0.00) * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_unapp_past
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.entrydate >= fnc_currentmonthbegins
        AND ttimesheetentries.entrydate < fnc_nextmonthbegins THEN IFNULL(fxrate.rate, 0.00)
        * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_unapp_currentmonth
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.entrydate < fnc_currentqtrbegins
                           THEN IFNULL(fxrate.rate, 0.00) * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_unapp_pastqtrs
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
        AND ttimesheetentries.entrydate < fnc_plus1qtrbegins THEN IFNULL(fxrate.rate, 0.00)
        * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_unapp_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.entrydate >= fnc_currentqtrbegins
        AND ttimesheetentries.entrydate < fnc_currentmonthbegins THEN IFNULL(fxrate.rate, 0.00)
        * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_unapp_completedinqtr
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.entrydate >= fnc_minus1qtrbegins
        AND ttimesheetentries.entrydate < fnc_currentqtrbegins THEN IFNULL(fxrate.rate, 0.00)
        * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_unapp_minus1qtr
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.entrydate >= fnc_minus2qtrbegins
        AND ttimesheetentries.entrydate < fnc_minus1qtrbegins THEN IFNULL(fxrate.rate, 0.00)
        * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_unapp_minus2qtr
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.entrydate >= fnc_minus3qtrbegins
        AND ttimesheetentries.entrydate < fnc_minus2qtrbegins THEN IFNULL(fxrate.rate, 0.00)
        * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_unapp_minus3qtr
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.entrydate < fnc_minus3qtrbegins
                           THEN IFNULL(fxrate.rate, 0.00) * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_unapp_priorqtrs
     , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.entrydate >= fnc_hist_customrangebegin
        AND ttimesheetentries.entrydate < fnc_hist_customrangeend THEN IFNULL(fxrate.rate, 0.00)
        * IFNULL(ttimeentryrate.costamounttotal, 0.00)
                       ELSE 0.00 END, 0.00)) AS actcostlabor_unapp_customrange
     , 3 AS sqlversion_act_labor_costs
FROM eio_publish.tenrox_private.ttimeentryrate ttimeentryrate
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02 AS ranges  -- put back to original place, join before TTIMESHEETENTRIES
JOIN eio_publish.tenrox_private.ttimesheetentries ttimesheetentries 
     ON ttimeentryrate.timeentryuid = ttimesheetentries.timeentryuid
JOIN eio_publish.tenrox_private.ttask ttask ON ttask.uniqueid = ttimesheetentries.taskuid
JOIN eio_publish.tenrox_private.tproject tproject ON tproject.uniqueid = ttask.projectid
JOIN eio_publish.tenrox_private.tclientinvoice tclientinvoice ON tclientinvoice.clientid = tproject.clientid
LEFT OUTER JOIN
    (
        SELECT IFNULL(uniqueid, 1) AS lubasecurrencyid 
        FROM eio_publish.tenrox_private.tcurrency tcurrency 
        WHERE currencycode = 'USD'
    ) basecur
-- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN
    (SELECT IFNULL(uniqueid, 1) AS overridecurid 
        FROM eio_publish.tenrox_private.tcurrency 
    WHERE currencycode = 'USD') usdcurid
-- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN
    EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate AS fxrate
    ON fxrate.basecurrencyid = COALESCE(ttimeentryrate.costcurrencyid, lubasecurrencyid)
    AND fxrate.quotecurrencyid = COALESCE(overridecurid, tclientinvoice.currencyid, lubasecurrencyid)  -- @OverrideCurID | @PQUOTECURRID is declared = 1 from adsk_fn_cm_marginvariance
    AND ttimesheetentries.entrydate BETWEEN fxrate.startdate AND fxrate.enddate
GROUP BY tproject.uniqueid
  );
[0m14:46:36.206567 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:36.207452 [debug] [Thread-3 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_forecast_chrg_cost_local_cur_transform"
[0m14:46:36.226903 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_forecast_chrg_cost_local_cur_transform"
[0m14:46:36.227030 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_forecast_chrg_cost_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_forecast_chrg_cost_local_cur_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_forecast_chrg_cost_local_cur
  
   as (
    
/* ADSK_FN_CM_FORECAST_CHRG_COST
  @OverrideCurID  INT
  , @RangeBegin   DATETIME = NULL
  , @RangeEnd     DATETIME = NULL
  , @CutoverDate  DATETIME = NULL
  , @Placeholder5 INT = NULL

Used only in CUST_ADSK_MARGINVARIANCE where @OverrideCurID = @USDCurID is forced set to 1
and LUBaseCurrencyID is forced set to 1 as well
Therefore:
CASE
     WHEN @OverrideCurID IS NULL THEN TRVFCBLITEMDATA.AMOUNTCLIENTCURRENCY   --> @OverrideCurID is always 1 and IS NEVER NULL
     WHEN LUBaseCurrencyID = @OverrideCurID THEN TRVFCBLITEMDATA.AMOUNTBASECURRENCY  --> LUBaseCurrencyID = 1 and therefore @USDCurID = LUBaseCurrencyID
     ELSE TRVFCBLITEMDATA.AMOUNTCLIENTCURRENCY * FXRate.Rate
 END
*/

SELECT 
     tproject.uniqueid                     AS projectid
     /* Exclude Ratable Billing */
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_nonratable_all
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                           THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                            WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                            ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_nonratable_future
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_nonratable_currentmonth
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_nonratable_futureqtrs
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_nonratable_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_nonratable_remaininginqtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_nonratable_plus1qtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_nonratable_plus2qtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_nonratable_plus3qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_nonratable_additionalqtrs
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
                AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_nonratable_customrange
    /* Ratable Costs Only */
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ratable_all
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ratable_future
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ratable_currentmonth
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ratable_futureqtrs
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ratable_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ratable_remaininginqtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ratable_plus1qtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ratable_plus2qtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ratable_plus3qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ratable_additionalqtrs
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ratable_customrange
    /* All Charge Costs */
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                            WHEN lubasecurrencyid = overridecurid
                                                                                THEN trvfcblitemdata.amountbasecurrency
                                                                            ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_all
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_future
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_currentmonthbegins AND tfcalperiod.startdate < fnc_nextmonthbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_currentmonth
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_futureqtrs
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_currentqtrbegins AND tfcalperiod.startdate < fnc_plus1qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_currentmonthbegins AND tfcalperiod.startdate < fnc_plus1qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_remaininginqtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_plus1qtrbegins AND tfcalperiod.startdate < fnc_plus2qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_plus1qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_plus2qtrbegins AND tfcalperiod.startdate < fnc_plus3qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_plus2qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_plus3qtrbegins AND tfcalperiod.startdate < fnc_plus4qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_plus3qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_plus4qtrbegins AND tfcalperiod.startdate < fnc_plus5qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_plus4qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_plus5qtrbegins AND tfcalperiod.startdate < fnc_plus6qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_plus5qtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_additionalqtrs
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_plus6qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_additional2qtrs
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_customrange
    /* Third Party Product-Costs */
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ipprodsales_all
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_future
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                 WHEN lubasecurrencyid = overridecurid
                                                                                     THEN trvfcblitemdata.amountbasecurrency
                                                                                 ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_currentmonth
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_futureqtrs
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_currentqtrbegins
                AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_remaininginqtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
                AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_plus1qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
                AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_plus2qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
                AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_plus3qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_plus4qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_additionalqtrs
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
                AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_customrange
    /* 3rd Party-Non-Billable T&E */
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_3rdnonbillte_all
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_future
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                 WHEN lubasecurrencyid = overridecurid
                                                                                     THEN trvfcblitemdata.amountbasecurrency
                                                                                 ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_currentmonth
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_futureqtrs
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentqtrbegins
                AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_remaininginqtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
                AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_plus1qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
                AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_plus2qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
                AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_plus3qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus4qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_additionalqtrs
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E'
        AND tfcalperiod.startdate >= fnc_fcst_customrangebegin AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_3rdnonbillte_customrange
    /* 3rd Party-Billable Expenses */
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_3rdbillableexp_all
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_future
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                 WHEN lubasecurrencyid = overridecurid
                                                                                     THEN trvfcblitemdata.amountbasecurrency
                                                                                 ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_currentmonth
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_futureqtrs
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentqtrbegins
                AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_remaininginqtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
                AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_plus1qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
                AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_plus2qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
                AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_plus3qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus4qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_additionalqtrs
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses'
        AND tfcalperiod.startdate >= fnc_fcst_customrangebegin AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_3rdbillableexp_customrange
     , MAX(fnc_fcst_customrangebegin)        AS fcstchrgcost_customrangebegin, MAX(fnc_fcst_customrangeend) AS fcstchrgcost_customrangeend
     , 7                                     AS sqlversion_forecast_chrg_cost
    FROM eio_publish.tenrox_private.trvfcbaseline trvfcbaseline
    LEFT OUTER JOIN eio_publish.tenrox_private.trvfcbaselinebudget trvfcbaselinebudget
        ON trvfcbaselinebudget.baselineuid = trvfcbaseline.uniqueid 
    INNER JOIN eio_publish.tenrox_private.trvfcbltmpl trvfcbltmpl 
        ON trvfcbltmpl.baselineid = trvfcbaseline.uniqueid 
    INNER JOIN eio_publish.tenrox_private.trvfcblsec trvfcblsec 
        ON trvfcblsec.bltmplid = trvfcbltmpl.uniqueid 
    INNER JOIN eio_publish.tenrox_private.trvfcblseclabel trvfcblseclabel 
        ON trvfcblseclabel.blsecid = trvfcblsec.uniqueid 
        AND trvfcblseclabel.language = 0 
        AND trvfcblseclabel.label = 'Cost' 
    INNER JOIN eio_publish.tenrox_private.trvfcblcat trvfcblcat 
        ON trvfcblcat.blsecid = trvfcblsec.uniqueid 
    INNER JOIN eio_publish.tenrox_private.trvfcblcatlabel trvfcblcatlabel 
        ON trvfcblcatlabel.blcatid = trvfcblcat.uniqueid 
        AND trvfcblcatlabel.language = 0 
        AND trvfcblcatlabel.label = 'Charges'
    INNER JOIN eio_publish.tenrox_private.trvfcblitem trvfcblitem 
        ON trvfcblitem.blcatid = trvfcblcat.uniqueid 
        AND trvfcblitem.objecttype = 129 
    INNER JOIN eio_publish.tenrox_private.trvfcblitemdata trvfcblitemdata 
        ON trvfcblitemdata.blitemid = trvfcblitem.uniqueid 
        AND trvfcblitemdata.elementtype = 1 
    INNER JOIN eio_publish.tenrox_private.tfcalperiod tfcalperiod 
        ON tfcalperiod.uniqueid = trvfcblitemdata.calperiodid 
        AND tfcalperiod.periodtype = 'M' 
        AND tfcalperiod.calid = 4 
    INNER JOIN eio_publish.tenrox_private.tcharge tcharge 
        ON tcharge.uniqueid = trvfcblitem.objectid 
        AND tcharge.chargetype = 'M' 
    RIGHT OUTER JOIN eio_publish.tenrox_private.tproject tproject 
        ON tproject.uniqueid = trvfcbaseline.projectid 
    LEFT JOIN eio_publish.tenrox_private.tclientinvoice tclientinvoice 
        ON tclientinvoice.clientid = tproject.clientid 
    LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02 AS ranges
    LEFT OUTER JOIN  (SELECT
                         IFNULL(uniqueid, 1) AS lubasecurrencyid
                       FROM eio_publish.tenrox_private.tcurrency tcurrency
                       WHERE  currencycode = 'USD') BasebasecurCUR
     -- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
     /* only used in CUST_ADSK_MARGINVARIANCE where OverrideCurID = @USDCurID and is forced to 1, LUBaseCurrencyID is also always 1
                    SELECT  
                         @USDCurID = ISNULL(UNIQUEID, 1)  
                         FROM   TCURRENCY  
                         WHERE  CURRENCYCODE = 'USD'
                    @USDCurID = LUBaseCurrencyID = @OverrideCurID = 1
     */
     LEFT OUTER JOIN (
                    SELECT
                         IFNULL(uniqueid, 1)      AS overridecurid
                    FROM eio_publish.tenrox_private.tcurrency
                    WHERE currencycode = 'USD'
                    ) usdcurid
     -- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
     LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate AS fxrate
                  ON  fxrate.basecurrencyid = COALESCE(tclientinvoice.currencyid, lubasecurrencyid)
                 AND  fxrate.quotecurrencyid = COALESCE(NULL, tclientinvoice.currencyid, lubasecurrencyid)
                 AND  CURRENT_DATE() BETWEEN fxrate.startdate AND fxrate.enddate
     WHERE            trvfcbaseline.iscurrent = 1
     GROUP            BY
          tproject.uniqueid
  );
[0m14:46:36.235994 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:36.236635 [debug] [Thread-1 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_forecast_chrg_cost_transform"
[0m14:46:36.255603 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_forecast_chrg_cost_transform"
[0m14:46:36.255761 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_forecast_chrg_cost_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_forecast_chrg_cost_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_forecast_chrg_cost
  
   as (
    
/* ADSK_FN_CM_FORECAST_CHRG_COST
  @OverrideCurID  INT
  , @RangeBegin   DATETIME = NULL
  , @RangeEnd     DATETIME = NULL
  , @CutoverDate  DATETIME = NULL
  , @Placeholder5 INT = NULL

Used only in CUST_ADSK_MARGINVARIANCE where @OverrideCurID = @USDCurID is forced set to 1
and LUBaseCurrencyID is forced set to 1 as well
Therefore:
CASE
     WHEN @OverrideCurID IS NULL THEN TRVFCBLITEMDATA.AMOUNTCLIENTCURRENCY   --> @OverrideCurID is always 1 and IS NEVER NULL
     WHEN LUBaseCurrencyID = @OverrideCurID THEN TRVFCBLITEMDATA.AMOUNTBASECURRENCY  --> LUBaseCurrencyID = 1 and therefore @USDCurID = LUBaseCurrencyID
     ELSE TRVFCBLITEMDATA.AMOUNTCLIENTCURRENCY * FXRate.Rate
 END
*/

SELECT 
     tproject.uniqueid                     AS projectid
     /* Exclude Ratable Billing */
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_nonratable_all
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                           THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                            WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                            ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_nonratable_future
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_nonratable_currentmonth
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_nonratable_futureqtrs
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_nonratable_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_nonratable_remaininginqtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_nonratable_plus1qtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_nonratable_plus2qtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_nonratable_plus3qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_nonratable_additionalqtrs
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
                AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_nonratable_customrange
    /* Ratable Costs Only */
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ratable_all
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ratable_future
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ratable_currentmonth
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ratable_futureqtrs
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ratable_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ratable_remaininginqtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ratable_plus1qtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ratable_plus2qtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ratable_plus3qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ratable_additionalqtrs
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ratable_customrange
    /* All Charge Costs */
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                            WHEN lubasecurrencyid = overridecurid
                                                                                THEN trvfcblitemdata.amountbasecurrency
                                                                            ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_all
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_future
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_currentmonthbegins AND tfcalperiod.startdate < fnc_nextmonthbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_currentmonth
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_futureqtrs
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_currentqtrbegins AND tfcalperiod.startdate < fnc_plus1qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_currentmonthbegins AND tfcalperiod.startdate < fnc_plus1qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_remaininginqtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_plus1qtrbegins AND tfcalperiod.startdate < fnc_plus2qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_plus1qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_plus2qtrbegins AND tfcalperiod.startdate < fnc_plus3qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_plus2qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_plus3qtrbegins AND tfcalperiod.startdate < fnc_plus4qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_plus3qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_plus4qtrbegins AND tfcalperiod.startdate < fnc_plus5qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_plus4qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_plus5qtrbegins AND tfcalperiod.startdate < fnc_plus6qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_plus5qtr
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_additionalqtrs
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_plus6qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_additional2qtrs
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_customrange
    /* Third Party Product-Costs */
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_ipprodsales_all
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_future
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                 WHEN lubasecurrencyid = overridecurid
                                                                                     THEN trvfcblitemdata.amountbasecurrency
                                                                                 ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_currentmonth
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_futureqtrs
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_currentqtrbegins
                AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_remaininginqtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
                AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_plus1qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
                AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_plus2qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
                AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_plus3qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_plus4qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_additionalqtrs
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = 'Third Party Product-Costs' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
                AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_ipprodsales_customrange
    /* 3rd Party-Non-Billable T&E */
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_3rdnonbillte_all
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_future
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                 WHEN lubasecurrencyid = overridecurid
                                                                                     THEN trvfcblitemdata.amountbasecurrency
                                                                                 ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_currentmonth
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_futureqtrs
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentqtrbegins
                AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_remaininginqtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
                AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_plus1qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
                AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_plus2qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
                AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_plus3qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus4qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdnonbillte_additionalqtrs
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Non-Billable T&E'
        AND tfcalperiod.startdate >= fnc_fcst_customrangebegin AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_3rdnonbillte_customrange
    /* 3rd Party-Billable Expenses */
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_3rdbillableexp_all
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_future
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                 WHEN lubasecurrencyid = overridecurid
                                                                                     THEN trvfcblitemdata.amountbasecurrency
                                                                                 ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_currentmonth
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_futureqtrs
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentqtrbegins
                AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_remaininginqtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
                AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_plus1qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
                AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_plus2qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
                AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_plus3qtr
     , SUM(IFNULL(
        CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus4qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgcost_3rdbillableexp_additionalqtrs
     , SUM(IFNULL(CASE WHEN trvfcblseclabel.label = 'Cost' AND tcharge.name = '3rd Party-Billable Expenses'
        AND tfcalperiod.startdate >= fnc_fcst_customrangebegin AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgcost_3rdbillableexp_customrange
     , MAX(fnc_fcst_customrangebegin)        AS fcstchrgcost_customrangebegin, MAX(fnc_fcst_customrangeend) AS fcstchrgcost_customrangeend
     , 7                                     AS sqlversion_forecast_chrg_cost
    FROM eio_publish.tenrox_private.trvfcbaseline trvfcbaseline
    LEFT OUTER JOIN
        eio_publish.tenrox_private.trvfcbaselinebudget trvfcbaselinebudget 
        ON trvfcbaselinebudget.baselineuid = trvfcbaseline.uniqueid
    INNER JOIN eio_publish.tenrox_private.trvfcbltmpl trvfcbltmpl 
        ON trvfcbltmpl.baselineid = trvfcbaseline.uniqueid
    INNER JOIN eio_publish.tenrox_private.trvfcblsec trvfcblsec 
        ON trvfcblsec.bltmplid = trvfcbltmpl.uniqueid
    INNER JOIN
        eio_publish.tenrox_private.trvfcblseclabel trvfcblseclabel
        ON trvfcblseclabel.blsecid = trvfcblsec.uniqueid
        AND trvfcblseclabel.language = 0
        AND trvfcblseclabel.label = 'Cost'
    INNER JOIN eio_publish.tenrox_private.trvfcblcat trvfcblcat 
        ON trvfcblcat.blsecid = trvfcblsec.uniqueid
    INNER JOIN
        eio_publish.tenrox_private.trvfcblcatlabel trvfcblcatlabel
        ON trvfcblcatlabel.blcatid = trvfcblcat.uniqueid
        AND trvfcblcatlabel.language = 0
        AND trvfcblcatlabel.label = 'Charges'
    INNER JOIN
        eio_publish.tenrox_private.trvfcblitem trvfcblitem 
        ON trvfcblitem.blcatid = trvfcblcat.uniqueid 
        AND trvfcblitem.objecttype = 129
    INNER JOIN
        eio_publish.tenrox_private.trvfcblitemdata trvfcblitemdata
        ON trvfcblitemdata.blitemid = trvfcblitem.uniqueid
        AND trvfcblitemdata.elementtype = 1
    INNER JOIN
        eio_publish.tenrox_private.tfcalperiod tfcalperiod
        ON tfcalperiod.uniqueid = trvfcblitemdata.calperiodid
        AND tfcalperiod.periodtype = 'M'
        AND tfcalperiod.calid = 4
    INNER JOIN eio_publish.tenrox_private.tcharge tcharge 
        ON tcharge.uniqueid = trvfcblitem.objectid 
        AND tcharge.chargetype = 'M'
    RIGHT OUTER JOIN eio_publish.tenrox_private.tproject tproject 
        ON tproject.uniqueid = trvfcbaseline.projectid
    LEFT JOIN eio_publish.tenrox_private.tclientinvoice tclientinvoice 
        ON tclientinvoice.clientid = tproject.clientid
    LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02 AS ranges
    LEFT OUTER JOIN
        (
            SELECT IFNULL(uniqueid, 1) AS lubasecurrencyid 
        FROM eio_publish.tenrox_private.tcurrency tcurrency 
        WHERE currencycode = 'USD'
        ) basecur
    -- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
    /* only used in CUST_ADSK_MARGINVARIANCE WHERE OverrideCurID = @USDCurID and is forced to 1, LUBaseCurrencyID is also always 1
                        SELECT  
                             @USDCurID = ISNULL(UNIQUEID, 1)  
                             FROM   TCURRENCY  
                             WHERE  CURRENCYCODE = 'USD'
                        @USDCurID = LUBaseCurrencyID = @OverrideCurID = 1
         */
    LEFT OUTER JOIN
        (SELECT 
            IFNULL(uniqueid, 1) AS overridecurid 
        FROM eio_publish.tenrox_private.tcurrency 
        WHERE currencycode = 'USD') usdcurid
    -- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
    LEFT OUTER JOIN
        EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate AS fxrate
        ON fxrate.basecurrencyid = COALESCE(tclientinvoice.currencyid, lubasecurrencyid)
        AND fxrate.quotecurrencyid = COALESCE(overridecurid, tclientinvoice.currencyid, lubasecurrencyid)
        AND CURRENT_DATE() BETWEEN fxrate.startdate AND fxrate.enddate
    WHERE trvfcbaseline.iscurrent = 1
    GROUP BY 
      tproject.uniqueid
  );
[0m14:46:36.281776 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:36.282765 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_act_labor_costs_v02_transform (execute): 2023-08-21 14:46:35.171600 => 2023-08-21 14:46:36.282737
[0m14:46:36.282874 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_act_labor_costs_v02_transform: Close
[0m14:46:36.540175 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x16543ee10>]}
[0m14:46:36.540468 [info ] [Thread-2 (]: 13 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_act_labor_costs_v02  [[32mSUCCESS 1[0m in 1.37s]
[0m14:46:36.540644 [debug] [Thread-2 (]: Finished running node model.my_dbt_projects.adsk_cm_act_labor_costs_v02_transform
[0m14:46:36.540831 [debug] [Thread-2 (]: Began running node model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_stacked_transform
[0m14:46:36.541143 [info ] [Thread-2 (]: 16 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_forecast_chrg_rev_local_cur_v02_stacked  [RUN]
[0m14:46:36.541464 [debug] [Thread-2 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_stacked_transform'
[0m14:46:36.541568 [debug] [Thread-2 (]: Began compiling node model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_stacked_transform
[0m14:46:36.545668 [debug] [Thread-2 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_stacked_transform"
[0m14:46:36.546684 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_stacked_transform (compile): 2023-08-21 14:46:36.541627 => 2023-08-21 14:46:36.546631
[0m14:46:36.546837 [debug] [Thread-2 (]: Began executing node model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_stacked_transform
[0m14:46:36.548906 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_stacked_transform"
[0m14:46:36.548995 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_stacked_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:36.549065 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m14:46:36.718457 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:36.719735 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_forecast_chrg_cost_local_cur_transform (execute): 2023-08-21 14:46:35.463120 => 2023-08-21 14:46:36.719710
[0m14:46:36.719848 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_forecast_chrg_cost_local_cur_transform: Close
[0m14:46:36.819769 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:36.820780 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_forecast_chrg_cost_transform (execute): 2023-08-21 14:46:35.545455 => 2023-08-21 14:46:36.820754
[0m14:46:36.820895 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_forecast_chrg_cost_transform: Close
[0m14:46:36.975950 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x164e25350>]}
[0m14:46:36.976261 [info ] [Thread-3 (]: 14 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_forecast_chrg_cost_local_cur  [[32mSUCCESS 1[0m in 1.52s]
[0m14:46:36.976431 [debug] [Thread-3 (]: Finished running node model.my_dbt_projects.adsk_cm_forecast_chrg_cost_local_cur_transform
[0m14:46:36.976558 [debug] [Thread-3 (]: Began running node model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_transform
[0m14:46:36.976840 [info ] [Thread-3 (]: 17 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_forecast_chrg_rev_local_cur_v02  [RUN]
[0m14:46:36.977141 [debug] [Thread-3 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_transform'
[0m14:46:36.977237 [debug] [Thread-3 (]: Began compiling node model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_transform
[0m14:46:36.985254 [debug] [Thread-3 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_transform"
[0m14:46:36.986756 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_transform (compile): 2023-08-21 14:46:36.977299 => 2023-08-21 14:46:36.986711
[0m14:46:36.986909 [debug] [Thread-3 (]: Began executing node model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_transform
[0m14:46:36.988912 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_transform"
[0m14:46:36.989006 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:36.989075 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m14:46:37.073717 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165f86ed0>]}
[0m14:46:37.074032 [info ] [Thread-1 (]: 15 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_forecast_chrg_cost . [[32mSUCCESS 1[0m in 1.54s]
[0m14:46:37.074203 [debug] [Thread-1 (]: Finished running node model.my_dbt_projects.adsk_cm_forecast_chrg_cost_transform
[0m14:46:37.074326 [debug] [Thread-1 (]: Began running node model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_transform
[0m14:46:37.074443 [info ] [Thread-1 (]: 18 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_forecast_chrg_rev_v02 ... [RUN]
[0m14:46:37.074901 [debug] [Thread-1 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_transform'
[0m14:46:37.075068 [debug] [Thread-1 (]: Began compiling node model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_transform
[0m14:46:37.082292 [debug] [Thread-1 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_transform"
[0m14:46:37.082996 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_transform (compile): 2023-08-21 14:46:37.075142 => 2023-08-21 14:46:37.082947
[0m14:46:37.083160 [debug] [Thread-1 (]: Began executing node model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_transform
[0m14:46:37.085160 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_transform"
[0m14:46:37.085259 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:37.085326 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:46:37.285731 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:37.286614 [debug] [Thread-2 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_stacked_transform"
[0m14:46:37.293528 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_stacked_transform"
[0m14:46:37.293675 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_stacked_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_forecast_chrg_rev_local_cur_v02_stacked
  
   as (
    


WITH 
date_range AS (
  SELECT YEAR(DATEADD(YEAR, -10, CURRENT_DATE())) || '-02-01' AS start_date,
         DATEADD(YEAR, 2, CURRENT_DATE()) AS end_date,
        DATEDIFF(DAY, start_date, end_date) + 1   AS rng
),

rvfcbaseline AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.trvfcbaseline
),

rvfcbaselinebudget AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.trvfcbaselinebudget
),

rvfcbltmpl AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.trvfcbltmpl
),

rvfcblsec AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.trvfcblsec
),

rvfcblseclabel AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.trvfcblseclabel
),

rvfcblcat AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.trvfcblcat
),

rvfcblcatlabel AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.trvfcblcatlabel
),

rvfcblitem AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.trvfcblitem
),

rvfcblitemdata AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.trvfcblitemdata
),

fcalperiod AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.tfcalperiod
),

project AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.tproject
),

clientinvoice AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.tclientinvoice
),

adsk_month_q_ranges_v02 AS
(
    SELECT
    *
    FROM
    EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02
),

currency AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.tcurrency
),

fcurrqexchrate AS
(
    SELECT
    *
    FROM
    EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate
),

adsk_cm_project_details AS
(
    SELECT
    *
    FROM
    EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_details
),



date_sequence AS (
SELECT DATEADD(DAY, seq4(), start_date) AS dt
FROM date_range,
     TABLE(GENERATOR(ROWCOUNT => 5000)) 
ORDER BY dt
  ),

projects AS (  
SELECT
DISTINCT pd.PROJECTID
, ds.dt
FROM 
adsk_cm_project_details AS   pd
LEFT OUTER JOIN date_sequence ds
),

fcst_charge_rev AS (
SELECT 
     tproject.uniqueid                     AS projectid
     ,tfcalperiod.startdate as dt
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable

    -- All BUT Ratable
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable
    , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_remaininginqtr

    -- IPProdSales
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                              WHEN lubasecurrencyid = overridecurid
                                                                                  THEN trvfcblitemdata.amountbasecurrency
                                                                              ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_ipprodsales

    -- Ratable Billing
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                              WHEN lubasecurrencyid = overridecurid
                                                                                  THEN trvfcblitemdata.amountbasecurrency
                                                                              ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ratablebilling

    -- IP3rdSales
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Third Party Product-Sales' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                              WHEN lubasecurrencyid = overridecurid
                                                                                  THEN trvfcblitemdata.amountbasecurrency
                                                                              ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_3rdprodsales

     , SUM(IFNULL(
        CASE WHEN tcharge.name = '3rd Party-Billable Expenses' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_3rdbillableexp

     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Internal-Billable Expenses' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                               WHEN lubasecurrencyid = overridecurid
                                                                                   THEN trvfcblitemdata.amountbasecurrency
                                                                               ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_internalbillableexp

     , SUM(IFNULL(
        CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                               WHEN lubasecurrencyid = overridecurid
                                                                                   THEN trvfcblitemdata.amountbasecurrency
                                                                               ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_3rdnonbillte

     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                              WHEN lubasecurrencyid = overridecurid
                                                                                  THEN trvfcblitemdata.amountbasecurrency
                                                                              ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_internalnonbillte

     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_sysconvnonbill

     , MAX(fnc_fcst_customrangebegin)        AS fcstchrgrev_customrangebegin, MAX(fnc_fcst_customrangeend) AS fcstchrgrev_customrangeend
     , 15                                    AS sqlversion_forecast_chrg_rev
    FROM  rvfcbaseline AS trvfcbaseline
    LEFT OUTER JOIN rvfcbaselinebudget AS trvfcbaselinebudget
        ON trvfcbaselinebudget.baselineuid = trvfcbaseline.uniqueid 
    INNER JOIN rvfcbltmpl AS trvfcbltmpl 
        ON trvfcbltmpl.baselineid = trvfcbaseline.uniqueid 
    INNER JOIN rvfcblsec AS trvfcblsec 
        ON trvfcblsec.bltmplid = trvfcbltmpl.uniqueid 
    INNER JOIN rvfcblseclabel AS trvfcblseclabel 
        ON trvfcblseclabel.blsecid = trvfcblsec.uniqueid 
        AND trvfcblseclabel.language = 0 
    INNER JOIN rvfcblcat AS trvfcblcat 
        ON trvfcblcat.blsecid = trvfcblsec.uniqueid 
    INNER JOIN rvfcblcatlabel AS trvfcblcatlabel 
        ON trvfcblcatlabel.blcatid = trvfcblcat.uniqueid 
        AND trvfcblcatlabel.language = 0 
    INNER JOIN rvfcblitem AS trvfcblitem 
        ON trvfcblitem.blcatid = trvfcblcat.uniqueid 
    INNER JOIN rvfcblitemdata AS trvfcblitemdata 
        ON trvfcblitemdata.blitemid = trvfcblitem.uniqueid 
    INNER JOIN fcalperiod AS tfcalperiod 
        ON tfcalperiod.uniqueid = trvfcblitemdata.calperiodid 
        AND tfcalperiod.periodtype = 'M' 
        AND tfcalperiod.calid = 4
    LEFT JOIN eio_publish.tenrox_private.tcharge tcharge
                ON CASE trvfcblitem.objecttype 
                    WHEN 129 THEN tcharge.uniqueid 
                END = trvfcblitem.objectid 
                AND tcharge.chargetype = 'M'

    RIGHT OUTER JOIN project AS tproject
        ON tproject.uniqueid = trvfcbaseline.projectid 
    LEFT JOIN clientinvoice AS tclientinvoice 
        ON tclientinvoice.clientid = tproject.clientid 
    LEFT OUTER JOIN adsk_month_q_ranges_v02 AS ranges
    LEFT OUTER JOIN  (SELECT
                         IFNULL(uniqueid, 1) AS lubasecurrencyid
                       FROM currency AS tcurrency
                       WHERE  currencycode = 'USD') basecur
     -- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID
    LEFT OUTER JOIN (
                    SELECT
                         NULL      AS overridecurid
                    FROM currency
                    WHERE currencycode = 'USD'
                    ) usdcurid
     -- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID
    LEFT OUTER JOIN fcurrqexchrate AS fxrate
        ON fxrate.basecurrencyid = COALESCE(tclientinvoice.currencyid, lubasecurrencyid)
        -- only used in CUST_ADSK_MARGINVARIANCE where @OverrideCurID = @USDCurID and is forced to 1, LUBaseCurrencyID is also always 1
        AND fxrate.quotecurrencyid = COALESCE(NULL, tclientinvoice.currencyid, lubasecurrencyid) 
        AND CURRENT_DATE () BETWEEN fxrate.startdate AND fxrate.enddate
    WHERE trvfcbaseline.iscurrent = 1 
        AND trvfcblitemdata.elementtype = 1 
        AND trvfcblseclabel.label = 'Revenue' 
        AND trvfcblcatlabel.label = 'Charges'
        AND trvfcblitem.objecttype = 129 
        AND trvfcblitemdata.elementtype = 1
    GROUP BY 
        tproject.uniqueid
 ,tfcalperiod.startdate
  
  ),
  
--select * from final where projectid = 15078;
fcst_charge_rev_final AS (  
 SELECT 
 p.projectid
,p.dt
,f.fcstchrgrev_allbillable
,f.fcstchrgrev_nonratablebillable
,f.fcstchrgrev_nonratablebillable_remaininginqtr
,f.fcstchrgrev_ipprodsales
,f.fcstchrgrev_ratablebilling
,f.fcstchrgrev_3rdprodsales
,f.fcstchrgrev_3rdbillableexp
,f.fcstchrgrev_internalbillableexp
,f.fcstchrgrev_3rdnonbillte
,f.fcstchrgrev_internalnonbillte
,f.fcstchrgrev_sysconvnonbill

 FROM 
 projects p
 left join fcst_charge_rev f ON p.projectid = f.projectid AND p.dt = f.dt

  )
 SELECT 
  projectid AS projectid
  ,CASE
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 2 AND 4 THEN TO_DATE(EXTRACT(YEAR FROM   dt)||'-02-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 5 AND 7 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-05-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 8 AND 10 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-08-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 11 AND 12 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-11-01')
              ELSE TO_DATE(EXTRACT(YEAR FROM dt) - 1 ||'-11-01')
            END                                                                                           AS dt
  ,SUM(fcstchrgrev_allbillable) AS fcstchrgrev_allbillable
  ,SUM(fcstchrgrev_nonratablebillable) AS fcstchrgrev_nonratablebillable
  ,SUM(fcstchrgrev_nonratablebillable_remaininginqtr) AS fcstchrgrev_nonratablebillable_remaininginqtr
  ,SUM(fcstchrgrev_ipprodsales) AS fcstchrgrev_ipprodsales
  ,SUM(fcstchrgrev_ratablebilling) AS fcstchrgrev_ratablebilling
  ,SUM(fcstchrgrev_3rdprodsales) AS fcstchrgrev_3rdprodsales
  ,SUM(fcstchrgrev_3rdbillableexp) AS fcstchrgrev_3rdbillableexp
  ,SUM(fcstchrgrev_internalbillableexp) AS fcstchrgrev_internalbillableexp
  ,SUM(fcstchrgrev_3rdnonbillte) AS fcstchrgrev_3rdnonbillte
  ,SUM(fcstchrgrev_internalnonbillte) AS fcstchrgrev_internalnonbillte
  ,SUM(fcstchrgrev_sysconvnonbill) AS fcstchrgrev_sysconvnonbill
  FROM  
  fcst_charge_rev_final
  GROUP BY
  projectid 
  ,CASE
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 2 AND 4 THEN TO_DATE(EXTRACT(YEAR FROM   dt)||'-02-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 5 AND 7 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-05-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 8 AND 10 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-08-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 11 AND 12 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-11-01')
              ELSE TO_DATE(EXTRACT(YEAR FROM dt) - 1 ||'-11-01')
            END
  );
[0m14:46:37.662917 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:37.663765 [debug] [Thread-3 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_transform"
[0m14:46:37.692827 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_transform"
[0m14:46:37.692962 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_forecast_chrg_rev_local_cur_v02
  
   as (
    
/* ADSK_FN_CM_FORECAST_CHRG_COST
  @OverrideCurID  INT
  , @RangeBegin   DATETIME = NULL
  , @RangeEnd     DATETIME = NULL
  , @CutoverDate  DATETIME = NULL
  , @Placeholder5 INT = NULL

Used only in CUST_ADSK_MARGINVARIANCE where @OverrideCurID = @USDCurID is forced set to 1
and LUBaseCurrencyID is forced set to 1 as well

Therefore:
CASE
     WHEN @OverrideCurID IS NULL THEN TRVFCBLITEMDATA.AMOUNTCLIENTCURRENCY   --> @OverrideCurID is always 1 and IS NEVER NULL
     WHEN LUBaseCurrencyID = @OverrideCurID THEN TRVFCBLITEMDATA.AMOUNTBASECURRENCY  --> LUBaseCurrencyID = 1 and therefore @USDCurID = LUBaseCurrencyID
     ELSE TRVFCBLITEMDATA.AMOUNTCLIENTCURRENCY * FXRate.Rate
 END
*/

SELECT 
     tproject.uniqueid                     AS projectid
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_all
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_allbillable_future
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_currentmonthbegins AND tfcalperiod.startdate < fnc_nextmonthbegins
                           THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                            WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                            ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_allbillable_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_allbillable_futureqtrs
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_currentqtrbegins AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_currentmonthbegins AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_remaininginqtr
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_plus1qtrbegins AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_plus1qtr
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_plus2qtrbegins AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_plus2qtr
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_plus3qtrbegins AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_plus3qtr
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_plus4qtrbegins AND tfcalperiod.startdate < fnc_plus5qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_plus4qtr
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_plus5qtrbegins AND tfcalperiod.startdate < fnc_plus6qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_plus5qtr
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_allbillable_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_plus6qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_allbillable_additionalqtrs2
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_fcst_customrangebegin AND tfcalperiod.startdate < fnc_fcst_customrangeend
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_customrange
    -- All BUT Ratable
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_all
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                           THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                            WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                            ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_future
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_currentmonth
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_nonratablebillable_futureqtrs
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_remaininginqtr
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_plus1qtr
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_plus2qtr
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus4qtrbegins
        AND tfcalperiod.startdate < fnc_plus5qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_plus4qtr
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus5qtrbegins
        AND tfcalperiod.startdate < fnc_plus6qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_plus5qtr
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_nonratablebillable_additionalqtrs
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus6qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_nonratablebillable_additionalqtrs2
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
                AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_nonratablebillable_customrange
    -- IPProdSales
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                              WHEN lubasecurrencyid = overridecurid
                                                                                  THEN trvfcblitemdata.amountbasecurrency
                                                                              ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_ipprodsales_all
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_future
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_futureqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_remaininginqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_plus1qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_plus2qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_customrange
    -- Ratable Billing
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                              WHEN lubasecurrencyid = overridecurid
                                                                                  THEN trvfcblitemdata.amountbasecurrency
                                                                              ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ratablebilling_all
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ratablebilling_future
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins AND tfcalperiod.startdate < fnc_nextmonthbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_ratablebilling_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ratablebilling_futureqtrs
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentqtrbegins AND tfcalperiod.startdate < fnc_plus1qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_ratablebilling_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins AND tfcalperiod.startdate < fnc_plus1qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_ratablebilling_remaininginqtr
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus1qtrbegins AND tfcalperiod.startdate < fnc_plus2qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_ratablebilling_plus1qtr
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus2qtrbegins AND tfcalperiod.startdate < fnc_plus3qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_ratablebilling_plus2qtr
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus3qtrbegins AND tfcalperiod.startdate < fnc_plus4qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_ratablebilling_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ratablebilling_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ratablebilling_customrange
    -- IP3rdSales
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Third Party Product-Sales' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                              WHEN lubasecurrencyid = overridecurid
                                                                                  THEN trvfcblitemdata.amountbasecurrency
                                                                              ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_3rdprodsales_all
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_future
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_futureqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_remaininginqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_plus1qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_plus2qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_customrange
     , SUM(IFNULL(
        CASE WHEN tcharge.name = '3rd Party-Billable Expenses' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_3rdbillableexp_all
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_future
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_futureqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_remaininginqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_plus1qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_plus2qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_customrange
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Internal-Billable Expenses' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                               WHEN lubasecurrencyid = overridecurid
                                                                                   THEN trvfcblitemdata.amountbasecurrency
                                                                               ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_internalbillableexp_all
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_future
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_futureqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_remaininginqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_plus1qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_plus2qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_customrange
     , SUM(IFNULL(
        CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                               WHEN lubasecurrencyid = overridecurid
                                                                                   THEN trvfcblitemdata.amountbasecurrency
                                                                               ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_3rdnonbillte_all
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_future
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_futureqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_remaininginqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_plus1qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_plus2qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_customrange
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                              WHEN lubasecurrencyid = overridecurid
                                                                                  THEN trvfcblitemdata.amountbasecurrency
                                                                              ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_internalnonbillte_all
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_future
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_futureqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_remaininginqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_plus1qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_plus2qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_customrange
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_sysconvnonbill_all
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_future
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_futureqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_remaininginqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_plus1qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_plus2qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_customrange
     , MAX(fnc_fcst_customrangebegin)        AS fcstchrgrev_customrangebegin, MAX(fnc_fcst_customrangeend) AS fcstchrgrev_customrangeend
     , 15                                    AS sqlversion_forecast_chrg_rev
    FROM eio_publish.tenrox_private.trvfcbaseline trvfcbaseline
    LEFT OUTER JOIN eio_publish.tenrox_private.trvfcbaselinebudget trvfcbaselinebudget
        ON trvfcbaselinebudget.baselineuid = trvfcbaseline.uniqueid 
    INNER JOIN eio_publish.tenrox_private.trvfcbltmpl trvfcbltmpl 
        ON trvfcbltmpl.baselineid = trvfcbaseline.uniqueid 
    INNER JOIN eio_publish.tenrox_private.trvfcblsec trvfcblsec 
        ON trvfcblsec.bltmplid = trvfcbltmpl.uniqueid 
    INNER JOIN eio_publish.tenrox_private.trvfcblseclabel trvfcblseclabel 
        ON trvfcblseclabel.blsecid = trvfcblsec.uniqueid 
        AND trvfcblseclabel.language = 0 
    INNER JOIN eio_publish.tenrox_private.trvfcblcat trvfcblcat 
        ON trvfcblcat.blsecid = trvfcblsec.uniqueid 
    INNER JOIN eio_publish.tenrox_private.trvfcblcatlabel trvfcblcatlabel 
        ON trvfcblcatlabel.blcatid = trvfcblcat.uniqueid 
        AND trvfcblcatlabel.language = 0 
    INNER JOIN eio_publish.tenrox_private.trvfcblitem trvfcblitem 
        ON trvfcblitem.blcatid = trvfcblcat.uniqueid 
    INNER JOIN eio_publish.tenrox_private.trvfcblitemdata trvfcblitemdata 
        ON trvfcblitemdata.blitemid = trvfcblitem.uniqueid 
    INNER JOIN eio_publish.tenrox_private.tfcalperiod tfcalperiod 
        ON tfcalperiod.uniqueid = trvfcblitemdata.calperiodid 
        AND tfcalperiod.periodtype = 'M' 
        AND tfcalperiod.calid = 4
    LEFT JOIN eio_publish.tenrox_private.tcharge tcharge
                ON CASE trvfcblitem.objecttype 
                    WHEN 129 THEN tcharge.uniqueid 
                END = trvfcblitem.objectid 
                AND tcharge.chargetype = 'M'

    RIGHT OUTER JOIN eio_publish.tenrox_private.tproject tproject
        ON tproject.uniqueid = trvfcbaseline.projectid 
    LEFT JOIN eio_publish.tenrox_private.tclientinvoice tclientinvoice 
        ON tclientinvoice.clientid = tproject.clientid 
    LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02 AS ranges
    LEFT OUTER JOIN  (SELECT
                         IFNULL(uniqueid, 1) AS lubasecurrencyid
                       FROM eio_publish.tenrox_private.tcurrency tcurrency
                       WHERE  currencycode = 'USD') basecur
     -- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID
    LEFT OUTER JOIN (
                    SELECT
                         NULL      AS overridecurid
                    FROM eio_publish.tenrox_private.tcurrency
                    WHERE currencycode = 'USD'
                    ) usdcurid
     -- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID
    LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate AS fxrate
        ON fxrate.basecurrencyid = COALESCE(tclientinvoice.currencyid, lubasecurrencyid)
        -- only used in CUST_ADSK_MARGINVARIANCE where @OverrideCurID = @USDCurID and is forced to 1, LUBaseCurrencyID is also always 1
        AND fxrate.quotecurrencyid = COALESCE(NULL, tclientinvoice.currencyid, lubasecurrencyid) 
        AND CURRENT_DATE () BETWEEN fxrate.startdate AND fxrate.enddate
    WHERE trvfcbaseline.iscurrent = 1 
        AND trvfcblitemdata.elementtype = 1 
        AND trvfcblseclabel.label = 'Revenue' 
        AND trvfcblcatlabel.label = 'Charges'
        AND trvfcblitem.objecttype = 129 
        AND trvfcblitemdata.elementtype = 1
    GROUP BY 
        tproject.uniqueid
  );
[0m14:46:37.722259 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:37.723088 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_stacked_transform (execute): 2023-08-21 14:46:36.546906 => 2023-08-21 14:46:37.723062
[0m14:46:37.723183 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_stacked_transform: Close
[0m14:46:37.753628 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:37.754336 [debug] [Thread-1 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_transform"
[0m14:46:37.784502 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_transform"
[0m14:46:37.784641 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_forecast_chrg_rev_v02
  
   as (
    
/* ADSK_FN_CM_FORECAST_CHRG_COST
  @OverrideCurID  INT
  , @RangeBegin   DATETIME = NULL
  , @RangeEnd     DATETIME = NULL
  , @CutoverDate  DATETIME = NULL
  , @Placeholder5 INT = NULL

Used only in CUST_ADSK_MARGINVARIANCE where @OverrideCurID = @USDCurID is forced set to 1
and LUBaseCurrencyID is forced set to 1 as well

Therefore:
CASE
     WHEN @OverrideCurID IS NULL THEN TRVFCBLITEMDATA.AMOUNTCLIENTCURRENCY   --> @OverrideCurID is always 1 and IS NEVER NULL
     WHEN LUBaseCurrencyID = @OverrideCurID THEN TRVFCBLITEMDATA.AMOUNTBASECURRENCY  --> LUBaseCurrencyID = 1 and therefore @USDCurID = LUBaseCurrencyID
     ELSE TRVFCBLITEMDATA.AMOUNTCLIENTCURRENCY * FXRate.Rate
 END
*/

SELECT 
     tproject.uniqueid                     AS projectid
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_all
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_allbillable_future
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_currentmonthbegins AND tfcalperiod.startdate < fnc_nextmonthbegins
                           THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                            WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                            ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_allbillable_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_allbillable_futureqtrs
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_currentqtrbegins AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_currentmonthbegins AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_remaininginqtr
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_plus1qtrbegins AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_plus1qtr
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_plus2qtrbegins AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_plus2qtr
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_plus3qtrbegins AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_plus3qtr
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_plus4qtrbegins AND tfcalperiod.startdate < fnc_plus5qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_plus4qtr
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_plus5qtrbegins AND tfcalperiod.startdate < fnc_plus6qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_plus5qtr
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_allbillable_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_plus6qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_allbillable_additionalqtrs2
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND tfcalperiod.startdate >= fnc_fcst_customrangebegin AND tfcalperiod.startdate < fnc_fcst_customrangeend
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_allbillable_customrange
    -- All BUT Ratable
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_all
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins
                           THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                            WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                            ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_future
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_currentmonth
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_nonratablebillable_futureqtrs
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_remaininginqtr
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_plus1qtr
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_plus2qtr
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus4qtrbegins
        AND tfcalperiod.startdate < fnc_plus5qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_plus4qtr
     , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus5qtrbegins
        AND tfcalperiod.startdate < fnc_plus6qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_nonratablebillable_plus5qtr
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_nonratablebillable_additionalqtrs
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus6qtrbegins THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_nonratablebillable_additionalqtrs2
     , SUM(IFNULL(
        CASE WHEN tcharge.billable = 1 AND IFNULL(tcharge.name, '') <> 'Ratable Billing' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
                AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(
                CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                     WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                     ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_nonratablebillable_customrange
    -- IPProdSales
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                              WHEN lubasecurrencyid = overridecurid
                                                                                  THEN trvfcblitemdata.amountbasecurrency
                                                                              ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_ipprodsales_all
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_future
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_futureqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_remaininginqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_plus1qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_plus2qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ipprodsales_customrange
    -- Ratable Billing
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                              WHEN lubasecurrencyid = overridecurid
                                                                                  THEN trvfcblitemdata.amountbasecurrency
                                                                              ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ratablebilling_all
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ratablebilling_future
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins AND tfcalperiod.startdate < fnc_nextmonthbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_ratablebilling_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ratablebilling_futureqtrs
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentqtrbegins AND tfcalperiod.startdate < fnc_plus1qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_ratablebilling_entirecurrentqtr
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_currentmonthbegins AND tfcalperiod.startdate < fnc_plus1qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_ratablebilling_remaininginqtr
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus1qtrbegins AND tfcalperiod.startdate < fnc_plus2qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_ratablebilling_plus1qtr
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus2qtrbegins AND tfcalperiod.startdate < fnc_plus3qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_ratablebilling_plus2qtr
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus3qtrbegins AND tfcalperiod.startdate < fnc_plus4qtrbegins
                 THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                  WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                  ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_ratablebilling_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ratablebilling_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_ratablebilling_customrange
    -- IP3rdSales
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Third Party Product-Sales' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                              WHEN lubasecurrencyid = overridecurid
                                                                                  THEN trvfcblitemdata.amountbasecurrency
                                                                              ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_3rdprodsales_all
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_future
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_futureqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_remaininginqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_plus1qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_plus2qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdprodsales_customrange
     , SUM(IFNULL(
        CASE WHEN tcharge.name = '3rd Party-Billable Expenses' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_3rdbillableexp_all
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_future
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_futureqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_remaininginqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_plus1qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_plus2qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdbillableexp_customrange
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Internal-Billable Expenses' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                               WHEN lubasecurrencyid = overridecurid
                                                                                   THEN trvfcblitemdata.amountbasecurrency
                                                                               ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_internalbillableexp_all
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_future
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_futureqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_remaininginqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_plus1qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_plus2qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalbillableexp_customrange
     , SUM(IFNULL(
        CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                               WHEN lubasecurrencyid = overridecurid
                                                                                   THEN trvfcblitemdata.amountbasecurrency
                                                                               ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_3rdnonbillte_all
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_future
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_futureqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_remaininginqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_plus1qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_plus2qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_3rdnonbillte_customrange
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                              WHEN lubasecurrencyid = overridecurid
                                                                                  THEN trvfcblitemdata.amountbasecurrency
                                                                              ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_internalnonbillte_all
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_future
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_futureqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_remaininginqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_plus1qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_plus2qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_internalnonbillte_customrange
     , SUM(IFNULL(
        CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                                WHEN lubasecurrencyid = overridecurid
                                                                                    THEN trvfcblitemdata.amountbasecurrency
                                                                                ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
             ELSE 0.00 END, 0.00))           AS fcstchrgrev_sysconvnonbill_all
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_currentmonthbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_future
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_nextmonthbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                         WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                         ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_currentmonth
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_plus1qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_futureqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_currentqtrbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_entirecurrentqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_currentmonthbegins
        AND tfcalperiod.startdate < fnc_plus1qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_remaininginqtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_plus1qtrbegins
        AND tfcalperiod.startdate < fnc_plus2qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_plus1qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_plus2qtrbegins
        AND tfcalperiod.startdate < fnc_plus3qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_plus2qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_plus3qtrbegins
        AND tfcalperiod.startdate < fnc_plus4qtrbegins THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                        WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
                                                                        ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_plus3qtr
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_plus4qtrbegins THEN IFNULL(
        CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
             WHEN lubasecurrencyid = overridecurid THEN trvfcblitemdata.amountbasecurrency
             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_additionalqtrs
     , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tfcalperiod.startdate >= fnc_fcst_customrangebegin
        AND tfcalperiod.startdate < fnc_fcst_customrangeend THEN IFNULL(CASE WHEN overridecurid IS NULL THEN trvfcblitemdata.amountclientcurrency
                                                                             WHEN lubasecurrencyid = overridecurid
                                                                                 THEN trvfcblitemdata.amountbasecurrency
                                                                             ELSE trvfcblitemdata.amountclientcurrency * fxrate.rate END, 0.00)
                       ELSE 0.00 END, 0.00)) AS fcstchrgrev_sysconvnonbill_customrange
     , MAX(fnc_fcst_customrangebegin)        AS fcstchrgrev_customrangebegin, MAX(fnc_fcst_customrangeend) AS fcstchrgrev_customrangeend
     , 15                                    AS sqlversion_forecast_chrg_rev
    FROM eio_publish.tenrox_private.trvfcbaseline trvfcbaseline
    LEFT OUTER JOIN
        eio_publish.tenrox_private.trvfcbaselinebudget trvfcbaselinebudget
        ON trvfcbaselinebudget.baselineuid = trvfcbaseline.uniqueid
    INNER JOIN
        eio_publish.tenrox_private.trvfcbltmpl trvfcbltmpl
        ON trvfcbltmpl.baselineid = trvfcbaseline.uniqueid
    INNER JOIN
        eio_publish.tenrox_private.trvfcblsec trvfcblsec 
        ON trvfcblsec.bltmplid = trvfcbltmpl.uniqueid
    INNER JOIN
        eio_publish.tenrox_private.trvfcblseclabel trvfcblseclabel
        ON trvfcblseclabel.blsecid = trvfcblsec.uniqueid
        AND trvfcblseclabel.language = 0
    INNER JOIN eio_publish.tenrox_private.trvfcblcat trvfcblcat 
      ON trvfcblcat.blsecid = trvfcblsec.uniqueid
    INNER JOIN
        eio_publish.tenrox_private.trvfcblcatlabel trvfcblcatlabel
        ON trvfcblcatlabel.blcatid = trvfcblcat.uniqueid
        AND trvfcblcatlabel.language = 0
    INNER JOIN
        eio_publish.tenrox_private.trvfcblitem trvfcblitem 
          ON trvfcblitem.blcatid = trvfcblcat.uniqueid
    INNER JOIN
        eio_publish.tenrox_private.trvfcblitemdata trvfcblitemdata
        ON trvfcblitemdata.blitemid = trvfcblitem.uniqueid
    INNER JOIN
        eio_publish.tenrox_private.tfcalperiod tfcalperiod
        ON tfcalperiod.uniqueid = trvfcblitemdata.calperiodid
        AND tfcalperiod.periodtype = 'M'
        AND tfcalperiod.calid = 4
    LEFT JOIN
        eio_publish.tenrox_private.tcharge tcharge
        ON CASE trvfcblitem.objecttype WHEN 129 THEN tcharge.uniqueid
    END = trvfcblitem.objectid
        AND tcharge.chargetype = 'M'
    RIGHT OUTER JOIN
        eio_publish.tenrox_private.tproject tproject 
        ON tproject.uniqueid = trvfcbaseline.projectid
    LEFT JOIN
        eio_publish.tenrox_private.tclientinvoice tclientinvoice
        ON tclientinvoice.clientid = tproject.clientid
    LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02 AS ranges
    LEFT OUTER JOIN
        (
            SELECT IFNULL(uniqueid, 1) AS lubasecurrencyid
            FROM eio_publish.tenrox_private.tcurrency tcurrency
            WHERE currencycode = 'USD'
        ) basecur
    -- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID
    LEFT OUTER JOIN
        (
            SELECT IFNULL(uniqueid, 1) AS overridecurid
            FROM eio_publish.tenrox_private.tcurrency
            WHERE currencycode = 'USD'
        ) usdcurid
    -- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID
    LEFT OUTER JOIN
        EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate AS fxrate
        ON fxrate.basecurrencyid = COALESCE(tclientinvoice.currencyid, lubasecurrencyid)
        -- only used in CUST_ADSK_MARGINVARIANCE WHERE @OverrideCurID = @USDCurID and is forced to 1,
        -- LUBaseCurrencyID is also always 1
        AND fxrate.quotecurrencyid = COALESCE(overridecurid, tclientinvoice.currencyid, lubasecurrencyid)
        AND CURRENT_DATE() BETWEEN fxrate.startdate AND fxrate.enddate
    WHERE
        trvfcbaseline.iscurrent = 1
        AND trvfcblitemdata.elementtype = 1
        AND trvfcblseclabel.label = 'Revenue'
        AND trvfcblcatlabel.label = 'Charges'
        AND trvfcblitem.objecttype = 129
        AND trvfcblitemdata.elementtype = 1
    GROUP BY tproject.uniqueid
  );
[0m14:46:38.143832 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165463890>]}
[0m14:46:38.144127 [info ] [Thread-2 (]: 16 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_forecast_chrg_rev_local_cur_v02_stacked  [[32mSUCCESS 1[0m in 1.60s]
[0m14:46:38.144292 [debug] [Thread-2 (]: Finished running node model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_stacked_transform
[0m14:46:38.144413 [debug] [Thread-2 (]: Began running node model.my_dbt_projects.adsk_cm_forecast_labor_costs_transform
[0m14:46:38.144535 [info ] [Thread-2 (]: 19 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_forecast_labor_costs .... [RUN]
[0m14:46:38.144788 [debug] [Thread-2 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_forecast_labor_costs_transform'
[0m14:46:38.144949 [debug] [Thread-2 (]: Began compiling node model.my_dbt_projects.adsk_cm_forecast_labor_costs_transform
[0m14:46:38.149207 [debug] [Thread-2 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_forecast_labor_costs_transform"
[0m14:46:38.149908 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_forecast_labor_costs_transform (compile): 2023-08-21 14:46:38.145030 => 2023-08-21 14:46:38.149880
[0m14:46:38.150002 [debug] [Thread-2 (]: Began executing node model.my_dbt_projects.adsk_cm_forecast_labor_costs_transform
[0m14:46:38.151877 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_forecast_labor_costs_transform"
[0m14:46:38.151957 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_forecast_labor_costs_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_forecast_labor_costs_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:38.152020 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m14:46:38.204505 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:38.205699 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_transform (execute): 2023-08-21 14:46:36.986979 => 2023-08-21 14:46:38.205675
[0m14:46:38.205810 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_transform: Close
[0m14:46:38.311741 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:38.312783 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_transform (execute): 2023-08-21 14:46:37.083230 => 2023-08-21 14:46:38.312758
[0m14:46:38.312896 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_transform: Close
[0m14:46:38.444914 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165ba7b50>]}
[0m14:46:38.445228 [info ] [Thread-3 (]: 17 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_forecast_chrg_rev_local_cur_v02  [[32mSUCCESS 1[0m in 1.47s]
[0m14:46:38.445402 [debug] [Thread-3 (]: Finished running node model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_local_cur_transform
[0m14:46:38.445530 [debug] [Thread-3 (]: Began running node model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_stacked_transform
[0m14:46:38.445786 [info ] [Thread-3 (]: 20 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_monthly_chrg_rev_local_cur_stacked  [RUN]
[0m14:46:38.446240 [debug] [Thread-3 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_stacked_transform'
[0m14:46:38.446372 [debug] [Thread-3 (]: Began compiling node model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_stacked_transform
[0m14:46:38.449958 [debug] [Thread-3 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_stacked_transform"
[0m14:46:38.450737 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_stacked_transform (compile): 2023-08-21 14:46:38.446436 => 2023-08-21 14:46:38.450683
[0m14:46:38.450891 [debug] [Thread-3 (]: Began executing node model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_stacked_transform
[0m14:46:38.453046 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_stacked_transform"
[0m14:46:38.453169 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_stacked_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:38.453245 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m14:46:38.576193 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x166186810>]}
[0m14:46:38.576520 [info ] [Thread-1 (]: 18 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_forecast_chrg_rev_v02  [[32mSUCCESS 1[0m in 1.50s]
[0m14:46:38.576696 [debug] [Thread-1 (]: Finished running node model.my_dbt_projects.adsk_cm_forecast_chrg_rev_v02_transform
[0m14:46:38.576824 [debug] [Thread-1 (]: Began running node model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_transform
[0m14:46:38.576946 [info ] [Thread-1 (]: 21 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_monthly_chrg_rev_local_cur  [RUN]
[0m14:46:38.577280 [debug] [Thread-1 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_transform'
[0m14:46:38.577367 [debug] [Thread-1 (]: Began compiling node model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_transform
[0m14:46:38.580329 [debug] [Thread-1 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_transform"
[0m14:46:38.580947 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_transform (compile): 2023-08-21 14:46:38.577420 => 2023-08-21 14:46:38.580924
[0m14:46:38.581033 [debug] [Thread-1 (]: Began executing node model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_transform
[0m14:46:38.584296 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_transform"
[0m14:46:38.584457 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:38.584549 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:46:38.967035 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:38.967901 [debug] [Thread-2 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_forecast_labor_costs_transform"
[0m14:46:38.979149 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_forecast_labor_costs_transform"
[0m14:46:38.979330 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_forecast_labor_costs_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_forecast_labor_costs_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_forecast_labor_costs
  
   as (
    
/* ADSK_FN_CM_FORECAST_LABOR_COSTS.sql
  @OverrideCurID   INT = NULL
  , @RangeBegin    DATETIME = NULL
  , @RangeEnd      DATETIME = NULL
  , @CutoverDate   DATETIME = NULL
  , @Placeholder05 INT = NULL
Use as pattern for FCURRQEXCHRATE join
*/
        SELECT 
            trplnbooking.projectid AS projectid
            , IFNULL(
                SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                             THEN (trplnbookingdetails.bookedseconds / 3600.00) * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_future
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                AND trplnbookingdetails.bookeddate < fnc_nextmonthbegins THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_currentmonth
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
                                   THEN (trplnbookingdetails.bookedseconds / 3600.00)
                    * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_futureqtrs
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
                AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_entirecurrentqtr
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_remaininginqtr
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
                AND trplnbookingdetails.bookeddate < fnc_plus2qtrbegins THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_plus1qtr
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus2qtrbegins
                AND trplnbookingdetails.bookeddate < fnc_plus3qtrbegins THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_plus2qtr
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus3qtrbegins
                AND trplnbookingdetails.bookeddate < fnc_plus4qtrbegins THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_plus3qtr
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus4qtrbegins
                                   THEN (trplnbookingdetails.bookedseconds / 3600.00)
                    * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_additionalqtrs
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_fcst_customrangebegin
                AND trplnbookingdetails.bookeddate < fnc_fcst_customrangeend THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_customrange
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                             THEN (trplnbookingdetails.bookedseconds / 3600.00) * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_future
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                        AND trplnbookingdetails.bookeddate < fnc_nextmonthbegins
                             THEN (trplnbookingdetails.bookedseconds / 3600.00) * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_currentmonth
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
                             THEN (trplnbookingdetails.bookedseconds / 3600.00) * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_futureqtrs
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
                        AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins
                             THEN (trplnbookingdetails.bookedseconds / 3600.00) * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_entirecurrentqtr
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                        AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins
                             THEN (trplnbookingdetails.bookedseconds / 3600.00) * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_remaininginqtr
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
                        AND trplnbookingdetails.bookeddate < fnc_plus2qtrbegins
                             THEN (trplnbookingdetails.bookedseconds / 3600.00) * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_plus1qtr
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus2qtrbegins
                        AND trplnbookingdetails.bookeddate < fnc_plus3qtrbegins
                             THEN (trplnbookingdetails.bookedseconds / 3600.00) * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_plus2qtr
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus3qtrbegins
                        AND trplnbookingdetails.bookeddate < fnc_plus4qtrbegins
                             THEN (trplnbookingdetails.bookedseconds / 3600.00) * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_plus3qtr
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus4qtrbegins
                             THEN (trplnbookingdetails.bookedseconds / 3600.00) * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_additionalqtrs
             , IFNULL(SUM(CASE WHEN trplnbooking.bookingobjecttype = 700
                AND trplnbookingdetails.bookeddate >= fnc_fcst_customrangebegin
                AND trplnbookingdetails.bookeddate < fnc_fcst_customrangeend THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_customrange
            -- All above include both hard-booked and soft-booked. Below includes only soft-booked hours.
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentmonthbegins AND trplnbooking.bookingtype = 2
                                   THEN (trplnbookingdetails.bookedseconds / 3600.00)
                    * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_future_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                AND trplnbookingdetails.bookeddate < fnc_nextmonthbegins AND trplnbooking.bookingtype = 2
                                   THEN (trplnbookingdetails.bookedseconds / 3600.00)
                    * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_currentmonth_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                                   THEN (trplnbookingdetails.bookedseconds / 3600.00)
                    * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_futureqtrs_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
                AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                                   THEN (trplnbookingdetails.bookedseconds / 3600.00)
                    * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_entirecurrentqtr_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                                   THEN (trplnbookingdetails.bookedseconds / 3600.00)
                    * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_remaininginqtr_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
                AND trplnbookingdetails.bookeddate < fnc_plus2qtrbegins AND trplnbooking.bookingtype = 2
                                   THEN (trplnbookingdetails.bookedseconds / 3600.00)
                    * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_plus1qtr_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus2qtrbegins
                AND trplnbookingdetails.bookeddate < fnc_plus3qtrbegins AND trplnbooking.bookingtype = 2
                                   THEN (trplnbookingdetails.bookedseconds / 3600.00)
                    * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_plus2qtr_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus3qtrbegins
                AND trplnbookingdetails.bookeddate < fnc_plus4qtrbegins AND trplnbooking.bookingtype = 2
                                   THEN (trplnbookingdetails.bookedseconds / 3600.00)
                    * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_plus3qtr_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus4qtrbegins AND trplnbooking.bookingtype = 2
                                   THEN (trplnbookingdetails.bookedseconds / 3600.00)
                    * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_additionalqtrs_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_fcst_customrangebegin
                AND trplnbookingdetails.bookeddate < fnc_fcst_customrangeend AND trplnbooking.bookingtype = 2
                                   THEN (trplnbookingdetails.bookedseconds / 3600.00)
                    * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_customrange_soft
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                        AND trplnbooking.bookingtype = 2 THEN (trplnbookingdetails.bookedseconds / 3600.00)
                        * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_future_soft
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                        AND trplnbookingdetails.bookeddate < fnc_nextmonthbegins AND trplnbooking.bookingtype = 2
                             THEN (trplnbookingdetails.bookedseconds / 3600.00) * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_currentmonth_soft
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
                        AND trplnbooking.bookingtype = 2 THEN (trplnbookingdetails.bookedseconds / 3600.00)
                        * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_futureqtrs_soft
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
                        AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                             THEN (trplnbookingdetails.bookedseconds / 3600.00) * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_entirecurrentqtr_soft
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                        AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                             THEN (trplnbookingdetails.bookedseconds / 3600.00) * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_remaininginqtr_soft
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
                        AND trplnbookingdetails.bookeddate < fnc_plus2qtrbegins AND trplnbooking.bookingtype = 2
                             THEN (trplnbookingdetails.bookedseconds / 3600.00) * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_plus1qtr_soft
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus2qtrbegins
                        AND trplnbookingdetails.bookeddate < fnc_plus3qtrbegins AND trplnbooking.bookingtype = 2
                             THEN (trplnbookingdetails.bookedseconds / 3600.00) * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_plus2qtr_soft
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus3qtrbegins
                        AND trplnbookingdetails.bookeddate < fnc_plus4qtrbegins AND trplnbooking.bookingtype = 2
                             THEN (trplnbookingdetails.bookedseconds / 3600.00) * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_plus3qtr_soft
             , IFNULL(
                SUM(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbookingdetails.bookeddate >= fnc_plus4qtrbegins
                        AND trplnbooking.bookingtype = 2 THEN (trplnbookingdetails.bookedseconds / 3600.00)
                        * forecast_labor_cost_rates.forecastcostrate
                         ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_additionalqtrs_soft
             , IFNULL(SUM(CASE WHEN trplnbooking.bookingobjecttype = 700
                AND trplnbookingdetails.bookeddate >= fnc_fcst_customrangebegin
                AND trplnbookingdetails.bookeddate < fnc_fcst_customrangeend AND trplnbooking.bookingtype = 2
                                   THEN (trplnbookingdetails.bookedseconds / 3600.00)
                    * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_gen_customrange_soft
            /* Soft-booked Billable costs */
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentmonthbegins AND trplnbooking.bookingtype = 2
                AND trplnbookingattributes.billable = 1 THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_billable_future_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                AND trplnbookingdetails.bookeddate < fnc_nextmonthbegins AND trplnbooking.bookingtype = 2
                AND trplnbookingattributes.billable = 1 THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_billable_currentmonth_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                AND trplnbookingattributes.billable = 1 THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_billable_futureqtrs_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentqtrbegins
                AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                AND trplnbookingattributes.billable = 1 THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_billable_entirecurrentqtr_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_currentmonthbegins
                AND trplnbookingdetails.bookeddate < fnc_plus1qtrbegins AND trplnbooking.bookingtype = 2
                AND trplnbookingattributes.billable = 1 THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_billable_remaininginqtr_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus1qtrbegins
                AND trplnbookingdetails.bookeddate < fnc_plus2qtrbegins AND trplnbooking.bookingtype = 2
                AND trplnbookingattributes.billable = 1 THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_billable_plus1qtr_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus2qtrbegins
                AND trplnbookingdetails.bookeddate < fnc_plus3qtrbegins AND trplnbooking.bookingtype = 2
                AND trplnbookingattributes.billable = 1 THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_billable_plus2qtr_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus3qtrbegins
                AND trplnbookingdetails.bookeddate < fnc_plus4qtrbegins AND trplnbooking.bookingtype = 2
                AND trplnbookingattributes.billable = 1 THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_billable_plus3qtr_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_plus4qtrbegins AND trplnbooking.bookingtype = 2
                AND trplnbookingattributes.billable = 1 THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_billable_additionalqtrs_soft
             , IFNULL(SUM(CASE WHEN trplnbookingdetails.bookeddate >= fnc_fcst_customrangebegin
                AND trplnbookingdetails.bookeddate < fnc_fcst_customrangeend AND trplnbooking.bookingtype = 2
                AND trplnbookingattributes.billable = 1 THEN (trplnbookingdetails.bookedseconds / 3600.00)
                * forecast_labor_cost_rates.forecastcostrate
                               ELSE 0.00 END * fxrate.rate), 0.00) AS fcstcostlabor_billable_customrange_soft
             , 12 AS sqlversion_forecast_labor_costs
        FROM eio_publish.tenrox_private.tproject tproject
        INNER JOIN eio_publish.tenrox_private.tclientinvoice tclientinvoice
            ON tclientinvoice.clientid = tproject.clientid 
        INNER JOIN eio_publish.tenrox_private.trplnbooking trplnbooking 
            ON tproject.uniqueid = trplnbooking.projectid
        INNER JOIN eio_publish.tenrox_private.trplnbookingdetails trplnbookingdetails 
            ON trplnbookingdetails.bookingid = trplnbooking.uniqueid 
        INNER JOIN eio_publish.tenrox_private.trplnbookingattributes trplnbookingattributes 
            ON trplnbookingattributes.bookingid = trplnbooking.uniqueid
        INNER JOIN eio_publish.tenrox_private.tprojectteamresource tprojectteamresource 
            ON tprojectteamresource.projectid = trplnbooking.projectid 
            AND tprojectteamresource.resourceid = CASE trplnbooking.bookingobjecttype WHEN 1 THEN trplnbooking.userid 
                                                                                        WHEN 700 THEN trplnbooking.roleid END
            AND tprojectteamresource.isrole = CASE trplnbooking.bookingobjecttype WHEN 700 THEN 1 ELSE 0 END
        LEFT JOIN
            eio_publish.tenrox_private.tuser tuser
            ON tuser.uniqueid = CASE tprojectteamresource.isrole WHEN 0 THEN tprojectteamresource.resourceid END
        LEFT JOIN eio_publish.tenrox_private.tplanningrole tplanningrole
            ON tplanningrole.uniqueid = CASE tprojectteamresource.isrole
                                            WHEN 1 THEN tprojectteamresource.resourceid END
        LEFT JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_forecast_labor_cost_rates
            AS forecast_labor_cost_rates
            ON forecast_labor_cost_rates.projectid = tproject.uniqueid
            AND forecast_labor_cost_rates.isrole = tprojectteamresource.isrole
            AND CASE forecast_labor_cost_rates.isrole
                WHEN 1
                THEN forecast_labor_cost_rates.roleid
                ELSE forecast_labor_cost_rates.userid END = tprojectteamresource.resourceid
        LEFT OUTER JOIN
            (
                SELECT IFNULL(uniqueid, 1) AS lubasecurrencyid
                FROM eio_publish.tenrox_private.tcurrency tcurrency
                WHERE currencycode = 'USD'
            ) basecur
        LEFT OUTER JOIN
            (
                -- Copying setup of @USDCurID value FROM CUST_ADSK_MARGINVARIANCE
                -- passed into adsk_cm_forecast_labor_costs AS parameter
                -- @OverrideCurID, OR always 1
                SELECT IFNULL(tcurrency.uniqueid, 1) AS overridecurid
                FROM eio_publish.tenrox_private.tcurrency tcurrency
                WHERE currencycode = 'USD'
            ) overridecurid
        LEFT OUTER JOIN
            EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate AS fxrate
            ON fxrate.basecurrencyid = lubasecurrencyid
            AND fxrate.quotecurrencyid
            = COALESCE(overridecurid, tclientinvoice.currencyid, lubasecurrencyid)  -- OVERRIDECURID was not included before, adding now
            AND trplnbookingdetails.bookeddate
            BETWEEN fxrate.startdate AND fxrate.enddate
        LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02 AS ranges
        -- ON TRPLNBOOKINGDETAILS.BOOKEDDATE = Ranges.Fnc_CurrentDate
        WHERE trplnbookingdetails.bookedseconds > 0
        GROUP BY trplnbooking.projectid
  );
[0m14:46:39.282643 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:39.283440 [debug] [Thread-1 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_transform"
[0m14:46:39.287238 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_transform"
[0m14:46:39.287353 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_chrg_rev_local_cur
  
   as (
    
/* ADSK_FN_CM_MONTHLY_CHRG_REV.sql
  @OverrideCurID   INT = NULL
  , @Placeholder02 INT = NULL
  , @Placeholder03 INT = NULL
  , @Placeholder04 INT = NULL
  , @Placeholder05 INT = NULL
*/

    SELECT
        CASE
           WHEN lower(parent_child.adsk_master_projecttype) in ( 'is parent' ) THEN
               ttask.projectid  
           WHEN lower(parent_child.adsk_master_projecttype) IN ( 'is master', 'is child' ) THEN
               parent_child.parentid 
           ELSE
               ttask.projectid
        END                                                                                                                               AS projectid
         , TRUNC(tchargeentry.currentdate, 'month')                                                                                       AS monthofchrgrev
         , SUM(IFNULL(CASE
                          WHEN tchargeentry.billable = 1 THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_allbillable
        -- 3rd Party-Billable Expenses     RecChrgRev_3rdBillableExp
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_3rdbillableexp
        -- 3rd Party-Non-Billable T&E      RecChrgRev_3rdNonBillTE
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_3rdnonbillte
        -- Internal-Billable Expenses      RecChrgRev_InternalBillableExp
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_internalbillableexp
        -- Internal-Non-Billable T&E       RecChrgRev_InternalNonBillTE
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_internalnonbillte
        -- Ratable Billing                 RecChrgRev_RatableBilling
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Ratable Billing' 
                          AND tchargeentry.billable = 1 THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_ratablebilling
        -- Sys Conv-Labor Non-Billable     RecChrgRev_SysConvNonBill
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_sysconvnonbill
        -- Sys Conv-Labor Revenue          RecChrgRev_SysConvLaborRev
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Sys Conv-Labor Revenue' 
                          AND tchargeentry.billable = 1 THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_sysconvlaborrev
        -- Autodesk IP Product-Sales       MonthsChrgRev_IPProdSales
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_ipprodsales
        -- Third Party Product-Sales       RecChrgRev_3rdProdSales
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_3rdprodsales
        -- SQL Script Version Information
         , 6                                                                                                                              AS sqlversion_monthly_chrg_rev
     FROM            eio_publish.tenrox_private.ttask ttask
     LEFT JOIN eio_publish.tenrox_private.tchargeentry tchargeentry
                  ON tchargeentry.taskid = ttask.uniqueid
                 AND tchargeentry.approved = 1
     INNER JOIN eio_publish.tenrox_private.tcharge tcharge
                  ON tcharge.uniqueid = tchargeentry.chargeid
     LEFT JOIN (
        SELECT  
            tproject.uniqueid AS projectid
            ,tproject.parentid as parentid
            ,LSTDESC_16.VALUE as adsk_master_projecttype
        
        FROM 
            eio_publish.tenrox_private.tproject  tproject
        LEFT JOIN eio_publish.tenrox_private.tprojectcustfld  a On a.PROJECTID = tproject.uniqueid
        LEFT JOIN eio_publish.tenrox_private.tcustlst AS LST_16  ON a.ADSK_MasterAgreement_ProjectType = LST_16.UNIQUEID 
        LEFT JOIN eio_publish.tenrox_private.tcustlstdesc AS LSTDESC_16  ON LST_16.UNIQUEID = LSTDESC_16.CUSTLSTID AND LSTDESC_16.LANGUAGE = 0
                ) parent_child ON parent_child.projectid = ttask.projectid
     LEFT OUTER JOIN (
                    SELECT
                        IFNULL(uniqueid, 1) AS lubasecurrencyid
                    FROM   eio_publish.tenrox_private.tcurrency tcurrency
                    WHERE  currencycode = 'USD') basecur
     -- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
     LEFT OUTER JOIN (
                    SELECT
                        IFNULL(uniqueid, 1) AS overridecurid
                    FROM   eio_publish.tenrox_private.tcurrency tcurrency
                    WHERE  currencycode = 'USD') usdcurid
     -- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
     LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate as fxrate
                ON fxrate.basecurrencyid = COALESCE(tchargeentry.currencyid, lubasecurrencyid)
                AND fxrate.quotecurrencyid = COALESCE(NULL, tchargeentry.clientcurrencyid, lubasecurrencyid)
                AND tchargeentry.currentdate BETWEEN fxrate.startdate AND fxrate.enddate
     WHERE      tcharge.chargetype = 'M'
     GROUP BY
      CASE
           WHEN lower(parent_child.adsk_master_projecttype) in ( 'is parent' ) THEN
               ttask.projectid  
           WHEN lower(parent_child.adsk_master_projecttype) IN ( 'is master', 'is child' ) THEN
               parent_child.parentid 
           ELSE
               ttask.projectid
       END
      , TRUNC(tchargeentry.currentdate, 'month')
  );
[0m14:46:39.296267 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:39.296923 [debug] [Thread-3 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_stacked_transform"
[0m14:46:39.302285 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_stacked_transform"
[0m14:46:39.302435 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_stacked_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_chrg_rev_local_cur_stacked
  
   as (
    



WITH date_range AS (
  SELECT YEAR(DATEADD(YEAR, -10, CURRENT_DATE())) || '-02-01' AS start_date,
         DATEADD(YEAR, 2, CURRENT_DATE()) AS end_date,
        DATEDIFF(DAY, start_date, end_date) + 1   AS rng
),
date_sequence AS (
SELECT DATEADD(DAY, seq4(), start_date) AS dt
FROM date_range,
     TABLE(GENERATOR(ROWCOUNT => 5000)) 
ORDER BY dt
  ),
projects AS (  
SELECT
distinct pd.PROJECTID
, TRUNC(ds.dt,'MONTH') as dt
FROM 
EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_details   pd
LEFT OUTER JOIN date_sequence ds

),

task AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.ttask
),
chargeentry AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.tchargeentry
),
charge AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.tcharge
),
project AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.tproject
),
projectcustfld AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.tprojectcustfld
),
custlst AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.tcustlst
),
custlstdesc AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.tcustlstdesc
),
adsk_month_q_ranges_v02 AS
(
    SELECT
    *
    FROM
    EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02
),
currency AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.tcurrency
),
fcurrqexchrate AS
(
    SELECT
    *
    FROM
    EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate
),

monthly_chrg_rev AS (

    SELECT
        CASE
           WHEN lower(parent_child.adsk_master_projecttype) in ( 'is parent' ) THEN
               ttask.projectid  
           WHEN lower(parent_child.adsk_master_projecttype) IN ( 'is master', 'is child' ) THEN
               parent_child.parentid 
           ELSE
               ttask.projectid
        END                                                                                                                              AS projectid
         , TRUNC(tchargeentry.currentdate, 'month')                                                                                      AS monthofchrgrev
         , SUM(IFNULL(CASE
                          WHEN tchargeentry.billable = 1 THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                             AS monthschrgrev_allbillable
        -- 3rd Party-Billable Expenses     RecChrgRev_3rdBillableExp
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                             AS monthschrgrev_3rdbillableexp
        -- 3rd Party-Non-Billable T&E      RecChrgRev_3rdNonBillTE
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                             AS monthschrgrev_3rdnonbillte
        -- Internal-Billable Expenses      RecChrgRev_InternalBillableExp
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                             AS monthschrgrev_internalbillableexp
        -- Internal-Non-Billable T&E       RecChrgRev_InternalNonBillTE
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                             AS monthschrgrev_internalnonbillte
        -- Ratable Billing                 RecChrgRev_RatableBilling
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Ratable Billing' 
                          AND tchargeentry.billable = 1 THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                             AS monthschrgrev_ratablebilling
        -- Sys Conv-Labor Non-Billable     RecChrgRev_SysConvNonBill
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                             AS monthschrgrev_sysconvnonbill
        -- Sys Conv-Labor Revenue          RecChrgRev_SysConvLaborRev
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Sys Conv-Labor Revenue' 
                          AND tchargeentry.billable = 1 THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                             AS monthschrgrev_sysconvlaborrev
        -- Autodesk IP Product-Sales       MonthsChrgRev_IPProdSales
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                             AS monthschrgrev_ipprodsales
        -- Third Party Product-Sales       RecChrgRev_3rdProdSales
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                             AS monthschrgrev_3rdprodsales
          ,
                CASE
                    WHEN
                        monthofchrgrev = fnc_currentqtrbegins 
                    THEN
                        monthschrgrev_internalbillableexp + monthschrgrev_3rdbillableexp 
                END
                                                                                                                                         AS  actual_charge_rev_month1
         ,
                CASE
                    WHEN
                        monthofchrgrev = fnc_currentqtrm2begins 
                    THEN
                        monthschrgrev_internalbillableexp + monthschrgrev_3rdbillableexp 
                END
                                                                                                                                        AS  actual_charge_rev_month2
         ,
                CASE
                    WHEN
                        monthofchrgrev = fnc_currentqtrm3begins 
                    THEN
                        monthschrgrev_internalbillableexp + monthschrgrev_3rdbillableexp 
                END
                                                                                                                                        AS  actual_charge_rev_month3     
     
        -- SQL Script Version Information
         , 6                                                                                                                            AS sqlversion_monthly_chrg_rev
     FROM   task AS ttask
     LEFT JOIN chargeentry AS tchargeentry
                  ON tchargeentry.taskid = ttask.uniqueid
                 AND tchargeentry.approved = 1
     INNER JOIN charge AS tcharge
                  ON tcharge.uniqueid = tchargeentry.chargeid
     LEFT JOIN (
        SELECT  
            tproject.uniqueid AS projectid
            ,tproject.parentid as parentid
            ,LSTDESC_16.VALUE as adsk_master_projecttype
        
        FROM 
            project AS  tproject
        LEFT JOIN projectcustfld  a On a.PROJECTID = tproject.uniqueid
        LEFT JOIN custlst AS LST_16  ON a.ADSK_MasterAgreement_ProjectType = LST_16.UNIQUEID 
        LEFT JOIN custlstdesc AS LSTDESC_16  ON LST_16.UNIQUEID = LSTDESC_16.CUSTLSTID AND LSTDESC_16.LANGUAGE = 0
                ) parent_child ON parent_child.projectid = ttask.projectid
     LEFT OUTER JOIN adsk_month_q_ranges_v02 AS ranges
     LEFT OUTER JOIN (
                    SELECT
                        IFNULL(uniqueid, 1) AS lubasecurrencyid
                    FROM   currency AS tcurrency
                    WHERE  currencycode = 'USD') basecur
     -- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
     LEFT OUTER JOIN (
                    SELECT
                        IFNULL(uniqueid, 1) AS overridecurid
                    FROM   currency AS tcurrency
                    WHERE  currencycode = 'USD') usdcurid
     -- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
     LEFT OUTER JOIN fcurrqexchrate as fxrate
                ON fxrate.basecurrencyid = COALESCE(tchargeentry.currencyid, lubasecurrencyid)
                AND fxrate.quotecurrencyid = COALESCE(NULL, tchargeentry.clientcurrencyid, lubasecurrencyid)
                AND tchargeentry.currentdate BETWEEN fxrate.startdate AND fxrate.enddate
     WHERE      tcharge.chargetype = 'M'

     GROUP BY
      CASE
           WHEN lower(parent_child.adsk_master_projecttype) in ( 'is parent' ) THEN
               ttask.projectid  
           WHEN lower(parent_child.adsk_master_projecttype) IN ( 'is master', 'is child' ) THEN
               parent_child.parentid 
           ELSE
               ttask.projectid
       END
      , TRUNC(tchargeentry.currentdate, 'month')
      
      ,fnc_currentqtrbegins
      ,fnc_currentqtrm2begins
      ,fnc_currentqtrm3begins
      
),

monthly_chrg_rev_final AS 
(
  SELECT 
  p.projectid
  ,p.dt
  ,m.monthschrgrev_allbillable
  ,m.monthschrgrev_3rdbillableexp
  ,m.monthschrgrev_3rdnonbillte
  ,m.monthschrgrev_internalbillableexp
  ,m.monthschrgrev_internalnonbillte
  ,m.monthschrgrev_ratablebilling
  ,m.monthschrgrev_sysconvnonbill
  ,m.monthschrgrev_sysconvlaborrev
  ,m.monthschrgrev_ipprodsales
  ,m.monthschrgrev_3rdprodsales
  ,m.actual_charge_rev_month1
  ,m.actual_charge_rev_month2
  ,m.actual_charge_rev_month3
  FROM projects p
  LEFT JOIN monthly_chrg_rev m ON m.projectid = p.projectid AND p.dt = m.monthofchrgrev

)






SELECT 
projectid AS projectid
,CASE
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 2 AND 4 THEN TO_DATE(EXTRACT(YEAR FROM   dt)||'-02-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 5 AND 7 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-05-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 8 AND 10 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-08-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 11 AND 12 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-11-01')
              ELSE TO_DATE(EXTRACT(YEAR FROM dt) - 1 ||'-11-01')
            END          AS dt
, SUM(monthschrgrev_allbillable) AS monthschrgrev_allbillable
, SUM(monthschrgrev_3rdbillableexp) AS monthschrgrev_3rdbillableexp
, SUM(monthschrgrev_3rdnonbillte) AS monthschrgrev_3rdnonbillte
, SUM(monthschrgrev_internalbillableexp) AS monthschrgrev_internalbillableexp
, SUM(monthschrgrev_internalnonbillte) AS monthschrgrev_internalnonbillte
, SUM(monthschrgrev_ratablebilling) AS monthschrgrev_ratablebilling
, SUM(monthschrgrev_sysconvnonbill) AS monthschrgrev_sysconvnonbill
, SUM(monthschrgrev_sysconvlaborrev) AS monthschrgrev_sysconvlaborrev
, SUM(monthschrgrev_ipprodsales) AS monthschrgrev_ipprodsales
, SUM(monthschrgrev_3rdprodsales) AS monthschrgrev_3rdprodsales
, SUM(actual_charge_rev_month1) AS actual_charge_rev_month1
, SUM(actual_charge_rev_month2) AS actual_charge_rev_month2
, SUM(actual_charge_rev_month3) AS actual_charge_rev_month3
FROM
monthly_chrg_rev_final

GROUP BY
projectid 
,CASE
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 2 AND 4 THEN TO_DATE(EXTRACT(YEAR FROM   dt)||'-02-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 5 AND 7 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-05-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 8 AND 10 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-08-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 11 AND 12 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-11-01')
              ELSE TO_DATE(EXTRACT(YEAR FROM dt) - 1 ||'-11-01')
END
  );
[0m14:46:39.449052 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:39.450089 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_forecast_labor_costs_transform (execute): 2023-08-21 14:46:38.150056 => 2023-08-21 14:46:39.450062
[0m14:46:39.450203 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_forecast_labor_costs_transform: Close
[0m14:46:39.601438 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:39.602459 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_transform (execute): 2023-08-21 14:46:38.581089 => 2023-08-21 14:46:39.602434
[0m14:46:39.602572 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_transform: Close
[0m14:46:39.693246 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165e34a90>]}
[0m14:46:39.693524 [info ] [Thread-2 (]: 19 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_forecast_labor_costs  [[32mSUCCESS 1[0m in 1.55s]
[0m14:46:39.693685 [debug] [Thread-2 (]: Finished running node model.my_dbt_projects.adsk_cm_forecast_labor_costs_transform
[0m14:46:39.693808 [debug] [Thread-2 (]: Began running node model.my_dbt_projects.adsk_cm_monthly_chrg_rev_transform
[0m14:46:39.693927 [info ] [Thread-2 (]: 22 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_monthly_chrg_rev ........ [RUN]
[0m14:46:39.694176 [debug] [Thread-2 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_monthly_chrg_rev_transform'
[0m14:46:39.694267 [debug] [Thread-2 (]: Began compiling node model.my_dbt_projects.adsk_cm_monthly_chrg_rev_transform
[0m14:46:39.697090 [debug] [Thread-2 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_transform"
[0m14:46:39.697796 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_chrg_rev_transform (compile): 2023-08-21 14:46:39.694364 => 2023-08-21 14:46:39.697758
[0m14:46:39.697920 [debug] [Thread-2 (]: Began executing node model.my_dbt_projects.adsk_cm_monthly_chrg_rev_transform
[0m14:46:39.699826 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_transform"
[0m14:46:39.699908 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_monthly_chrg_rev_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:39.699975 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m14:46:39.726926 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:39.727901 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_stacked_transform (execute): 2023-08-21 14:46:38.450959 => 2023-08-21 14:46:39.727880
[0m14:46:39.727994 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_stacked_transform: Close
[0m14:46:40.416367 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1661f84d0>]}
[0m14:46:40.416701 [info ] [Thread-1 (]: 21 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_monthly_chrg_rev_local_cur  [[32mSUCCESS 1[0m in 1.84s]
[0m14:46:40.416881 [debug] [Thread-1 (]: Finished running node model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_transform
[0m14:46:40.417014 [debug] [Thread-1 (]: Began running node model.my_dbt_projects.adsk_cm_monthly_rec_rev_local_cur_transform
[0m14:46:40.417252 [info ] [Thread-1 (]: 23 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_monthly_rec_local_cur_rev  [RUN]
[0m14:46:40.417659 [debug] [Thread-1 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_monthly_rec_rev_local_cur_transform'
[0m14:46:40.417781 [debug] [Thread-1 (]: Began compiling node model.my_dbt_projects.adsk_cm_monthly_rec_rev_local_cur_transform
[0m14:46:40.420616 [debug] [Thread-1 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_monthly_rec_rev_local_cur_transform"
[0m14:46:40.421814 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_rec_rev_local_cur_transform (compile): 2023-08-21 14:46:40.417850 => 2023-08-21 14:46:40.421771
[0m14:46:40.421962 [debug] [Thread-1 (]: Began executing node model.my_dbt_projects.adsk_cm_monthly_rec_rev_local_cur_transform
[0m14:46:40.424566 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_rec_rev_local_cur_transform"
[0m14:46:40.424976 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165f2b0d0>]}
[0m14:46:40.425076 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_monthly_rec_rev_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_rec_rev_local_cur_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:40.425265 [info ] [Thread-3 (]: 20 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_monthly_chrg_rev_local_cur_stacked  [[32mSUCCESS 1[0m in 1.98s]
[0m14:46:40.425380 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:46:40.425482 [debug] [Thread-3 (]: Finished running node model.my_dbt_projects.adsk_cm_monthly_chrg_rev_local_cur_stacked_transform
[0m14:46:40.426306 [debug] [Thread-3 (]: Began running node model.my_dbt_projects.adsk_cm_monthly_rec_rev_transform
[0m14:46:40.426587 [info ] [Thread-3 (]: 24 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_monthly_rec_rev ......... [RUN]
[0m14:46:40.427175 [debug] [Thread-3 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_monthly_rec_rev_transform'
[0m14:46:40.427458 [debug] [Thread-3 (]: Began compiling node model.my_dbt_projects.adsk_cm_monthly_rec_rev_transform
[0m14:46:40.430079 [debug] [Thread-3 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_monthly_rec_rev_transform"
[0m14:46:40.430965 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_rec_rev_transform (compile): 2023-08-21 14:46:40.427549 => 2023-08-21 14:46:40.430932
[0m14:46:40.431084 [debug] [Thread-3 (]: Began executing node model.my_dbt_projects.adsk_cm_monthly_rec_rev_transform
[0m14:46:40.433037 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_rec_rev_transform"
[0m14:46:40.433174 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_monthly_rec_rev_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_rec_rev_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:40.433244 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m14:46:40.648047 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:40.648895 [debug] [Thread-2 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_transform"
[0m14:46:40.651871 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_transform"
[0m14:46:40.651969 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_monthly_chrg_rev_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_chrg_rev_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_chrg_rev
  
   as (
    
/* ADSK_FN_CM_MONTHLY_CHRG_REV.sql
  @OverrideCurID   INT = NULL
  , @Placeholder02 INT = NULL
  , @Placeholder03 INT = NULL
  , @Placeholder04 INT = NULL
  , @Placeholder05 INT = NULL
*/

    SELECT
         ttask.projectid                                                                                                                  AS projectid
         , TRUNC(tchargeentry.currentdate, 'month')                                                                                       AS monthofchrgrev
         , SUM(IFNULL(CASE
                          WHEN tchargeentry.billable = 1 THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_allbillable
        -- 3rd Party-Billable Expenses     RecChrgRev_3rdBillableExp
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_3rdbillableexp
        -- 3rd Party-Non-Billable T&E      RecChrgRev_3rdNonBillTE
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_3rdnonbillte
        -- Internal-Billable Expenses      RecChrgRev_InternalBillableExp
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_internalbillableexp
        -- Internal-Non-Billable T&E       RecChrgRev_InternalNonBillTE
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_internalnonbillte
        -- Ratable Billing                 RecChrgRev_RatableBilling
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Ratable Billing' 
                          AND tchargeentry.billable = 1 THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_ratablebilling
        -- Sys Conv-Labor Non-Billable     RecChrgRev_SysConvNonBill
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_sysconvnonbill
        -- Sys Conv-Labor Revenue          RecChrgRev_SysConvLaborRev
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Sys Conv-Labor Revenue' 
                          AND tchargeentry.billable = 1 THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_sysconvlaborrev
        -- Autodesk IP Product-Sales       MonthsChrgRev_IPProdSales
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_ipprodsales
        -- Third Party Product-Sales       RecChrgRev_3rdProdSales
         , SUM(IFNULL(CASE
                          WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.billable = 1
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END,
                      0.00))                                                                                                              AS monthschrgrev_3rdprodsales
        -- SQL Script Version Information
         , 6                                                                                                                              AS sqlversion_monthly_chrg_rev
FROM eio_publish.tenrox_private.ttask ttask
LEFT JOIN
    eio_publish.tenrox_private.tchargeentry tchargeentry
    ON tchargeentry.taskid = ttask.uniqueid
    AND tchargeentry.approved = 1
INNER JOIN
    eio_publish.tenrox_private.tcharge tcharge
    ON tcharge.uniqueid = tchargeentry.chargeid
LEFT OUTER JOIN
    (
        SELECT IFNULL(uniqueid, 1) AS lubasecurrencyid
        FROM eio_publish.tenrox_private.tcurrency tcurrency
        WHERE currencycode = 'USD'
    ) basecur
-- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN
    (
        SELECT IFNULL(uniqueid, 1) AS overridecurid
        FROM eio_publish.tenrox_private.tcurrency tcurrency
        WHERE currencycode = 'USD'
    ) usdcurid
-- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN
    EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate AS fxrate
    ON fxrate.basecurrencyid = COALESCE(tchargeentry.currencyid, lubasecurrencyid)
    AND fxrate.quotecurrencyid
    = COALESCE(overridecurid, tchargeentry.clientcurrencyid, lubasecurrencyid)
    AND tchargeentry.currentdate BETWEEN fxrate.startdate AND fxrate.enddate
WHERE tcharge.chargetype = 'M'
GROUP BY ttask.projectid, TRUNC(tchargeentry.currentdate, 'month')
  );
[0m14:46:40.929368 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:40.931095 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_chrg_rev_transform (execute): 2023-08-21 14:46:39.697986 => 2023-08-21 14:46:40.931058
[0m14:46:40.931280 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_monthly_chrg_rev_transform: Close
[0m14:46:41.110457 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:41.111281 [debug] [Thread-1 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_monthly_rec_rev_local_cur_transform"
[0m14:46:41.113303 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_rec_rev_local_cur_transform"
[0m14:46:41.113398 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_monthly_rec_rev_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_rec_rev_local_cur_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_rec_local_cur_rev
  
   as (
    
/* ADSK_FN_CM_MONTHLY_REC_REV.sql
  @OverrideCurID   INT = NULL
  , @Placeholder01 DATETIME = NULL
  , @Placeholder02 DATETIME = NULL
  , @Placeholder03 INT = NULL
  , @Placeholder04 INT = NULL
*/

SELECT
    -- TOP 100 PERCENT   /* attempt to create an ordered view */
    CASE
           WHEN lower(LSTDESC_16.VALUE) in ( 'is parent' ) THEN
               tproject.uniqueid  
           WHEN lower(LSTDESC_16.VALUE) IN ( 'is master', 'is child' ) THEN
               tproject.parentid 
           ELSE
               tproject.uniqueid
       END                                                                     AS projectid
     , TRUNC(trecognizedrevenue.periodstartdate, 'month')                      AS monthrecognized
     , SUM(IFNULL(trecognizedrevenue.totalbasecurrency, 0.00)) * fxlookup.rate AS recognizedrevenue
     , IFNULL(lubasecurrencyid, 1)                                             AS sourcecurrencyid
     , IFNULL(overridecurid, 1)                                                AS destinationcurrencyid /*@OverrideCurID is just null all the way to ADSK_FN_CM_LABOR_REV_V02. Final CUST_ADSK_MARGINVARIANCE does not mention @OverrideCurID*/
     , 4                                                                       AS sqlversion_monthly_rec_rev
FROM eio_publish.tenrox_private.tproject tproject
LEFT JOIN eio_publish.tenrox_private.tprojectcustfld  a On a.PROJECTID = tproject.uniqueid
LEFT JOIN eio_publish.tenrox_private.tcustlst AS LST_16  ON a.ADSK_MasterAgreement_ProjectType = LST_16.UNIQUEID 
LEFT JOIN eio_publish.tenrox_private.tcustlstdesc AS LSTDESC_16  ON LST_16.UNIQUEID = LSTDESC_16.CUSTLSTID AND LSTDESC_16.LANGUAGE = 0
LEFT OUTER JOIN eio_publish.tenrox_private.trecognizedrevenue trecognizedrevenue
    ON trecognizedrevenue.projectid = tproject.uniqueid 
LEFT OUTER JOIN eio_publish.tenrox_private.tclient tclient 
    ON tclient.uniqueid = tproject.clientid 
LEFT OUTER JOIN eio_publish.tenrox_private.tclientinvoice tclientinvoice 
    ON tclient.uniqueid = tclientinvoice.clientid
LEFT OUTER JOIN     (SELECT
                        IFNULL(uniqueid, 1) AS lubasecurrencyid
                      FROM   eio_publish.tenrox_private.tcurrency
                      WHERE  currencycode = 'USD') basecur
-- start: copy setup from CUST_ADSK_MARGINVARIANCE @OverrideCurID / @USDCurID
LEFT OUTER JOIN     (SELECT
                        IFNULL(uniqueid, 1) AS overridecurid
                      FROM   eio_publish.tenrox_private.tcurrency
                      WHERE  currencycode = 'USD') usdcurid
-- end: copy setup from CUST_ADSK_MARGINVARIACNE @OverrideCurID / @USDCurID
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate as fxlookup
        ON fxlookup.basecurrencyid = lubasecurrencyid
        -- traced back to CUST_ADSK_MARGINVARIANCE where @OverrideCurID  = @USDCurID = 1 
        AND fxlookup.quotecurrencyid = COALESCE(NULL, tclientinvoice.currencyid, lubasecurrencyid)
        AND trecognizedrevenue.periodstartdate BETWEEN fxlookup.startdate AND fxlookup.enddate
GROUP BY
    CASE
           WHEN lower(LSTDESC_16.VALUE) in ( 'is parent' ) THEN
               tproject.uniqueid  
           WHEN lower(LSTDESC_16.VALUE) IN ( 'is master', 'is child' ) THEN
               tproject.parentid 
           ELSE
               tproject.uniqueid
       END
    , TRUNC(trecognizedrevenue.periodstartdate, 'month') 
    , IFNULL(lubasecurrencyid, 1)
    , IFNULL(overridecurid, 1)
    , fxlookup.rate
ORDER           BY
    projectid
    , TRUNC(trecognizedrevenue.periodstartdate, 'month')
  );
[0m14:46:41.142681 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:41.143456 [debug] [Thread-3 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_monthly_rec_rev_transform"
[0m14:46:41.145082 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_rec_rev_transform"
[0m14:46:41.145246 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_monthly_rec_rev_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_rec_rev_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_rec_rev
  
   as (
    
/* ADSK_FN_CM_MONTHLY_REC_REV.sql
  @OverrideCurID   INT = NULL
  , @Placeholder01 DATETIME = NULL
  , @Placeholder02 DATETIME = NULL
  , @Placeholder03 INT = NULL
  , @Placeholder04 INT = NULL
*/

SELECT
    -- TOP 100 PERCENT   /* attempt to create an ordered view */
    tproject.uniqueid                                                          AS projectid
     , trunc(trecognizedrevenue.periodstartdate, 'month')                      AS monthrecognized
     , SUM(IFNULL(trecognizedrevenue.totalbasecurrency, 0.00)) * fxlookup.rate AS recognizedrevenue
     , IFNULL(lubasecurrencyid, 1)                                             AS sourcecurrencyid
     , IFNULL(overridecurid, 1)                                                AS destinationcurrencyid /*@OverrideCurID is just null all the way to adsk_cm_labor_rev_v02. Final CUST_ADSK_MARGINVARIANCE does not mention @OverrideCurID*/
     , 4                                                                       AS sqlversion_monthly_rec_rev
FROM eio_publish.tenrox_private.tproject tproject
LEFT OUTER JOIN eio_publish.tenrox_private.trecognizedrevenue trecognizedrevenue
    ON trecognizedrevenue.projectid = tproject.uniqueid 
LEFT OUTER JOIN eio_publish.tenrox_private.tclient tclient 
    ON tclient.uniqueid = tproject.clientid 
LEFT OUTER JOIN eio_publish.tenrox_private.tclientinvoice tclientinvoice 
    ON tclient.uniqueid = tclientinvoice.clientid
LEFT OUTER JOIN     (SELECT
                        IFNULL(uniqueid, 1) AS lubasecurrencyid
                      FROM   eio_publish.tenrox_private.tcurrency
                      WHERE  currencycode = 'USD') basecur
-- start: copy setup from CUST_ADSK_MARGINVARIANCE @OverrideCurID / @USDCurID
LEFT OUTER JOIN     (SELECT
                        IFNULL(uniqueid, 1) AS overridecurid
                      FROM   eio_publish.tenrox_private.tcurrency
                      WHERE  currencycode = 'USD') usdcurid
-- end: copy setup from CUST_ADSK_MARGINVARIACNE @OverrideCurID / @USDCurID
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate AS fxlookup
        ON fxlookup.basecurrencyid = lubasecurrencyid
        -- traced back to CUST_ADSK_MARGINVARIANCE WHERE @OverrideCurID  = @USDCurID = 1 
        AND fxlookup.quotecurrencyid = COALESCE(overridecurid, tclientinvoice.currencyid, lubasecurrencyid)
        AND trecognizedrevenue.periodstartdate BETWEEN fxlookup.startdate AND fxlookup.enddate
GROUP BY
    tproject.uniqueid
    , trunc(trecognizedrevenue.periodstartdate, 'month')
    , IFNULL(lubasecurrencyid, 1)
    , IFNULL(overridecurid, 1)
    , fxlookup.rate
ORDER BY
    tproject.uniqueid
    , TRUNC(trecognizedrevenue.periodstartdate, 'month')
  );
[0m14:46:41.198090 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165fd2e10>]}
[0m14:46:41.198398 [info ] [Thread-2 (]: 22 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_monthly_chrg_rev ... [[32mSUCCESS 1[0m in 1.50s]
[0m14:46:41.198561 [debug] [Thread-2 (]: Finished running node model.my_dbt_projects.adsk_cm_monthly_chrg_rev_transform
[0m14:46:41.198680 [debug] [Thread-2 (]: Began running node model.my_dbt_projects.adsk_cm_project_budget_local_cur_transform
[0m14:46:41.198790 [info ] [Thread-2 (]: 25 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_project_budget_local_cur  [RUN]
[0m14:46:41.199160 [debug] [Thread-2 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_project_budget_local_cur_transform'
[0m14:46:41.199253 [debug] [Thread-2 (]: Began compiling node model.my_dbt_projects.adsk_cm_project_budget_local_cur_transform
[0m14:46:41.203452 [debug] [Thread-2 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_project_budget_local_cur_transform"
[0m14:46:41.204046 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_project_budget_local_cur_transform (compile): 2023-08-21 14:46:41.199308 => 2023-08-21 14:46:41.203998
[0m14:46:41.204158 [debug] [Thread-2 (]: Began executing node model.my_dbt_projects.adsk_cm_project_budget_local_cur_transform
[0m14:46:41.206652 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_project_budget_local_cur_transform"
[0m14:46:41.206732 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_project_budget_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_project_budget_local_cur_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:41.206796 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m14:46:41.420572 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:41.421526 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_rec_rev_transform (execute): 2023-08-21 14:46:40.431142 => 2023-08-21 14:46:41.421501
[0m14:46:41.421628 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_monthly_rec_rev_transform: Close
[0m14:46:41.423026 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:41.423815 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_rec_rev_local_cur_transform (execute): 2023-08-21 14:46:40.422029 => 2023-08-21 14:46:41.423799
[0m14:46:41.423914 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_monthly_rec_rev_local_cur_transform: Close
[0m14:46:41.668249 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165f291d0>]}
[0m14:46:41.668563 [info ] [Thread-3 (]: 24 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_monthly_rec_rev .... [[32mSUCCESS 1[0m in 1.24s]
[0m14:46:41.668732 [debug] [Thread-3 (]: Finished running node model.my_dbt_projects.adsk_cm_monthly_rec_rev_transform
[0m14:46:41.668861 [debug] [Thread-3 (]: Began running node model.my_dbt_projects.adsk_cm_project_budget_transform
[0m14:46:41.669067 [info ] [Thread-3 (]: 26 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_project_budget .......... [RUN]
[0m14:46:41.669438 [debug] [Thread-3 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_project_budget_transform'
[0m14:46:41.669555 [debug] [Thread-3 (]: Began compiling node model.my_dbt_projects.adsk_cm_project_budget_transform
[0m14:46:41.673476 [debug] [Thread-3 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_project_budget_transform"
[0m14:46:41.674217 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_project_budget_transform (compile): 2023-08-21 14:46:41.669622 => 2023-08-21 14:46:41.674177
[0m14:46:41.674359 [debug] [Thread-3 (]: Began executing node model.my_dbt_projects.adsk_cm_project_budget_transform
[0m14:46:41.676624 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_project_budget_transform"
[0m14:46:41.676719 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_project_budget_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_project_budget_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:41.676785 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m14:46:41.679043 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x166b47610>]}
[0m14:46:41.918005 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:41.919658 [debug] [Thread-2 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_project_budget_local_cur_transform"
[0m14:46:41.930153 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_project_budget_local_cur_transform"
[0m14:46:41.930325 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_project_budget_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_project_budget_local_cur_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_budget_local_cur
  
   as (
    
/* ADSK_FN_CM_PROJECT_BUDGET.sql 
@OverrideCurID INT

Referenced in:
ADSK_FN_CM_LABOR_REV_V02 -> refererd to only in CUST_ADSK_MARGINVARIANCE
ADSK_FN_CM_MONTHLY_EXPECT_LABOR_REV -> referenced to only in ADSK_FN_CM_MONTHLY_DEFERRED_REV which referred to in
     - ADSK_FN_CM_DEFERRED_REV which is referenced to only in ADSK_FN_CM_LABOR_REV_V02, which is only referenced to in CUST_ADSK_MARGINVARIANCE
     - CUST_ADSK_MARGINVARIANCE
ADSK_FN_CM_PROJECT_BUDGET_V02 as ALTER FUNCTION ONLY
CUST_ADSK_MARGINVARIANCE -> where @USDCURID = 1 and passed to this ADSK_FN_CM_PROJECT_BUDGET as @OverrideCurID
CUST_ADSK_SERVICESIMPACT_PROJECTDETAILS -> where 1 is passed to this ADSK_FN_CM_PROJECT_BUDGET as @OverrideCurID

@OverrideCurID = 1
*/
SELECT
    tproject.uniqueid AS projectid
     , SUM(CASE
                WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype IS NULL
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue / 3600
                 ELSE 0 END) AS baselinehrstotal
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype = 3
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue / 3600
               ELSE 0 END) AS baselinehrsbillable
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype = 4
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue / 3600
               ELSE 0 END) AS baselinehrsnonbillable
    --Budget Time/Hours - CURRENT
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype IS NULL
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue / 3600
               ELSE 0.00 END) AS currenthrstotal
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype = 3
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue / 3600
               ELSE 0.00 END) AS currenthrsbillable
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype = 4
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue / 3600
               ELSE 0.00 END) AS currenthrsnonbillable
    --Budget Costs - BASELINE
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype IS NULL
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinecosttotal
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinecostcharge
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 3
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinecostproduct
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 4
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinecosttime
    --Budget Costs - CURRENT
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype IS NULL
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentcosttotal
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentcostcharge
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 3
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentcostproduct
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 4
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentcosttime
    --Budget Billable - BASELINE
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype IS NULL
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinebillabletotal
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) - SUM(CASE
                                        WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                                                AND tcharge.name = 'Ratable Billing'
                                            THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                                        ELSE 0.00 END) AS baselinebillablecharge
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 3
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinebillableproduct
     , SUM(CASE
               WHEN (tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 4
                       AND tbudgetdetailentry.objectid IS NULL)
                   /* OR (TBUDGETDETAILENTRY.ENTRYTYPE = 3
                          AND TBUDGETDETAILENTRY.ENTRYSUBTYPE = 2
                          AND TCHARGE.NAME = 'Ratable Billing') */
                   THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinebillabletime
    --Budget Billable - CURRENT
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype IS NULL
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentbillabletotal
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) - SUM(CASE
                                        WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                                                AND tcharge.name = 'Ratable Billing'
                                            THEN tbudgetdetailentry.currentvalue * fxrate.rate
                                        ELSE 0.00 END) AS currentbillablecharge
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 3
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentbillableproduct
     , SUM(CASE
               WHEN (tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 4
                       AND tbudgetdetailentry.objectid IS NULL)
                   /* OR (TBUDGETDETAILENTRY.ENTRYTYPE = 3
                          AND TBUDGETDETAILENTRY.ENTRYSUBTYPE = 2
                          AND TCHARGE.NAME = 'Ratable Billing') */
                   THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentbillabletime
    --Budget Non-Billable - BASELINE
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype IS NULL
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinenonbillabletotal
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 2
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinenonbillablecharge
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 3
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinenonbillableproduct
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 4
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinenonbillabletime
    --Budget Non-Billable - CURRENT
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype IS NULL
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentnonbillabletotal
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 2
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentnonbillablecharge
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 3
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentnonbillableproduct
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 4
                       AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentnonbillabletime
    -- Breakouts
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = '3rd Party-Billable Expenses' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinecostcharge3rdbillableexp
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinecostcharge3rdnonbillablete
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Autodesk IP Product-Sales' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinecostchargeipproductsales
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Internal-Billable Expenses' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinecostchargeinternalbillableexp
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Internal-Non-Billable T&E' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinecostchargeinternalnonbillte
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Third Party Product-Costs' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinecostcharge3rdprodcosts
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Third Party Product-Sales' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinecostcharge3rdprodsales
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2 AND tcharge.name = 'Ratable Billing'
                   THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinecostchargeratablebilling
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = '3rd Party-Billable Expenses' THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentcostcharge3rdbillableexp
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentcostcharge3rdnonbillablete
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Autodesk IP Product-Sales' THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentcostchargeipproductsales
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Internal-Billable Expenses' THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentcostchargeinternalbillableexp
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Internal-Non-Billable T&E' THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentcostchargeinternalnonbillte
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Third Party Product-Costs' THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentcostcharge3rdprodcosts
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Third Party Product-Sales' THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentcostcharge3rdprodsales
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2 AND tcharge.name = 'Ratable Billing'
                   THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentcostchargeratablebilling
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = '3rd Party-Billable Expenses' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinebillablecharge3rdbillableexp
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinebillablecharge3rdnonbillablete
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Autodesk IP Product-Sales' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinebillablechargeipproductsales
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Internal-Billable Expenses' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinebillablechargeinternalbillableexp
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Internal-Non-Billable T&E' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinebillablechargeinternalnonbillte
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2 AND tcharge.name = 'Ratable Billing'
                   THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinebillablechargeratablebilling
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Third Party Product-Costs' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinebillablecharge3rdprodcosts
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Third Party Product-Sales' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
               ELSE 0.00 END) AS baselinebillablecharge3rdprodsales
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = '3rd Party-Billable Expenses' THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentbillablecharge3rdbillableexp
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentbillablecharge3rdnonbillablete
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Autodesk IP Product-Sales' THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentbillablechargeipproductsales
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Internal-Billable Expenses' THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentbillablechargeinternalbillableexp
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Internal-Non-Billable T&E' THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentbillablechargeinternalnonbillte
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2 AND tcharge.name = 'Ratable Billing'
                   THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentbillablechargeratablebilling
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Third Party Product-Costs' THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentbillablecharge3rdprodcosts
     , SUM(CASE
               WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                       AND tcharge.name = 'Third Party Product-Sales' THEN tbudgetdetailentry.currentvalue * fxrate.rate
               ELSE 0.00 END) AS currentbillablecharge3rdprodsales
     , 8 AS sqlversion_project_budget
FROM eio_publish.tenrox_private.tproject tproject
LEFT JOIN eio_publish.tenrox_private.tbudgetdetail tbudgetdetail
    ON tbudgetdetail.objectid = tproject.uniqueid 
LEFT JOIN eio_publish.tenrox_private.tbudgetdetaillist tbudgetdetaillist 
    ON tbudgetdetail.objecttype = 2 
    AND tbudgetdetail.uniqueid = tbudgetdetaillist.budgetdetailedid 
LEFT JOIN eio_publish.tenrox_private.tbudgetdetailentry tbudgetdetailentry 
    ON tbudgetdetaillist.uniqueid = tbudgetdetailentry.budgetdetailedlistid 
LEFT JOIN eio_publish.tenrox_private.tcharge tcharge 
    ON tcharge.uniqueid = tbudgetdetailentry.objectid 
LEFT JOIN eio_publish.tenrox_private.tclient tclient 
    ON tclient.uniqueid = tproject.clientid 
LEFT JOIN eio_publish.tenrox_private.tclientinvoice tclientinvoice 
    ON tclientinvoice.clientid = tclient.uniqueid
LEFT JOIN (
               SELECT
                   currencyid
               FROM eio_publish.tenrox_private.tsysdefs tsysdefs
               WHERE  uniqueid = 1
               ) basecurrency
LEFT OUTER JOIN (
               SELECT
                   IFNULL(uniqueid, 1) AS lubasecurrencyid
               FROM eio_publish.tenrox_private.tcurrency tcurrency
               WHERE  currencycode = 'USD'
               ) basecur
-- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN (
               SELECT
                    IFNULL(uniqueid, 1)      AS overridecurid
               FROM eio_publish.tenrox_private.tcurrency
               WHERE currencycode = 'USD'
               ) usdcurid
-- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate AS fxrate
    /*from original Tenrox Proc: FCURRQEXCHRATE
            WHERE dbo.TCURRASSOC.BASECURRENCYID=@PBASECURRID
                   AND dbo.TCURRASSOC.QUOTECURRENCYID=@PQUOTECURRID
                   AND @PDATE BETWEEN dbo.TCURRRATE.STARTDATE AND dbo.TCURRRATE.ENDDATE
          */
    ON fxrate.basecurrencyid = COALESCE(tclientinvoice.currencyid, tbudgetdetail.billcurrencyid, lubasecurrencyid) 
    -- traced back to final table CUST_ADSK_MARGINVARIANCE where @OverrideCurID  = @USDCurID = 1
    -- as well as final table CUST_ADSK_SERVICESIMPACT_PROJECTDETAILS where value passed = 1
    AND fxrate.quotecurrencyid = COALESCE(NULL, tclientinvoice.currencyid, tbudgetdetail.billcurrencyid, lubasecurrencyid) 
    AND CURRENT_DATE () BETWEEN fxrate.startdate AND fxrate.enddate
GROUP BY 
     tproject.uniqueid
  );
[0m14:46:42.272770 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:42.273795 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_project_budget_local_cur_transform (execute): 2023-08-21 14:46:41.204219 => 2023-08-21 14:46:42.273769
[0m14:46:42.273905 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_project_budget_local_cur_transform: Close
[0m14:46:42.289734 [info ] [Thread-1 (]: 23 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_monthly_rec_local_cur_rev  [[32mSUCCESS 1[0m in 1.26s]
[0m14:46:42.289954 [debug] [Thread-1 (]: Finished running node model.my_dbt_projects.adsk_cm_monthly_rec_rev_local_cur_transform
[0m14:46:42.290087 [debug] [Thread-1 (]: Began running node model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_stacked_transform
[0m14:46:42.290344 [info ] [Thread-1 (]: 27 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_rec_chrg_rev_local_cur_v02_stacked  [RUN]
[0m14:46:42.290634 [debug] [Thread-1 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_stacked_transform'
[0m14:46:42.290716 [debug] [Thread-1 (]: Began compiling node model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_stacked_transform
[0m14:46:42.293597 [debug] [Thread-1 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_stacked_transform"
[0m14:46:42.294288 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_stacked_transform (compile): 2023-08-21 14:46:42.290769 => 2023-08-21 14:46:42.294257
[0m14:46:42.294410 [debug] [Thread-1 (]: Began executing node model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_stacked_transform
[0m14:46:42.296236 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_stacked_transform"
[0m14:46:42.296319 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_stacked_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:42.296386 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:46:42.513272 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x16562fb90>]}
[0m14:46:42.513580 [info ] [Thread-2 (]: 25 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_project_budget_local_cur  [[32mSUCCESS 1[0m in 1.31s]
[0m14:46:42.513753 [debug] [Thread-2 (]: Finished running node model.my_dbt_projects.adsk_cm_project_budget_local_cur_transform
[0m14:46:42.513879 [debug] [Thread-2 (]: Began running node model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_transform
[0m14:46:42.513987 [info ] [Thread-2 (]: 28 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_rec_chrg_rev_local_cur_v02  [RUN]
[0m14:46:42.514236 [debug] [Thread-2 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_transform'
[0m14:46:42.514461 [debug] [Thread-2 (]: Began compiling node model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_transform
[0m14:46:42.519322 [debug] [Thread-2 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_transform"
[0m14:46:42.522031 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_transform (compile): 2023-08-21 14:46:42.514541 => 2023-08-21 14:46:42.521991
[0m14:46:42.522153 [debug] [Thread-2 (]: Began executing node model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_transform
[0m14:46:42.524176 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_transform"
[0m14:46:42.524264 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:42.524331 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m14:46:42.546700 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:42.547594 [debug] [Thread-3 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_project_budget_transform"
[0m14:46:42.558235 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_project_budget_transform"
[0m14:46:42.558442 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_project_budget_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_project_budget_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_budget
  
   as (
    
/* ADSK_FN_CM_PROJECT_BUDGET.sql 
@OverrideCurID INT

Referenced in:
ADSK_FN_CM_LABOR_REV_V02 -> refererd to only in CUST_ADSK_MARGINVARIANCE
ADSK_FN_CM_MONTHLY_EXPECT_LABOR_REV -> referenced to only in ADSK_FN_CM_MONTHLY_DEFERRED_REV which referred to in
     - ADSK_FN_CM_DEFERRED_REV which is referenced to only in ADSK_FN_CM_LABOR_REV_V02, which is only referenced to in CUST_ADSK_MARGINVARIANCE
     - CUST_ADSK_MARGINVARIANCE
ADSK_FN_CM_PROJECT_BUDGET_V02 as ALTER FUNCTION ONLY
CUST_ADSK_MARGINVARIANCE -> where @USDCURID = 1 and passed to this ADSK_FN_CM_PROJECT_BUDGET as @OverrideCurID
CUST_ADSK_SERVICESIMPACT_PROJECTDETAILS -> where 1 is passed to this ADSK_FN_CM_PROJECT_BUDGET as @OverrideCurID

@OverrideCurID = 1
*/
   SELECT 
        tproject.uniqueid AS projectid
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 1
            AND tbudgetdetailentry.entrysubtype IS NULL AND tbudgetdetailentry.objectid IS NULL
                                                        THEN tbudgetdetailentry.baselinevalue / 3600
                                                    ELSE 0 END) AS baselinehrstotal
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype = 3
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue / 3600
                    ELSE 0 END) AS baselinehrsbillable
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype = 4
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue / 3600
                    ELSE 0 END) AS baselinehrsnonbillable
        --budget time/hours - current
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype IS NULL
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue / 3600
                      ELSE 0.00 END) AS currenthrstotal
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 1
            AND tbudgetdetailentry.entrysubtype = 3 AND tbudgetdetailentry.objectid IS NULL
                                                                      THEN tbudgetdetailentry.currentvalue / 3600
                                                                  ELSE 0.00 END) AS currenthrsbillable
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype = 4
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue / 3600
                    ELSE 0.00 END) AS currenthrsnonbillable
        --budget costs - baseline
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype IS NULL
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                      ELSE 0.00 END) AS baselinecosttotal
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2
            AND tbudgetdetailentry.entrysubtype = 2 AND tbudgetdetailentry.objectid IS NULL
                                                                        THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                                                                    ELSE 0.00 END) AS baselinecostcharge
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 3
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostproduct
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 4
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecosttime
        --budget costs - current
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype IS NULL
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
                      ELSE 0.00 END) AS currentcosttotal
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2
            AND tbudgetdetailentry.entrysubtype = 2 AND tbudgetdetailentry.objectid IS NULL
                                                                       THEN tbudgetdetailentry.currentvalue * fxrate.rate
                                                                   ELSE 0.00 END) AS currentcostcharge
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 3
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostproduct
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 4
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcosttime
        --budget billable - baseline
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype IS NULL
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                      ELSE 0.00 END) AS baselinebillabletotal
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3
            AND tbudgetdetailentry.entrysubtype = 2 AND tbudgetdetailentry.objectid IS NULL
                                                                            THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                                                                        ELSE 0.00 END)
            - SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                AND tcharge.name = 'Ratable Billing' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                       ELSE 0.00 END) AS baselinebillablecharge
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 3
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillableproduct
         , SUM(CASE WHEN (tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 4
            AND tbudgetdetailentry.objectid IS NULL)
                        /* OR (TBUDGETDETAILENTRY.ENTRYTYPE = 3
                               AND TBUDGETDETAILENTRY.ENTRYSUBTYPE = 2
                               AND TCHARGE.NAME = 'Ratable Billing') */
                        THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillabletime
        --budget billable - current
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype IS NULL
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
                      ELSE 0.00 END) AS currentbillabletotal
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3
            AND tbudgetdetailentry.entrysubtype = 2 AND tbudgetdetailentry.objectid IS NULL
                                                                           THEN tbudgetdetailentry.currentvalue * fxrate.rate
                                                                       ELSE 0.00 END)
            - SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                AND tcharge.name = 'Ratable Billing' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                       ELSE 0.00 END) AS currentbillablecharge
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 3
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillableproduct
         , SUM(CASE WHEN (tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 4
            AND tbudgetdetailentry.objectid IS NULL)
                        /* OR (TBUDGETDETAILENTRY.ENTRYTYPE = 3
                               AND TBUDGETDETAILENTRY.ENTRYSUBTYPE = 2
                               AND TCHARGE.NAME = 'Ratable Billing') */
                        THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillabletime
        --budget non-billable - baseline
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype IS NULL
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                      ELSE 0.00 END) AS baselinenonbillabletotal
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 4
            AND tbudgetdetailentry.entrysubtype = 2 AND tbudgetdetailentry.objectid IS NULL
                                                                               THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                                                                           ELSE 0.00 END) AS baselinenonbillablecharge
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 3
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinenonbillableproduct
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 4
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinenonbillabletime
        --budget non-billable - current
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype IS NULL
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
                      ELSE 0.00 END) AS currentnonbillabletotal
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 4
            AND tbudgetdetailentry.entrysubtype = 2 AND tbudgetdetailentry.objectid IS NULL
                                                                              THEN tbudgetdetailentry.currentvalue * fxrate.rate
                                                                          ELSE 0.00 END) AS currentnonbillablecharge
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 3
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentnonbillableproduct
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 4
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentnonbillabletime
        -- Breakouts
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = '3rd Party-Billable Expenses' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostcharge3rdbillableexp
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostcharge3rdnonbillablete
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Autodesk IP Product-Sales' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostchargeipproductsales
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Internal-Billable Expenses' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostchargeinternalbillableexp
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Internal-Non-Billable T&E' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostchargeinternalnonbillte
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Third Party Product-Costs' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostcharge3rdprodcosts
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Third Party Product-Sales' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostcharge3rdprodsales
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Ratable Billing' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostchargeratablebilling
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = '3rd Party-Billable Expenses' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostcharge3rdbillableexp
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostcharge3rdnonbillablete
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Autodesk IP Product-Sales' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostchargeipproductsales
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Internal-Billable Expenses' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostchargeinternalbillableexp
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Internal-Non-Billable T&E' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostchargeinternalnonbillte
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Third Party Product-Costs' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostcharge3rdprodcosts
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Third Party Product-Sales' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostcharge3rdprodsales
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Ratable Billing' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostchargeratablebilling
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = '3rd Party-Billable Expenses' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillablecharge3rdbillableexp
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillablecharge3rdnonbillablete
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Autodesk IP Product-Sales' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillablechargeipproductsales
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Internal-Billable Expenses' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillablechargeinternalbillableexp
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Internal-Non-Billable T&E' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillablechargeinternalnonbillte
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Ratable Billing' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillablechargeratablebilling
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Third Party Product-Costs' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillablecharge3rdprodcosts
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Third Party Product-Sales' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillablecharge3rdprodsales
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = '3rd Party-Billable Expenses' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillablecharge3rdbillableexp
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillablecharge3rdnonbillablete
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Autodesk IP Product-Sales' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillablechargeipproductsales
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Internal-Billable Expenses' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillablechargeinternalbillableexp
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Internal-Non-Billable T&E' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillablechargeinternalnonbillte
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Ratable Billing' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillablechargeratablebilling
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Third Party Product-Costs' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillablecharge3rdprodcosts
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Third Party Product-Sales' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillablecharge3rdprodsales
         , 8 AS sqlversion_project_budget
    FROM eio_publish.tenrox_private.tproject tproject
    LEFT JOIN eio_publish.tenrox_private.tbudgetdetail tbudgetdetail ON tbudgetdetail.objectid = tproject.uniqueid
    LEFT JOIN
        eio_publish.tenrox_private.tbudgetdetaillist tbudgetdetaillist
        ON tbudgetdetail.objecttype = 2
        AND tbudgetdetail.uniqueid = tbudgetdetaillist.budgetdetailedid
    LEFT JOIN
        eio_publish.tenrox_private.tbudgetdetailentry tbudgetdetailentry
        ON tbudgetdetaillist.uniqueid = tbudgetdetailentry.budgetdetailedlistid
    LEFT JOIN eio_publish.tenrox_private.tcharge tcharge ON tcharge.uniqueid = tbudgetdetailentry.objectid
    LEFT JOIN eio_publish.tenrox_private.tclient tclient ON tclient.uniqueid = tproject.clientid
    LEFT JOIN eio_publish.tenrox_private.tclientinvoice tclientinvoice ON tclientinvoice.clientid = tclient.uniqueid
    LEFT JOIN (SELECT currencyid FROM eio_publish.tenrox_private.tsysdefs tsysdefs WHERE uniqueid = 1) basecurrency
    LEFT OUTER JOIN
        (
            SELECT IFNULL(uniqueid, 1) AS lubasecurrencyid
            FROM eio_publish.tenrox_private.tcurrency tcurrency
            WHERE currencycode = 'USD'
        ) basecur
    -- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
    LEFT OUTER JOIN
        (
            SELECT IFNULL(uniqueid, 1) AS overridecurid
            FROM eio_publish.tenrox_private.tcurrency
            WHERE currencycode = 'USD'
        ) usdcurid
    -- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
    LEFT OUTER JOIN
        EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate AS fxrate
        /*from original Tenrox Proc: FCURRQEXCHRATE
                     WHERE dbo.TCURRASSOC.BASECURRENCYID=@PBASECURRID
                            AND dbo.TCURRASSOC.QUOTECURRENCYID=@PQUOTECURRID
                            AND @PDATE BETWEEN dbo.TCURRRATE.STARTDATE AND dbo.TCURRRATE.ENDDATE 
                   */
        ON fxrate.basecurrencyid = COALESCE(tclientinvoice.currencyid, tbudgetdetail.billcurrencyid, lubasecurrencyid)
        -- traced back to final table CUST_ADSK_MARGINVARIANCE WHERE @OverrideCurID  = @USDCurID = 1 
        -- AS well AS final table CUST_ADSK_SERVICESIMPACT_PROJECTDETAILS WHERE value passed = 1
        AND fxrate.quotecurrencyid
        = COALESCE(overridecurid, tclientinvoice.currencyid, tbudgetdetail.billcurrencyid, lubasecurrencyid)
        AND CURRENT_DATE() BETWEEN fxrate.startdate AND fxrate.enddate
    GROUP BY tproject.uniqueid
  );
[0m14:46:42.945409 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:42.946470 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_project_budget_transform (execute): 2023-08-21 14:46:41.674429 => 2023-08-21 14:46:42.946440
[0m14:46:42.946606 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_project_budget_transform: Close
[0m14:46:42.997052 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:42.997902 [debug] [Thread-1 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_stacked_transform"
[0m14:46:43.002362 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_stacked_transform"
[0m14:46:43.002492 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_stacked_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_rec_chrg_rev_local_cur_v02_stacked
  
   as (
    


WITH date_range AS (
  SELECT YEAR(DATEADD(YEAR, -10, CURRENT_DATE())) || '-02-01' AS start_date,
         DATEADD(YEAR, 2, CURRENT_DATE()) AS end_date,
        DATEDIFF(DAY, start_date, end_date) + 1   AS rng
),
date_sequence AS (
SELECT DATEADD(DAY, seq4(), start_date) AS dt
FROM date_range,
     TABLE(GENERATOR(ROWCOUNT => 5000)) 
ORDER BY dt
  ),
projects AS (  
SELECT
DISTINCT pd.PROJECTID
, ds.dt
FROM 
EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_details   pd
LEFT OUTER JOIN date_sequence ds
),
project AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.tproject
),

task AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.ttask
),

chargeentry AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.tchargeentry
),

charge AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.tcharge
),

adsk_month_q_ranges_v02 AS
(
    SELECT
    *
    FROM
    EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02
),
currency AS
(
    SELECT
    *
    FROM
    eio_publish.tenrox_private.tcurrency
),
fcurrqexchrate AS
(
    SELECT
    *
    FROM
    EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate
),
rec_chrg_rev AS (
SELECT
     tproject.uniqueid AS projectid
     , tchargeentry.currentdate as dt
     , SUM(IFNULL(CASE
                      WHEN tcharge.billable = 1 THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                    ELSE 0.00
                    END, 0.00)) AS recchrgrev_allbillable

    -- 3rd Party-Billable Expenses     RecChrgRev_3rdBillableExp
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Billable Expenses' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdbillableexp
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdbillableexp_pastqtrs

    -- 3rd Party-Non-Billable T&E      RecChrgRev_3rdNonBillTE
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Non-Billable T&E' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdnonbillte

    -- Internal-Billable Expenses      RecChrgRev_InternalBillableExp
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Billable Expenses' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalbillableexp
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalbillableexp_pastqtrs

    -- Internal-Non-Billable T&E       RecChrgRev_InternalNonBillTE
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Non-Billable T&E' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalnonbillte

    -- Ratable Billing                 RecChrgRev_RatableBilling
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Ratable Billing' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ratablebilling

    -- Sys Conv-Labor Non-Billable     RecChrgRev_SysConvNonBill
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvnonbill

    -- Sys Conv-Labor Revenue          RecChrgRev_SysConvLaborRev
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Revenue' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvlaborrev

    -- Autodesk IP Product-Sales       RecChrgRev_IPProdSales
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Autodesk IP Product-Sales' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ipprodsales

    -- Third Party Product-Sales       RecChrgRev_3rdProdSales
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Third Party Product-Sales' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdprodsales

     , MAX(fnc_hist_customrangebegin) AS recchrgrev_customrangebegin, MAX(fnc_hist_customrangeend) AS recchrgrev_customrangeend
     , 8 AS sqlversion_rec_chrg_rev
FROM project AS tproject
LEFT JOIN task AS ttask
ON ttask.projectid = tproject.uniqueid
LEFT JOIN chargeentry AS tchargeentry
    ON tchargeentry.taskid = ttask.uniqueid
    AND tchargeentry.approved = 1
INNER JOIN charge AS tcharge 
    ON tcharge.uniqueid = tchargeentry.chargeid 
    AND tcharge.chargetype = 'M'
LEFT OUTER JOIN adsk_month_q_ranges_v02 AS ranges
LEFT OUTER JOIN (SELECT
                   IFNULL(uniqueid, 1) AS lubasecurrencyid
                 FROM   currency AS tcurrency
                 WHERE  currencycode = 'USD') basecur
-- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN (
               SELECT
                   IFNULL(uniqueid, 1) AS overridecurid
               FROM   currency AS tcurrency
               WHERE  currencycode = 'USD') usdcurid
-- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN fcurrqexchrate AS fxrate
    ON fxrate.basecurrencyid = COALESCE(tchargeentry.currencyid, lubasecurrencyid)
    -- traced back to final table CUST_ADSK_MARGINVARIANCE where @OverrideCurID = @USDCurID = 1
    AND fxrate.quotecurrencyid = COALESCE(NULL, tchargeentry.clientcurrencyid, lubasecurrencyid) 
    AND tchargeentry.currentdate BETWEEN fxrate.startdate AND fxrate.enddate
GROUP BY
    tproject.uniqueid
  ,tchargeentry.currentdate
  ),
  
rec_chrg_rev_final AS 
(
  SELECT
  p.projectid
  ,p.dt
  ,r.recchrgrev_allbillable
  ,r.recchrgrev_3rdbillableexp
  ,r.recchrgrev_3rdbillableexp_pastqtrs
  ,r.recchrgrev_3rdnonbillte
  ,r.recchrgrev_internalbillableexp
  ,r.recchrgrev_internalbillableexp_pastqtrs
  ,r.recchrgrev_internalnonbillte
  ,r.recchrgrev_ratablebilling
  ,r.recchrgrev_sysconvnonbill
  ,r.recchrgrev_sysconvlaborrev
  ,r.recchrgrev_ipprodsales
  ,r.recchrgrev_3rdprodsales
  FROM 
  projects p
  LEFT JOIN  rec_chrg_rev r ON p.projectid = r.projectid and p.dt = r.dt
  
)
  
  SELECT
  projectid AS projectid
  ,CASE
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 2 AND 4 THEN TO_DATE(EXTRACT(YEAR FROM   dt)||'-02-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 5 AND 7 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-05-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 8 AND 10 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-08-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 11 AND 12 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-11-01')
              ELSE TO_DATE(EXTRACT(YEAR FROM dt) - 1 ||'-11-01')
            END                                                                                           AS dt
  ,SUM(recchrgrev_allbillable) AS recchrgrev_allbillable
  ,SUM(recchrgrev_3rdbillableexp) AS recchrgrev_3rdbillableexp
  ,SUM(recchrgrev_3rdbillableexp_pastqtrs) AS recchrgrev_3rdbillableexp_pastqtrs
  ,SUM(recchrgrev_3rdnonbillte) AS recchrgrev_3rdnonbillte
  ,SUM(recchrgrev_internalbillableexp) AS recchrgrev_internalbillableexp
  ,SUM(recchrgrev_internalbillableexp_pastqtrs) AS recchrgrev_internalbillableexp_pastqtrs
  ,SUM(recchrgrev_internalnonbillte) AS recchrgrev_internalnonbillte
  ,SUM(recchrgrev_ratablebilling) AS recchrgrev_ratablebilling
  ,SUM(recchrgrev_sysconvnonbill) AS recchrgrev_sysconvnonbill
  ,SUM(recchrgrev_sysconvlaborrev) AS recchrgrev_sysconvlaborrev
  ,SUM(recchrgrev_ipprodsales) AS recchrgrev_ipprodsales
  ,SUM(recchrgrev_3rdprodsales) AS recchrgrev_3rdprodsales
  FROM
 rec_chrg_rev_final
  GROUP BY
  projectid 
  ,CASE
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 2 AND 4 THEN TO_DATE(EXTRACT(YEAR FROM   dt)||'-02-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 5 AND 7 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-05-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 8 AND 10 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-08-01')
              WHEN EXTRACT(MONTH FROM dt) BETWEEN 11 AND 12 THEN TO_DATE(EXTRACT(YEAR FROM dt)||'-11-01')
              ELSE TO_DATE(EXTRACT(YEAR FROM dt) - 1 ||'-11-01')
            END
  );
[0m14:46:43.213459 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x16670fc50>]}
[0m14:46:43.213793 [info ] [Thread-3 (]: 26 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_project_budget ..... [[32mSUCCESS 1[0m in 1.54s]
[0m14:46:43.213961 [debug] [Thread-3 (]: Finished running node model.my_dbt_projects.adsk_cm_project_budget_transform
[0m14:46:43.214091 [debug] [Thread-3 (]: Began running node model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_transform
[0m14:46:43.214373 [info ] [Thread-3 (]: 29 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_rec_chrg_rev_v02 ........ [RUN]
[0m14:46:43.214773 [debug] [Thread-3 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_transform'
[0m14:46:43.214882 [debug] [Thread-3 (]: Began compiling node model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_transform
[0m14:46:43.219393 [debug] [Thread-3 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_transform"
[0m14:46:43.220032 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_transform (compile): 2023-08-21 14:46:43.214945 => 2023-08-21 14:46:43.219992
[0m14:46:43.220161 [debug] [Thread-3 (]: Began executing node model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_transform
[0m14:46:43.222199 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_transform"
[0m14:46:43.222299 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:43.222370 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m14:46:43.282228 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:43.283093 [debug] [Thread-2 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_transform"
[0m14:46:43.300379 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_transform"
[0m14:46:43.300553 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_rec_chrg_rev_local_cur_v02
  
   as (
    
/* ADSK_FN_CM_REC_CHRG_REV_V02
  @OverrideCurID   INT
  , @RangeBegin    DATETIME = NULL
  , @RangeEnd      DATETIME = NULL
  , @CutoverDate   DATETIME = NULL
  , @Placeholder05 INT = NULL
*/
SELECT
     tproject.uniqueid AS projectid
     , SUM(IFNULL(CASE
                      WHEN tcharge.billable = 1 THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                    ELSE 0.00
                    END, 0.00)) AS recchrgrev_allbillable_all
     , SUM(IFNULL(CASE
                      WHEN tcharge.billable = 1 AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_allbillable_past
     , SUM(IFNULL(CASE
                      WHEN tcharge.billable = 1 AND tchargeentry.currentdate >= fnc_currentmonthbegins
                              AND tchargeentry.currentdate < fnc_nextmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_allbillable_currentmonth
     , SUM(IFNULL(CASE
                      WHEN tcharge.billable = 1 AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_allbillable_pastqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.billable = 1 AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_allbillable_entirecurrentqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.billable = 1 AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_allbillable_completedinqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.billable = 1 AND tchargeentry.currentdate >= fnc_minus1qtrbegins
                              AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_allbillable_minus1qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.billable = 1 AND tchargeentry.currentdate >= fnc_minus2qtrbegins
                              AND tchargeentry.currentdate < fnc_minus1qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_allbillable_minus2qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.billable = 1 AND tchargeentry.currentdate >= fnc_minus3qtrbegins
                              AND tchargeentry.currentdate < fnc_minus2qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_allbillable_minus3qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.billable = 1 AND tchargeentry.currentdate < fnc_minus3qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_allbillable_priorqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.billable = 1 AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                              AND tchargeentry.currentdate < fnc_hist_customrangeend
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_allbillable_customrange
    -- 3rd Party-Billable Expenses     RecChrgRev_3rdBillableExp
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Billable Expenses' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdbillableexp_all
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdbillableexp_past
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate >= fnc_currentmonthbegins
                              AND tchargeentry.currentdate < fnc_nextmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdbillableexp_currentmonth
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdbillableexp_pastqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdbillableexp_entirecurrentqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdbillableexp_completedinqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
                              AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdbillableexp_minus1qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
                              AND tchargeentry.currentdate < fnc_minus1qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdbillableexp_minus2qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
                              AND tchargeentry.currentdate < fnc_minus2qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdbillableexp_minus3qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdbillableexp_priorqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                              AND tchargeentry.currentdate < fnc_hist_customrangeend
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdbillableexp_customrange
    -- 3rd Party-Non-Billable T&E      RecChrgRev_3rdNonBillTE
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Non-Billable T&E' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdnonbillte_all
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdnonbillte_past
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_currentmonthbegins
                              AND tchargeentry.currentdate < fnc_nextmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdnonbillte_currentmonth
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdnonbillte_pastqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdnonbillte_entirecurrentqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdnonbillte_completedinqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
                              AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdnonbillte_minus1qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
                              AND tchargeentry.currentdate < fnc_minus1qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdnonbillte_minus2qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
                              AND tchargeentry.currentdate < fnc_minus2qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdnonbillte_minus3qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdnonbillte_priorqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                              AND tchargeentry.currentdate < fnc_hist_customrangeend
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdnonbillte_customrange
    -- Internal-Billable Expenses      RecChrgRev_InternalBillableExp
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Billable Expenses' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalbillableexp_all
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalbillableexp_past
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate >= fnc_currentmonthbegins
                              AND tchargeentry.currentdate < fnc_nextmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalbillableexp_currentmonth
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalbillableexp_pastqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalbillableexp_entirecurrentqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalbillableexp_completedinqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
                              AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalbillableexp_minus1qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
                              AND tchargeentry.currentdate < fnc_minus1qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalbillableexp_minus2qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
                              AND tchargeentry.currentdate < fnc_minus2qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalbillableexp_minus3qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalbillableexp_priorqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                              AND tchargeentry.currentdate < fnc_hist_customrangeend
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalbillableexp_customrange
    -- Internal-Non-Billable T&E       RecChrgRev_InternalNonBillTE
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Non-Billable T&E' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalnonbillte_all
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalnonbillte_past
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_currentmonthbegins
                              AND tchargeentry.currentdate < fnc_nextmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalnonbillte_currentmonth
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalnonbillte_pastqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalnonbillte_entirecurrentqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalnonbillte_completedinqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
                              AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalnonbillte_minus1qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
                              AND tchargeentry.currentdate < fnc_minus1qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalnonbillte_minus2qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
                              AND tchargeentry.currentdate < fnc_minus2qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalnonbillte_minus3qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalnonbillte_priorqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                              AND tchargeentry.currentdate < fnc_hist_customrangeend
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_internalnonbillte_customrange
    -- Ratable Billing                 RecChrgRev_RatableBilling
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Ratable Billing' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ratablebilling_all
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ratablebilling_past
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate >= fnc_currentmonthbegins
                              AND tchargeentry.currentdate < fnc_nextmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ratablebilling_currentmonth
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ratablebilling_pastqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ratablebilling_entirecurrentqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ratablebilling_completedinqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
                              AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ratablebilling_minus1qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
                              AND tchargeentry.currentdate < fnc_minus1qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ratablebilling_minus2qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
                              AND tchargeentry.currentdate < fnc_minus2qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ratablebilling_minus3qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ratablebilling_priorqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                              AND tchargeentry.currentdate < fnc_hist_customrangeend
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ratablebilling_customrange
    -- Sys Conv-Labor Non-Billable     RecChrgRev_SysConvNonBill
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvnonbill_all
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvnonbill_past
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate >= fnc_currentmonthbegins
                              AND tchargeentry.currentdate < fnc_nextmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvnonbill_currentmonth
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvnonbill_pastqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvnonbill_entirecurrentqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvnonbill_completedinqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
                              AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvnonbill_minus1qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
                              AND tchargeentry.currentdate < fnc_minus1qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvnonbill_minus2qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
                              AND tchargeentry.currentdate < fnc_minus2qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvnonbill_minus3qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvnonbill_priorqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                              AND tchargeentry.currentdate < fnc_hist_customrangeend
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvnonbill_customrange
    -- Sys Conv-Labor Revenue          RecChrgRev_SysConvLaborRev
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Revenue' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvlaborrev_all
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvlaborrev_past
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate >= fnc_currentmonthbegins
                              AND tchargeentry.currentdate < fnc_nextmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvlaborrev_currentmonth
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvlaborrev_pastqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvlaborrev_entirecurrentqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvlaborrev_completedinqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
                              AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvlaborrev_minus1qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
                              AND tchargeentry.currentdate < fnc_minus1qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvlaborrev_minus2qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
                              AND tchargeentry.currentdate < fnc_minus2qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvlaborrev_minus3qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvlaborrev_priorqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                              AND tchargeentry.currentdate < fnc_hist_customrangeend
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_sysconvlaborrev_customrange
    -- Autodesk IP Product-Sales       RecChrgRev_IPProdSales
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Autodesk IP Product-Sales' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ipprodsales_all
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ipprodsales_past
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate >= fnc_currentmonthbegins
                              AND tchargeentry.currentdate < fnc_nextmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ipprodsales_currentmonth
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ipprodsales_pastqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ipprodsales_entirecurrentqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ipprodsales_completedinqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
                              AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ipprodsales_minus1qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
                              AND tchargeentry.currentdate < fnc_minus1qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ipprodsales_minus2qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
                              AND tchargeentry.currentdate < fnc_minus2qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ipprodsales_minus3qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ipprodsales_priorqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                              AND tchargeentry.currentdate < fnc_hist_customrangeend
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_ipprodsales_customrange
    -- Third Party Product-Sales       RecChrgRev_3rdProdSales
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Third Party Product-Sales' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdprodsales_all
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdprodsales_past
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate >= fnc_currentmonthbegins
                              AND tchargeentry.currentdate < fnc_nextmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdprodsales_currentmonth
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdprodsales_pastqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdprodsales_entirecurrentqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                              AND tchargeentry.currentdate < fnc_currentmonthbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdprodsales_completedinqtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
                              AND tchargeentry.currentdate < fnc_currentqtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdprodsales_minus1qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
                              AND tchargeentry.currentdate < fnc_minus1qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdprodsales_minus2qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
                              AND tchargeentry.currentdate < fnc_minus2qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdprodsales_minus3qtr
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdprodsales_priorqtrs
     , SUM(IFNULL(CASE
                      WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                              AND tchargeentry.currentdate < fnc_hist_customrangeend
                          THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                      ELSE 0.00
                  END, 0.00)) AS recchrgrev_3rdprodsales_customrange
     , MAX(fnc_hist_customrangebegin) AS recchrgrev_customrangebegin, MAX(fnc_hist_customrangeend) AS recchrgrev_customrangeend
     , 8 AS sqlversion_rec_chrg_rev
FROM eio_publish.tenrox_private.tproject tproject
LEFT JOIN eio_publish.tenrox_private.ttask ttask
ON ttask.projectid = tproject.uniqueid
LEFT JOIN eio_publish.tenrox_private.tchargeentry tchargeentry
    ON tchargeentry.taskid = ttask.uniqueid
    AND tchargeentry.approved = 1
INNER JOIN eio_publish.tenrox_private.tcharge tcharge 
    ON tcharge.uniqueid = tchargeentry.chargeid 
    AND tcharge.chargetype = 'M'
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02 AS ranges
LEFT OUTER JOIN (SELECT
                   IFNULL(uniqueid, 1) AS lubasecurrencyid
                 FROM   eio_publish.tenrox_private.tcurrency tcurrency
                 WHERE  currencycode = 'USD') basecur
-- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN (
               SELECT
                   IFNULL(uniqueid, 1) AS overridecurid
               FROM   eio_publish.tenrox_private.tcurrency tcurrency
               WHERE  currencycode = 'USD') usdcurid
-- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate AS fxrate
    ON fxrate.basecurrencyid = COALESCE(tchargeentry.currencyid, lubasecurrencyid)
    -- traced back to final table CUST_ADSK_MARGINVARIANCE where @OverrideCurID = @USDCurID = 1
    AND fxrate.quotecurrencyid = COALESCE(NULL, tchargeentry.clientcurrencyid, lubasecurrencyid) 
    AND tchargeentry.currentdate BETWEEN fxrate.startdate AND fxrate.enddate
GROUP BY
    tproject.uniqueid
  );
[0m14:46:43.368312 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:43.369272 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_stacked_transform (execute): 2023-08-21 14:46:42.294477 => 2023-08-21 14:46:43.369248
[0m14:46:43.369387 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_stacked_transform: Close
[0m14:46:43.627865 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165450450>]}
[0m14:46:43.628234 [info ] [Thread-1 (]: 27 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_rec_chrg_rev_local_cur_v02_stacked  [[32mSUCCESS 1[0m in 1.34s]
[0m14:46:43.628425 [debug] [Thread-1 (]: Finished running node model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_stacked_transform
[0m14:46:43.628554 [debug] [Thread-1 (]: Began running node model.my_dbt_projects.adsk_cm_rec_rev_v02_stacked_transform
[0m14:46:43.628799 [info ] [Thread-1 (]: 30 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_rec_rev_v02_stacked ..... [RUN]
[0m14:46:43.629186 [debug] [Thread-1 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_rec_rev_v02_stacked_transform'
[0m14:46:43.629299 [debug] [Thread-1 (]: Began compiling node model.my_dbt_projects.adsk_cm_rec_rev_v02_stacked_transform
[0m14:46:43.631856 [debug] [Thread-1 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_rec_rev_v02_stacked_transform"
[0m14:46:43.632552 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_rec_rev_v02_stacked_transform (compile): 2023-08-21 14:46:43.629358 => 2023-08-21 14:46:43.632515
[0m14:46:43.632680 [debug] [Thread-1 (]: Began executing node model.my_dbt_projects.adsk_cm_rec_rev_v02_stacked_transform
[0m14:46:43.634687 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_rec_rev_v02_stacked_transform"
[0m14:46:43.634775 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_rec_rev_v02_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_rec_rev_v02_stacked_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:43.634843 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:46:43.844281 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:43.845693 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_transform (execute): 2023-08-21 14:46:42.522214 => 2023-08-21 14:46:43.845669
[0m14:46:43.845818 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_transform: Close
[0m14:46:43.914252 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:43.915100 [debug] [Thread-3 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_transform"
[0m14:46:43.932021 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_transform"
[0m14:46:43.932179 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_rec_chrg_rev_v02
  
   as (
    
/* ADSK_FN_CM_REC_CHRG_REV_V02
  @OverrideCurID   INT
  , @RangeBegin    DATETIME = NULL
  , @RangeEnd      DATETIME = NULL
  , @CutoverDate   DATETIME = NULL
  , @Placeholder05 INT = NULL
*/
   SELECT 
        tproject.uniqueid                     AS projectid
        , SUM(IFNULL(
           CASE WHEN tcharge.billable = 1 THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_allbillable_all
        , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tchargeentry.currentdate < fnc_currentmonthbegins
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_allbillable_past
        , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tchargeentry.currentdate >= fnc_currentmonthbegins
           AND tchargeentry.currentdate < fnc_nextmonthbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_allbillable_currentmonth
        , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tchargeentry.currentdate < fnc_currentqtrbegins
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_allbillable_pastqtrs
        , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tchargeentry.currentdate >= fnc_currentqtrbegins
           AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_allbillable_entirecurrentqtr
        , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tchargeentry.currentdate >= fnc_currentqtrbegins
           AND tchargeentry.currentdate < fnc_currentmonthbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_allbillable_completedinqtr
        , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tchargeentry.currentdate >= fnc_minus1qtrbegins
           AND tchargeentry.currentdate < fnc_currentqtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_allbillable_minus1qtr
        , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tchargeentry.currentdate >= fnc_minus2qtrbegins
           AND tchargeentry.currentdate < fnc_minus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_allbillable_minus2qtr
        , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tchargeentry.currentdate >= fnc_minus3qtrbegins
           AND tchargeentry.currentdate < fnc_minus2qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_allbillable_minus3qtr
        , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tchargeentry.currentdate < fnc_minus3qtrbegins
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_allbillable_priorqtrs
        , SUM(IFNULL(CASE WHEN tcharge.billable = 1 AND tchargeentry.currentdate >= fnc_hist_customrangebegin
           AND tchargeentry.currentdate < fnc_hist_customrangeend THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_allbillable_customrange
       -- 3rd Party-Billable Expenses     RecChrgRev_3rdBillableExp
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Billable Expenses' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdbillableexp_all
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate < fnc_currentmonthbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdbillableexp_past
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate >= fnc_currentmonthbegins
                   AND tchargeentry.currentdate < fnc_nextmonthbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdbillableexp_currentmonth
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate < fnc_currentqtrbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdbillableexp_pastqtrs
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                   AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdbillableexp_entirecurrentqtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                   AND tchargeentry.currentdate < fnc_currentmonthbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdbillableexp_completedinqtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
                   AND tchargeentry.currentdate < fnc_currentqtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdbillableexp_minus1qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
                   AND tchargeentry.currentdate < fnc_minus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdbillableexp_minus2qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
                   AND tchargeentry.currentdate < fnc_minus2qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdbillableexp_minus3qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdbillableexp_priorqtrs
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Billable Expenses' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                   AND tchargeentry.currentdate < fnc_hist_customrangeend
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdbillableexp_customrange
       -- 3rd Party-Non-Billable T&E      RecChrgRev_3rdNonBillTE
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdnonbillte_all
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate < fnc_currentmonthbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdnonbillte_past
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_currentmonthbegins
                   AND tchargeentry.currentdate < fnc_nextmonthbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdnonbillte_currentmonth
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate < fnc_currentqtrbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdnonbillte_pastqtrs
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                   AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdnonbillte_entirecurrentqtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                   AND tchargeentry.currentdate < fnc_currentmonthbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdnonbillte_completedinqtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
                   AND tchargeentry.currentdate < fnc_currentqtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdnonbillte_minus1qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
                   AND tchargeentry.currentdate < fnc_minus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdnonbillte_minus2qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
                   AND tchargeentry.currentdate < fnc_minus2qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdnonbillte_minus3qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdnonbillte_priorqtrs
        , SUM(IFNULL(
           CASE WHEN tcharge.name = '3rd Party-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                   AND tchargeentry.currentdate < fnc_hist_customrangeend
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdnonbillte_customrange
       -- Internal-Billable Expenses      RecChrgRev_InternalBillableExp
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Billable Expenses' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalbillableexp_all
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate < fnc_currentmonthbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalbillableexp_past
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate >= fnc_currentmonthbegins
                   AND tchargeentry.currentdate < fnc_nextmonthbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalbillableexp_currentmonth
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate < fnc_currentqtrbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalbillableexp_pastqtrs
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                   AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalbillableexp_entirecurrentqtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                   AND tchargeentry.currentdate < fnc_currentmonthbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalbillableexp_completedinqtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
                   AND tchargeentry.currentdate < fnc_currentqtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalbillableexp_minus1qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
                   AND tchargeentry.currentdate < fnc_minus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalbillableexp_minus2qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
                   AND tchargeentry.currentdate < fnc_minus2qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalbillableexp_minus3qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalbillableexp_priorqtrs
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Billable Expenses' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                   AND tchargeentry.currentdate < fnc_hist_customrangeend
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalbillableexp_customrange
       -- Internal-Non-Billable T&E       RecChrgRev_InternalNonBillTE
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalnonbillte_all
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate < fnc_currentmonthbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalnonbillte_past
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_currentmonthbegins
                   AND tchargeentry.currentdate < fnc_nextmonthbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalnonbillte_currentmonth
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate < fnc_currentqtrbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalnonbillte_pastqtrs
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                   AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalnonbillte_entirecurrentqtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                   AND tchargeentry.currentdate < fnc_currentmonthbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalnonbillte_completedinqtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
                   AND tchargeentry.currentdate < fnc_currentqtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalnonbillte_minus1qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
                   AND tchargeentry.currentdate < fnc_minus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalnonbillte_minus2qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
                   AND tchargeentry.currentdate < fnc_minus2qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalnonbillte_minus3qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalnonbillte_priorqtrs
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Internal-Non-Billable T&E' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                   AND tchargeentry.currentdate < fnc_hist_customrangeend
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_internalnonbillte_customrange
       -- Ratable Billing                 RecChrgRev_RatableBilling
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_ratablebilling_all
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate < fnc_currentmonthbegins
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_ratablebilling_past
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate >= fnc_currentmonthbegins
           AND tchargeentry.currentdate < fnc_nextmonthbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_ratablebilling_currentmonth
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate < fnc_currentqtrbegins
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_ratablebilling_pastqtrs
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate >= fnc_currentqtrbegins
           AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_ratablebilling_entirecurrentqtr
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate >= fnc_currentqtrbegins
           AND tchargeentry.currentdate < fnc_currentmonthbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_ratablebilling_completedinqtr
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
           AND tchargeentry.currentdate < fnc_currentqtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_ratablebilling_minus1qtr
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
           AND tchargeentry.currentdate < fnc_minus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_ratablebilling_minus2qtr
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
           AND tchargeentry.currentdate < fnc_minus2qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_ratablebilling_minus3qtr
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_ratablebilling_priorqtrs
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Ratable Billing' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
           AND tchargeentry.currentdate < fnc_hist_customrangeend THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_ratablebilling_customrange
       -- Sys Conv-Labor Non-Billable     RecChrgRev_SysConvNonBill
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_sysconvnonbill_all
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate < fnc_currentmonthbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_sysconvnonbill_past
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate >= fnc_currentmonthbegins
                   AND tchargeentry.currentdate < fnc_nextmonthbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_sysconvnonbill_currentmonth
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate < fnc_currentqtrbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_sysconvnonbill_pastqtrs
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                   AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_sysconvnonbill_entirecurrentqtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                   AND tchargeentry.currentdate < fnc_currentmonthbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_sysconvnonbill_completedinqtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
                   AND tchargeentry.currentdate < fnc_currentqtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_sysconvnonbill_minus1qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
                   AND tchargeentry.currentdate < fnc_minus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_sysconvnonbill_minus2qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
                   AND tchargeentry.currentdate < fnc_minus2qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_sysconvnonbill_minus3qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_sysconvnonbill_priorqtrs
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Sys Conv-Labor Non-Billable' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                   AND tchargeentry.currentdate < fnc_hist_customrangeend
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_sysconvnonbill_customrange
       -- Sys Conv-Labor Revenue          RecChrgRev_SysConvLaborRev
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Revenue' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_sysconvlaborrev_all
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate < fnc_currentmonthbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_sysconvlaborrev_past
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate >= fnc_currentmonthbegins
                   AND tchargeentry.currentdate < fnc_nextmonthbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_sysconvlaborrev_currentmonth
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate < fnc_currentqtrbegins
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_sysconvlaborrev_pastqtrs
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate >= fnc_currentqtrbegins
           AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_sysconvlaborrev_entirecurrentqtr
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate >= fnc_currentqtrbegins
           AND tchargeentry.currentdate < fnc_currentmonthbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_sysconvlaborrev_completedinqtr
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
           AND tchargeentry.currentdate < fnc_currentqtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_sysconvlaborrev_minus1qtr
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
           AND tchargeentry.currentdate < fnc_minus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_sysconvlaborrev_minus2qtr
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
           AND tchargeentry.currentdate < fnc_minus2qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_sysconvlaborrev_minus3qtr
        , SUM(IFNULL(CASE WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                              THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                          ELSE 0.00 END, 0.00)) AS recchrgrev_sysconvlaborrev_priorqtrs
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Sys Conv-Labor Revenue' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                   AND tchargeentry.currentdate < fnc_hist_customrangeend
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_sysconvlaborrev_customrange
       -- Autodesk IP Product-Sales       RecChrgRev_IPProdSales
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_ipprodsales_all
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate < fnc_currentmonthbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_ipprodsales_past
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate >= fnc_currentmonthbegins
                   AND tchargeentry.currentdate < fnc_nextmonthbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_ipprodsales_currentmonth
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate < fnc_currentqtrbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_ipprodsales_pastqtrs
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                   AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_ipprodsales_entirecurrentqtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                   AND tchargeentry.currentdate < fnc_currentmonthbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_ipprodsales_completedinqtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
                   AND tchargeentry.currentdate < fnc_currentqtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_ipprodsales_minus1qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
                   AND tchargeentry.currentdate < fnc_minus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_ipprodsales_minus2qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
                   AND tchargeentry.currentdate < fnc_minus2qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_ipprodsales_minus3qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_ipprodsales_priorqtrs
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Autodesk IP Product-Sales' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                   AND tchargeentry.currentdate < fnc_hist_customrangeend
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_ipprodsales_customrange
       -- Third Party Product-Sales       RecChrgRev_3rdProdSales
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Third Party Product-Sales' THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdprodsales_all
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate < fnc_currentmonthbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdprodsales_past
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate >= fnc_currentmonthbegins
                   AND tchargeentry.currentdate < fnc_nextmonthbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdprodsales_currentmonth
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate < fnc_currentqtrbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdprodsales_pastqtrs
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                   AND tchargeentry.currentdate < fnc_plus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdprodsales_entirecurrentqtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate >= fnc_currentqtrbegins
                   AND tchargeentry.currentdate < fnc_currentmonthbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdprodsales_completedinqtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate >= fnc_minus1qtrbegins
                   AND tchargeentry.currentdate < fnc_currentqtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdprodsales_minus1qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate >= fnc_minus2qtrbegins
                   AND tchargeentry.currentdate < fnc_minus1qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdprodsales_minus2qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate >= fnc_minus3qtrbegins
                   AND tchargeentry.currentdate < fnc_minus2qtrbegins THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdprodsales_minus3qtr
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate < fnc_minus3qtrbegins
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdprodsales_priorqtrs
        , SUM(IFNULL(
           CASE WHEN tcharge.name = 'Third Party Product-Sales' AND tchargeentry.currentdate >= fnc_hist_customrangebegin
                   AND tchargeentry.currentdate < fnc_hist_customrangeend
                    THEN IFNULL(tchargeentry.amount * fxrate.rate, 0.00)
                ELSE 0.00 END, 0.00))           AS recchrgrev_3rdprodsales_customrange
        , MAX(fnc_hist_customrangebegin)        AS recchrgrev_customrangebegin
        , MAX(fnc_hist_customrangeend)          AS recchrgrev_customrangeend, 8 AS sqlversion_rec_chrg_rev
    FROM eio_publish.tenrox_private.tproject tproject
    LEFT JOIN eio_publish.tenrox_private.ttask ttask ON ttask.projectid = tproject.uniqueid
    LEFT JOIN
        eio_publish.tenrox_private.tchargeentry tchargeentry
        ON tchargeentry.taskid = ttask.uniqueid
        AND tchargeentry.approved = 1
    INNER JOIN
        eio_publish.tenrox_private.tcharge tcharge
        ON tcharge.uniqueid = tchargeentry.chargeid
        AND tcharge.chargetype = 'M'
    LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02 AS ranges
    LEFT OUTER JOIN
        (
            SELECT IFNULL(uniqueid, 1) AS lubasecurrencyid
            FROM eio_publish.tenrox_private.tcurrency tcurrency
            WHERE currencycode = 'USD'
        ) basecur
    -- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
    LEFT OUTER JOIN
        (
            SELECT IFNULL(uniqueid, 1) AS overridecurid
            FROM eio_publish.tenrox_private.tcurrency tcurrency
            WHERE currencycode = 'USD'
        ) usdcurid
    -- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
    LEFT OUTER JOIN
        EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate AS fxrate
        ON fxrate.basecurrencyid = COALESCE(tchargeentry.currencyid, lubasecurrencyid)
        -- traced back to final table CUST_ADSK_MARGINVARIANCE WHERE @OverrideCurID = @USDCurID = 1
        AND fxrate.quotecurrencyid = COALESCE(overridecurid, tchargeentry.clientcurrencyid, lubasecurrencyid)
        AND tchargeentry.currentdate BETWEEN fxrate.startdate AND fxrate.enddate
    GROUP BY tproject.uniqueid
  );
[0m14:46:44.087778 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165615010>]}
[0m14:46:44.088121 [info ] [Thread-2 (]: 28 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_rec_chrg_rev_local_cur_v02  [[32mSUCCESS 1[0m in 1.57s]
[0m14:46:44.088293 [debug] [Thread-2 (]: Finished running node model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_local_cur_transform
[0m14:46:44.088421 [debug] [Thread-2 (]: Began running node model.my_dbt_projects.adsk_cm_rec_rev_v02_transform
[0m14:46:44.088652 [info ] [Thread-2 (]: 31 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_rec_rev_v02 ............. [RUN]
[0m14:46:44.089033 [debug] [Thread-2 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_rec_rev_v02_transform'
[0m14:46:44.089146 [debug] [Thread-2 (]: Began compiling node model.my_dbt_projects.adsk_cm_rec_rev_v02_transform
[0m14:46:44.091739 [debug] [Thread-2 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_rec_rev_v02_transform"
[0m14:46:44.092595 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_rec_rev_v02_transform (compile): 2023-08-21 14:46:44.089213 => 2023-08-21 14:46:44.092535
[0m14:46:44.092783 [debug] [Thread-2 (]: Began executing node model.my_dbt_projects.adsk_cm_rec_rev_v02_transform
[0m14:46:44.094867 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_rec_rev_v02_transform"
[0m14:46:44.094966 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_rec_rev_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_rec_rev_v02_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:44.095038 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m14:46:44.311821 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:44.312814 [debug] [Thread-1 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_rec_rev_v02_stacked_transform"
[0m14:46:44.315219 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_rec_rev_v02_stacked_transform"
[0m14:46:44.315394 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_rec_rev_v02_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_rec_rev_v02_stacked_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_rec_rev_v02_stacked
  
   as (
     


WITH date_range AS (
  SELECT YEAR(DATEADD(YEAR, -10, CURRENT_DATE())) || '-02-01' AS start_date,
         DATEADD(YEAR, 2, CURRENT_DATE()) AS end_date,
        DATEDIFF(DAY, start_date, end_date) + 1   AS rng
),
date_sequence AS (
SELECT DATEADD(DAY, seq4(), start_date) AS dt
FROM date_range,
     TABLE(GENERATOR(ROWCOUNT => 5000)) 
ORDER BY dt
  ),
projects AS (  
SELECT
DISTINCT pd.uniqueid AS PROJECTID
, ds.dt
FROM 
eio_publish.tenrox_private.tproject   pd
LEFT OUTER JOIN date_sequence ds
  ),
tproject AS (
    SELECT
	*
	FROM
	eio_publish.tenrox_private.tproject
),
trecognizedrevenue AS (
	SELECT
					*
	FROM
	eio_publish.tenrox_private.trecognizedrevenue
),
tclient AS (
	SELECT
					*
	FROM
	eio_publish.tenrox_private.tclient
),
tclientinvoice AS (
	SELECT
					*
	FROM
	eio_publish.tenrox_private.tclientinvoice
),
tcurrency AS (
	SELECT
					*
	FROM
	eio_publish.tenrox_private.tcurrency
),
adsk_fn_month_q_ranges_v02 AS (
	SELECT
					*
	FROM
	EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02
),
fcurrqexchrate AS (
	SELECT
					*
	FROM
	EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate
)
SELECT
    tproject.uniqueid AS projectid,
    SUM(nvl(totalbasecurrency, 0.00) * nvl(fxlookup.rate, 1.0)) AS recrev
    ,CASE
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 2 AND 4 THEN TO_DATE(EXTRACT(YEAR FROM   p.dt)||'-02-01')
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 5 AND 7 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-05-01')
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 8 AND 10 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-08-01')
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 11 AND 12 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-11-01')
              ELSE TO_DATE(EXTRACT(YEAR FROM p.dt) - 1 ||'-11-01')
            END                                                                                                             AS dt
    ,SUM(nvl(
    CASE
        WHEN
            periodstartdate >= fnc_currentqtrbegins 
            AND periodstartdate < fnc_currentmonthbegins 
        THEN
            nvl(totalbasecurrency, 0.00) * nvl(fxlookup.rate, 1.0) 
        ELSE
            0.00 
    END
, 0.00)) AS recrev_completedinqtr

FROM
projects p
  LEFT JOIN   tproject AS tproject ON p.projectid = tproject.uniqueid
    LEFT JOIN
        trecognizedrevenue AS trecognizedrevenue 
        ON trecognizedrevenue.projectid = tproject.uniqueid AND trecognizedrevenue.periodstartdate = p.dt
    LEFT JOIN
        tclient AS tclient 
        ON tclient.uniqueid = tproject.clientid 
    LEFT JOIN
        tclientinvoice AS tclientinvoice 
        ON tclient.uniqueid = tclientinvoice.clientid 
    LEFT OUTER JOIN
        adsk_fn_month_q_ranges_v02
    LEFT OUTER JOIN
        (
            SELECT
                nvl(uniqueid, 1) AS lubasecurrencyid 
            FROM
                tcurrency
            WHERE
                currencycode = 'USD'
        )
        basecur 
    LEFT OUTER JOIN
        fcurrqexchrate AS fxlookup 
        ON fxlookup.basecurrencyid = lubasecurrencyid 
        AND fxlookup.quotecurrencyid = 
        (
            COALESCE(NULL, tclientinvoice.currencyid, lubasecurrencyid)
        )
        AND trecognizedrevenue.periodstartdate BETWEEN fxlookup.startdate AND fxlookup.enddate 

where p.projectid = 15078
GROUP BY
    tproject.uniqueid
    ,CASE
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 2 AND 4 THEN TO_DATE(EXTRACT(YEAR FROM   p.dt)||'-02-01')
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 5 AND 7 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-05-01')
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 8 AND 10 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-08-01')
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 11 AND 12 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-11-01')
              ELSE TO_DATE(EXTRACT(YEAR FROM p.dt) - 1 ||'-11-01')
            END
  ,totalbasecurrency
  ,fxlookup.rate
  );
[0m14:46:44.382274 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:44.383340 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_transform (execute): 2023-08-21 14:46:43.220223 => 2023-08-21 14:46:44.383314
[0m14:46:44.383457 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_transform: Close
[0m14:46:44.643668 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1667cf550>]}
[0m14:46:44.643996 [info ] [Thread-3 (]: 29 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_rec_chrg_rev_v02 ... [[32mSUCCESS 1[0m in 1.43s]
[0m14:46:44.644172 [debug] [Thread-3 (]: Finished running node model.my_dbt_projects.adsk_cm_rec_chrg_rev_v02_transform
[0m14:46:44.644294 [debug] [Thread-3 (]: Began running node model.my_dbt_projects.adsk_cm_resource_details_transform
[0m14:46:44.644485 [info ] [Thread-3 (]: 32 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_resource_details ........ [RUN]
[0m14:46:44.644850 [debug] [Thread-3 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_resource_details_transform'
[0m14:46:44.644961 [debug] [Thread-3 (]: Began compiling node model.my_dbt_projects.adsk_cm_resource_details_transform
[0m14:46:44.647905 [debug] [Thread-3 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_resource_details_transform"
[0m14:46:44.648700 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_resource_details_transform (compile): 2023-08-21 14:46:44.645024 => 2023-08-21 14:46:44.648670
[0m14:46:44.648805 [debug] [Thread-3 (]: Began executing node model.my_dbt_projects.adsk_cm_resource_details_transform
[0m14:46:44.650665 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_resource_details_transform"
[0m14:46:44.650755 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_resource_details_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_resource_details_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:44.650818 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m14:46:44.668574 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:44.669622 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_rec_rev_v02_stacked_transform (execute): 2023-08-21 14:46:43.632742 => 2023-08-21 14:46:44.669600
[0m14:46:44.669732 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_rec_rev_v02_stacked_transform: Close
[0m14:46:44.803726 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:44.804544 [debug] [Thread-2 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_rec_rev_v02_transform"
[0m14:46:44.807850 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_rec_rev_v02_transform"
[0m14:46:44.807974 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_rec_rev_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_rec_rev_v02_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_rec_rev_v02
  
   as (
     

WITH tproject AS (
    SELECT
	*
	FROM
	eio_publish.tenrox_private.tproject
),
trecognizedrevenue AS (
	SELECT
					*
	FROM
					eio_publish.tenrox_private.trecognizedrevenue
),
tclient AS (
	SELECT
					*
	FROM
					eio_publish.tenrox_private.tclient
),
tclientinvoice AS (
	SELECT
					*
	FROM
					eio_publish.tenrox_private.tclientinvoice
),
tcurrency AS (
	SELECT
					*
	FROM
					eio_publish.tenrox_private.tcurrency
),
adsk_fn_month_q_ranges_v02 AS (
	SELECT
					*
	FROM
					EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02
),
fcurrqexchrate AS (
	SELECT
					*
	FROM
					EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate
)
SELECT
    tproject.uniqueid AS project_id,
    SUM(nvl(totalbasecurrency, 0.00) * nvl(fxlookup.rate, 1.0)) AS recrev_all,
    SUM(nvl(
    CASE
        WHEN
            periodstartdate < fnc_currentmonthbegins 
        THEN
            nvl(totalbasecurrency, 0.00) * nvl(fxlookup.rate, 1.0) 
        ELSE
            0.00 
    END
, 0.00)) AS recrev_past , SUM(nvl(
    CASE
        WHEN
            periodstartdate >= fnc_currentmonthbegins 
            AND periodstartdate < fnc_nextmonthbegins 
        THEN
            nvl(totalbasecurrency, 0.00) * nvl(fxlookup.rate, 1.0) 
        ELSE
            0.00 
    END
, 0.00)) AS recrev_currentmonth , SUM(nvl(
    CASE
        WHEN
            periodstartdate < fnc_currentqtrbegins 
        THEN
            nvl(totalbasecurrency, 0.00) * nvl(fxlookup.rate, 1.0) 
        ELSE
            0.00 
    END
, 0.00)) AS recrev_pastqtrs , SUM(nvl(
    CASE
        WHEN
            periodstartdate >= fnc_currentqtrbegins 
            AND periodstartdate < fnc_plus1qtrbegins 
        THEN
            nvl(totalbasecurrency, 0.00) * nvl(fxlookup.rate, 1.0) 
        ELSE
            0.00 
    END
, 0.00)) AS recrev_entirecurrentqtr , SUM(nvl(
    CASE
        WHEN
            periodstartdate >= fnc_currentqtrbegins 
            AND periodstartdate < fnc_currentmonthbegins 
        THEN
            nvl(totalbasecurrency, 0.00) * nvl(fxlookup.rate, 1.0) 
        ELSE
            0.00 
    END
, 0.00)) AS recrev_completedinqtr , SUM(nvl(
    CASE
        WHEN
            periodstartdate >= fnc_minus1qtrbegins 
            AND periodstartdate < fnc_currentqtrbegins 
        THEN
            nvl(totalbasecurrency, 0.00) * nvl(fxlookup.rate, 1.0) 
        ELSE
            0.00 
    END
, 0.00)) AS recrev_minus1qtr , SUM(nvl(
    CASE
        WHEN
            periodstartdate >= fnc_minus2qtrbegins 
            AND periodstartdate < fnc_minus1qtrbegins 
        THEN
            nvl(totalbasecurrency, 0.00) * nvl(fxlookup.rate, 1.0) 
        ELSE
            0.00 
    END
, 0.00)) AS recrev_minus2qtr , SUM(nvl(
    CASE
        WHEN
            periodstartdate >= fnc_minus3qtrbegins 
            AND periodstartdate < fnc_minus2qtrbegins 
        THEN
            nvl(totalbasecurrency, 0.00) * nvl(fxlookup.rate, 1.0) 
        ELSE
            0.00 
    END
, 0.00)) AS recrev_minus3qtr , SUM(nvl(
    CASE
        WHEN
            periodstartdate < fnc_minus3qtrbegins 
        THEN
            nvl(totalbasecurrency, 0.00) * nvl(fxlookup.rate, 1.0) 
        ELSE
            0.00 
    END
, 0.00)) AS recrev_priorqtrs , SUM(nvl(
    CASE
        WHEN
            periodstartdate >= fnc_hist_customrangebegin 
            AND periodstartdate < fnc_hist_customrangeend 
        THEN
            nvl(totalbasecurrency, 0.00) * nvl(fxlookup.rate, 1.0) 
        ELSE
            0.00 
    END
, 0.00)) AS recrev_customrange , MAX(fnc_hist_customrangebegin) AS recrev_customrangebegin , MAX(fnc_hist_customrangeend) AS recrev_customrangeend 
FROM
    tproject AS tproject 
    LEFT JOIN
        trecognizedrevenue AS trecognizedrevenue 
        ON trecognizedrevenue.projectid = tproject.uniqueid 
    LEFT JOIN
        tclient AS tclient 
        ON tclient.uniqueid = tproject.clientid 
    LEFT JOIN
        tclientinvoice AS tclientinvoice 
        ON tclient.uniqueid = tclientinvoice.clientid 
    LEFT OUTER JOIN
        adsk_fn_month_q_ranges_v02
    LEFT OUTER JOIN
        (
            SELECT
                nvl(uniqueid, 1) AS lubasecurrencyid 
            FROM
                tcurrency
            WHERE
                currencycode = 'USD'
        )
        basecur 
    LEFT OUTER JOIN
        fcurrqexchrate AS fxlookup 
        ON fxlookup.basecurrencyid = lubasecurrencyid 
        AND fxlookup.quotecurrencyid = 
        (
            COALESCE(NULL, tclientinvoice.currencyid, lubasecurrencyid)
        )
        AND trecognizedrevenue.periodstartdate BETWEEN fxlookup.startdate AND fxlookup.enddate 
GROUP BY
    tproject.uniqueid
  );
[0m14:46:44.944996 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1661d5f10>]}
[0m14:46:44.945332 [info ] [Thread-1 (]: 30 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_rec_rev_v02_stacked  [[32mSUCCESS 1[0m in 1.32s]
[0m14:46:44.945503 [debug] [Thread-1 (]: Finished running node model.my_dbt_projects.adsk_cm_rec_rev_v02_stacked_transform
[0m14:46:44.945630 [debug] [Thread-1 (]: Began running node model.my_dbt_projects.adsk_cm_project_budget_v02_transform
[0m14:46:44.945742 [info ] [Thread-1 (]: 33 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_project_budget_v02 ...... [RUN]
[0m14:46:44.946001 [debug] [Thread-1 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_project_budget_v02_transform'
[0m14:46:44.946154 [debug] [Thread-1 (]: Began compiling node model.my_dbt_projects.adsk_cm_project_budget_v02_transform
[0m14:46:44.950097 [debug] [Thread-1 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_project_budget_v02_transform"
[0m14:46:44.951888 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_project_budget_v02_transform (compile): 2023-08-21 14:46:44.946233 => 2023-08-21 14:46:44.951848
[0m14:46:44.952000 [debug] [Thread-1 (]: Began executing node model.my_dbt_projects.adsk_cm_project_budget_v02_transform
[0m14:46:44.953851 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_project_budget_v02_transform"
[0m14:46:44.953934 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_project_budget_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_project_budget_v02_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:44.953998 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:46:45.141749 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:45.142818 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_rec_rev_v02_transform (execute): 2023-08-21 14:46:44.092860 => 2023-08-21 14:46:45.142790
[0m14:46:45.142937 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_rec_rev_v02_transform: Close
[0m14:46:45.335438 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:45.336336 [debug] [Thread-3 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_resource_details_transform"
[0m14:46:45.339097 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_resource_details_transform"
[0m14:46:45.339194 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_resource_details_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_resource_details_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_resource_details
  
   as (
    
/* ADSK_FN_CM_RESOURCE_DETAILS.sql
  @OverrideCurID   INT = 1
  , @Placeholder02 DATETIME = NULL
  , @Placeholder03 DATETIME = NULL
  , @Placeholder04 INT = NULL
  , @Placeholder05 INT = NULL
*/

WITH fxrate AS (
    SELECT * FROM EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate
    WHERE quotecurrencyid = 1
    -- traced back to final table CUST_ADSK_UTILIZATION_HOURS WHERE @OverrideCurID = DEFAULT of this adsk_cm_resource_details 
    -- @OverrideCurID in adsk_cm_resource_details default value = 1
    AND basecurrencyid = 1 AND CURRENT_DATE() BETWEEN startdate AND enddate
)

    SELECT
          tuser.uniqueid                                                AS resourceid
          , 0                                                           AS isrole
          , tuser.firstname                                             AS resourcefirstname
          , tuser.lastname                                              AS resourcelastname
          , NVL(tuser.firstname, '') || ' ' || NVL(tuser.lastname, '')  AS resourcefullname
          , NVL(tuser.lastname, '') || ', ' || NVL(tuser.firstname, '') AS resourcefullname_rev
          , tuser.emailaddress                                          AS resourceemailaddress
          , tuser.employeetype                                          AS resourceemployeetype
          , tuser.forecastcost * fxrate.rate                            AS resourcedefaultforecastcostrate
          , tuser.forecastbill * fxrate.rate                            AS resourcedefaultbillrate
          , tuser.groupid                                               AS resourceapprovalgroupid
          , group_app.name                                              AS resourceapprovalgroupname
          , tuser.functionalgroupid                                     AS resourcefunctionalgroupid
          , group_funct.name                                            AS resourcefunctionalgroupname
          , tuser.resgroupid                                            AS resourcegroupid
          , group_user.name                                             AS resourcegroupname
          , tuser.loginname                                             AS resourceloginname
          , tuser.titleid                                               AS resourcetitleid
          , ttitle.name                                                 AS resourcetitlename
          , mapdata_secgroup.fielddesc                                  AS resourcesecuritygroup
          , mapdata_usertype.fielddesc                                  AS resourceusertype
          , tresourcetype.uniqueid                                      AS resourcerestypeid
          , tresourcetype.name                                          AS resourcerestypename
          , 3                                                           AS sqlversion_resource_details
    FROM eio_publish.tenrox_private.tuser tuser
    LEFT OUTER JOIN eio_publish.tenrox_private.ttitle ttitle 
        ON ttitle.uniqueid = tuser.titleid
    LEFT OUTER JOIN eio_publish.tenrox_private.tmapdata mapdata_secgroup
        ON mapdata_secgroup.fieldkey = tuser.security
        AND mapdata_secgroup.language = 0
        AND mapdata_secgroup.tablename = 'SECURITY'
    LEFT OUTER JOIN eio_publish.tenrox_private.tmapdata mapdata_usertype
        ON mapdata_usertype.fieldkey = tuser.usertype
        AND mapdata_usertype.language = 0
        AND mapdata_usertype.tablename = 'USERTYPE'
    LEFT OUTER JOIN eio_publish.tenrox_private.tgroup group_app 
        ON group_app.uniqueid = tuser.groupid
    LEFT OUTER JOIN eio_publish.tenrox_private.tgroup group_funct 
        ON group_funct.uniqueid = tuser.functionalgroupid
    LEFT OUTER JOIN eio_publish.tenrox_private.tgroup group_user 
        ON group_user.uniqueid = tuser.resgroupid
    LEFT OUTER JOIN eio_publish.tenrox_private.tresourcetypehist tresourcetypehist
        ON tresourcetypehist.resourceid = tuser.uniqueid
        AND tresourcetypehist.startdate < CURRENT_DATE()
        AND tresourcetypehist.enddate >= CURRENT_DATE()
    LEFT OUTER JOIN eio_publish.tenrox_private.tresourcetype tresourcetype 
        ON tresourcetype.uniqueid = tresourcetypehist.resourcetypeid
    LEFT OUTER JOIN fxrate

    UNION

    SELECT 
          uniqueid               AS resourceid
          , 1                    AS isrole
          , ''                   AS resourcefirstname
          , name                 AS resourcelastname
          , name                 AS resourcefullname
          , name                 AS resourcefullname_rev
          , ''                   AS resourceemailaddress
          , 'Role'               AS resourceemployeetype
          , hourlycostrate       AS resourcedefaultforecastcostrate
          , hourlybillingrate    AS resourcedefaultbillrate
          , NULL                 AS resourceapprovalgroupid
          , NULL                 AS resourceapprovalgroupname
          , NULL                 AS resourcefunctionalgroupid
          , NULL                 AS resourcefunctionalgroupname
          , NULL                 AS resourcegroupid
          , NULL                 AS resourcegroupname
          , roletype             AS resourceloginname
          , NULL                 AS resourcetitleid
          , description          AS resourcetitlename
          , NULL                 AS resourcesecuritygroup
          , NULL                 AS resourceusertype
          , NULL                 AS resourcerestypeid
          , 'Role'               AS resourcerestypename
          , 3 AS sqlversion_resource_details
    FROM eio_publish.tenrox_private.tplanningrole tplanningrole
  );
[0m14:46:45.387192 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x16562fb90>]}
[0m14:46:45.387491 [info ] [Thread-2 (]: 31 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_rec_rev_v02 ........ [[32mSUCCESS 1[0m in 1.30s]
[0m14:46:45.387656 [debug] [Thread-2 (]: Finished running node model.my_dbt_projects.adsk_cm_rec_rev_v02_transform
[0m14:46:45.387777 [debug] [Thread-2 (]: Began running node model.my_dbt_projects.adsk_cm_labor_hrs_v02_stacked_transform
[0m14:46:45.388011 [info ] [Thread-2 (]: 34 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_labor_hrs_v02_stacked ... [RUN]
[0m14:46:45.388396 [debug] [Thread-2 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_labor_hrs_v02_stacked_transform'
[0m14:46:45.388500 [debug] [Thread-2 (]: Began compiling node model.my_dbt_projects.adsk_cm_labor_hrs_v02_stacked_transform
[0m14:46:45.392174 [debug] [Thread-2 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_labor_hrs_v02_stacked_transform"
[0m14:46:45.393276 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_labor_hrs_v02_stacked_transform (compile): 2023-08-21 14:46:45.388559 => 2023-08-21 14:46:45.393228
[0m14:46:45.393427 [debug] [Thread-2 (]: Began executing node model.my_dbt_projects.adsk_cm_labor_hrs_v02_stacked_transform
[0m14:46:45.396595 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_labor_hrs_v02_stacked_transform"
[0m14:46:45.396710 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_labor_hrs_v02_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_labor_hrs_v02_stacked_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:45.396780 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m14:46:45.645158 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:45.645998 [debug] [Thread-1 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_project_budget_v02_transform"
[0m14:46:45.655487 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_project_budget_v02_transform"
[0m14:46:45.655658 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_project_budget_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_project_budget_v02_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_budget_v02
  
   as (
    

/* ADSK_FN_CM_PROJECT_BUDGET_V02
  @OverrideCurID    INT
  , @FXRateDateMode INT = 1
 1 = GETDATE(), 2 = TPROJECT.STARTDATE, 3 = TPROJECTCUSTFLD_VIEW.ADSK_Master_ContractDate [Defaults to TPROJECT.STARTDATE if NULL]

  , @Placeholder03  INT = NULL
  , @Placeholder04  INT = NULL
  , @Placeholder05  INT = NULL
*/
    SELECT 
         tproject.uniqueid AS projectid
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 1
            AND tbudgetdetailentry.entrysubtype IS NULL AND tbudgetdetailentry.objectid IS NULL
                                                        THEN tbudgetdetailentry.baselinevalue / 3600
                                                    ELSE 0 END) AS baselinehrstotal
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype = 3
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue / 3600
                    ELSE 0 END) AS baselinehrsbillable
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype = 4
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue / 3600
                    ELSE 0 END) AS baselinehrsnonbillable
        --budget time/hours - current
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype IS NULL
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue / 3600
                      ELSE 0.00 END) AS currenthrstotal, SUM(CASE WHEN tbudgetdetailentry.entrytype = 1
            AND tbudgetdetailentry.entrysubtype = 3 AND tbudgetdetailentry.objectid IS NULL
                                                                      THEN tbudgetdetailentry.currentvalue / 3600
                                                                  ELSE 0.00 END) AS currenthrsbillable
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 1 AND tbudgetdetailentry.entrysubtype = 4
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue / 3600
                    ELSE 0.00 END) AS currenthrsnonbillable
        --budget costs - baseline
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype IS NULL
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                      ELSE 0.00 END) AS baselinecosttotal, SUM(CASE WHEN tbudgetdetailentry.entrytype = 2
            AND tbudgetdetailentry.entrysubtype = 2 AND tbudgetdetailentry.objectid IS NULL
                                                                        THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                                                                    ELSE 0.00 END) AS baselinecostcharge
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 3
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostproduct
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 4
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecosttime
        --budget costs - current
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype IS NULL
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
                      ELSE 0.00 END) AS currentcosttotal
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2
            AND tbudgetdetailentry.entrysubtype = 2 AND tbudgetdetailentry.objectid IS NULL
                                                                       THEN tbudgetdetailentry.currentvalue * fxrate.rate
                                                                   ELSE 0.00 END) AS currentcostcharge
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 3
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostproduct
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 4
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcosttime
        --budget billable - baseline
        , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype IS NULL
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                      ELSE 0.00 END) AS baselinebillabletotal
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3
            AND tbudgetdetailentry.entrysubtype = 2 AND tbudgetdetailentry.objectid IS NULL
                                                                            THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                                                                        ELSE 0.00 END)
            - SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                AND tcharge.name = 'Ratable Billing' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                       ELSE 0.00 END) AS baselinebillablecharge
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 3
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillableproduct
         , SUM(CASE WHEN (tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 4
            AND tbudgetdetailentry.objectid IS NULL)
                        /* OR (TBUDGETDETAILENTRY.ENTRYTYPE = 3
                        AND TBUDGETDETAILENTRY.ENTRYSUBTYPE = 2
                        AND TCHARGE.NAME = 'Ratable Billing') */
                        THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillabletime
        --budget billable - current
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype IS NULL
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
                      ELSE 0.00 END) AS currentbillabletotal
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3
            AND tbudgetdetailentry.entrysubtype = 2 AND tbudgetdetailentry.objectid IS NULL
                                                                           THEN tbudgetdetailentry.currentvalue * fxrate.rate
                                                                       ELSE 0.00 END)
            - SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
                AND tcharge.name = 'Ratable Billing' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                       ELSE 0.00 END) AS currentbillablecharge
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 3
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillableproduct
         , SUM(CASE WHEN (tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 4
            AND tbudgetdetailentry.objectid IS NULL)
                        /* OR (TBUDGETDETAILENTRY.ENTRYTYPE = 3
                        AND TBUDGETDETAILENTRY.ENTRYSUBTYPE = 2
                        AND TCHARGE.NAME = 'Ratable Billing') */
                        THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillabletime
        --budget non-billable - baseline
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype IS NULL
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                      ELSE 0.00 END) AS baselinenonbillabletotal
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 4
            AND tbudgetdetailentry.entrysubtype = 2 AND tbudgetdetailentry.objectid IS NULL
                                                                               THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                                                                           ELSE 0.00 END) AS baselinenonbillablecharge
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 3
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinenonbillableproduct
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 4
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinenonbillabletime
        --budget non-billable - current
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype IS NULL
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
                      ELSE 0.00 END) AS currentnonbillabletotal
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 4
            AND tbudgetdetailentry.entrysubtype = 2 AND tbudgetdetailentry.objectid IS NULL
                                                                              THEN tbudgetdetailentry.currentvalue * fxrate.rate
                                                                          ELSE 0.00 END) AS currentnonbillablecharge
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 3
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentnonbillableproduct
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 4 AND tbudgetdetailentry.entrysubtype = 4
            AND tbudgetdetailentry.objectid IS NULL THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentnonbillabletime
        -- Breakouts
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = '3rd Party-Billable Expenses' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostcharge3rdbillableexp
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostcharge3rdnonbillablete
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Autodesk IP Product-Sales' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostchargeipproductsales
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Internal-Billable Expenses' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostchargeinternalbillableexp
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Internal-Non-Billable T&E' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostchargeinternalnonbillte
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Third Party Product-Costs' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostcharge3rdprodcosts
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Third Party Product-Sales' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostcharge3rdprodsales
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Ratable Billing' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinecostchargeratablebilling
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = '3rd Party-Billable Expenses' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostcharge3rdbillableexp
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostcharge3rdnonbillablete
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Autodesk IP Product-Sales' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostchargeipproductsales
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Internal-Billable Expenses' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostchargeinternalbillableexp
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Internal-Non-Billable T&E' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostchargeinternalnonbillte
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Third Party Product-Costs' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostcharge3rdprodcosts
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Third Party Product-Sales' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostcharge3rdprodsales
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 2 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Ratable Billing' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentcostchargeratablebilling
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = '3rd Party-Billable Expenses' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillablecharge3rdbillableexp
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillablecharge3rdnonbillablete
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Autodesk IP Product-Sales' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillablechargeipproductsales
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Internal-Billable Expenses' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillablechargeinternalbillableexp
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Internal-Non-Billable T&E' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillablechargeinternalnonbillte
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Ratable Billing' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillablechargeratablebilling
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Third Party Product-Costs' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillablecharge3rdprodcosts
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Third Party Product-Sales' THEN tbudgetdetailentry.baselinevalue * fxrate.rate
                    ELSE 0.00 END) AS baselinebillablecharge3rdprodsales
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = '3rd Party-Billable Expenses' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillablecharge3rdbillableexp
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = '3rd Party-Non-Billable T&E' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillablecharge3rdnonbillablete
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Autodesk IP Product-Sales' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillablechargeipproductsales
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Internal-Billable Expenses' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillablechargeinternalbillableexp
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Internal-Non-Billable T&E' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillablechargeinternalnonbillte
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Ratable Billing' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillablechargeratablebilling
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Third Party Product-Costs' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillablecharge3rdprodcosts
         , SUM(CASE WHEN tbudgetdetailentry.entrytype = 3 AND tbudgetdetailentry.entrysubtype = 2
            AND tcharge.name = 'Third Party Product-Sales' THEN tbudgetdetailentry.currentvalue * fxrate.rate
                    ELSE 0.00 END) AS currentbillablecharge3rdprodsales
         , 1 AS sqlversion_project_budget_v02
    FROM eio_publish.tenrox_private.tproject tproject
    LEFT OUTER JOIN
        eio_publish.tenrox_private.tbudgetdetail tbudgetdetail ON tbudgetdetail.objectid = tproject.uniqueid
    LEFT OUTER JOIN
        eio_publish.tenrox_private.tbudgetdetaillist tbudgetdetaillist
        ON tbudgetdetail.objecttype = 2
        AND tbudgetdetail.uniqueid = tbudgetdetaillist.budgetdetailedid
    LEFT OUTER JOIN
        eio_publish.tenrox_private.tbudgetdetailentry tbudgetdetailentry
        ON tbudgetdetaillist.uniqueid = tbudgetdetailentry.budgetdetailedlistid
    LEFT OUTER JOIN eio_publish.tenrox_private.tcharge tcharge ON tcharge.uniqueid = tbudgetdetailentry.objectid
    LEFT OUTER JOIN eio_publish.tenrox_private.tclient tclient ON tclient.uniqueid = tproject.clientid
    LEFT OUTER JOIN
        eio_publish.tenrox_private.tclientinvoice tclientinvoice ON tclientinvoice.clientid = tclient.uniqueid
    LEFT OUTER JOIN
        EIO_INGEST.TENROX_TRANSFORM.tprojectcustfld_view tprojectcustfld_view
        ON tproject.uniqueid = tprojectcustfld_view.projectid
    LEFT OUTER JOIN
        (   
            SELECT 
               currencyid 
            FROM eio_publish.tenrox_private.tsysdefs tsysdefs 
            WHERE uniqueid = 1
         ) basecurrency
    LEFT OUTER JOIN
        (
            SELECT IFNULL(uniqueid, 1) AS lubasecurrencyid
            FROM eio_publish.tenrox_private.tcurrency tcurrency
            WHERE currencycode = 'USD'
        ) basecur
    LEFT OUTER JOIN
        EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate AS fxrate
        ON fxrate.basecurrencyid = COALESCE(tclientinvoice.currencyid, tbudgetdetail.billcurrencyid, lubasecurrencyid)
        AND fxrate.quotecurrencyid = COALESCE(tclientinvoice.currencyid, tbudgetdetail.billcurrencyid, lubasecurrencyid)
        AND CURRENT_DATE() BETWEEN fxrate.startdate AND fxrate.enddate
    /*                  CASE
                             @FXRateDateMode
                             WHEN 1 THEN GETDATE()
                             WHEN 2 THEN TPROJECT.STARTDATE
                             WHEN 3 THEN IFNULL(CONVERT(DATETIME, TPROJECTCUSTFLD_VIEW.ADSK_Master_ContractDate), TPROJECT.STARTDATE)
                         END) FXRate
    */
    GROUP BY tproject.uniqueid
  );
[0m14:46:45.769494 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:45.770536 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_resource_details_transform (execute): 2023-08-21 14:46:44.648859 => 2023-08-21 14:46:45.770511
[0m14:46:45.770649 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_resource_details_transform: Close
[0m14:46:46.016697 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x166b7d390>]}
[0m14:46:46.017023 [info ] [Thread-3 (]: 32 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_resource_details ... [[32mSUCCESS 1[0m in 1.37s]
[0m14:46:46.017199 [debug] [Thread-3 (]: Finished running node model.my_dbt_projects.adsk_cm_resource_details_transform
[0m14:46:46.017325 [debug] [Thread-3 (]: Began running node model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_local_cur_transform
[0m14:46:46.017613 [info ] [Thread-3 (]: 35 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_monthly_expect_labor_local_cur_rev  [RUN]
[0m14:46:46.017956 [debug] [Thread-3 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_local_cur_transform'
[0m14:46:46.018052 [debug] [Thread-3 (]: Began compiling node model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_local_cur_transform
[0m14:46:46.021125 [debug] [Thread-3 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_local_cur_transform"
[0m14:46:46.022312 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_local_cur_transform (compile): 2023-08-21 14:46:46.018107 => 2023-08-21 14:46:46.022284
[0m14:46:46.022412 [debug] [Thread-3 (]: Began executing node model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_local_cur_transform
[0m14:46:46.024294 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_local_cur_transform"
[0m14:46:46.024376 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_local_cur_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:46.024441 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m14:46:46.035404 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:46.036525 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_project_budget_v02_transform (execute): 2023-08-21 14:46:44.952059 => 2023-08-21 14:46:46.036501
[0m14:46:46.036632 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_project_budget_v02_transform: Close
[0m14:46:46.082283 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:46.083061 [debug] [Thread-2 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_labor_hrs_v02_stacked_transform"
[0m14:46:46.090242 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_labor_hrs_v02_stacked_transform"
[0m14:46:46.090343 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_labor_hrs_v02_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_labor_hrs_v02_stacked_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_labor_hrs_v02_stacked
  
   as (
    




 WITH 
timesheetentries AS
(
  SELECT
  *
  FROM
  eio_publish.tenrox_private.ttimesheetentries
),
task AS
(
  SELECT
  *
  FROM
  eio_publish.tenrox_private.ttask
),
adsk_month_q_ranges_v02 AS
(
  SELECT
  *
  FROM
  EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02
),

rplnbooking AS
(
  SELECT
  *
  FROM
  eio_publish.tenrox_private.trplnbooking

),
rplnbookingdetails AS
(
  SELECT
  *
  FROM
  eio_publish.tenrox_private.trplnbookingdetails

),

rplnbookingattributes AS
(
  SELECT
  *
  FROM
  eio_publish.tenrox_private.trplnbookingattributes

),

projectteamresource AS
(
  SELECT
  *
  FROM
  eio_publish.tenrox_private.tprojectteamresource

),
project AS
(
  SELECT
  *
  FROM
  eio_publish.tenrox_private.tproject

),
projectcustfld AS
(
  SELECT
  *
  FROM
  eio_publish.tenrox_private.tprojectcustfld

),
custlst AS
(
  SELECT
  *
  FROM
  eio_publish.tenrox_private.tcustlst

),
custlstdesc AS
(
  SELECT
  *
  FROM
  eio_publish.tenrox_private.tcustlstdesc

),

adsk_cm_labor_hrs_v02 AS
(
  SELECT
  *
  FROM
  EIO_INGEST.TENROX_TRANSFORM.adsk_cm_labor_hrs_v02
),

combined as (
    SELECT
            ttask.projectid AS projectid
            ,ttimesheetentries.entrydate                as dt
           -- ,trunc(to_date(ttimesheetentries.entrydate),'MONTH') AS entrydate

            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1 THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.billable = 1 THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_unapp
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 0 
                                    AND ttimesheetentries.funded = 0 THEN totaltime
                                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_nonbill
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 1 AND ttimesheetentries.funded = 1 THEN totaltime
                ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized
            , SUM(IFNULL(CASE WHEN ttimesheetentries.approved = 0 AND ttimesheetentries.funded = 1 THEN totaltime
                    ELSE NULL END, 0.00)) / 3600.00 AS hrsact_utilized_unapp
            , 0.00 AS hrsfcst_all
            , 0.00 AS hrsfcst_billable
            , 0.00 AS hrsfcst_gen
            , 0.00 AS hrsfcst_soft
            , 0.00 AS hrsfcst_billable_soft
            , 0.00 AS hrsfcst_gen_soft
            , 0.00 AS hrsfcst_nonbill_gen_soft
       
            , MAX(fnc_hist_customrangebegin) AS customrangebegin
            , MAX(fnc_hist_customrangeend) AS customrangeend
        FROM timesheetentries AS ttimesheetentries 
        INNER JOIN task AS  ttask
            ON ttimesheetentries.TASKUID = ttask.uniqueid 
        --LEFT OUTER JOIN quarter_dates qd
        LEFT OUTER JOIN adsk_month_q_ranges_v02 AS ranges
        
        --where ttimesheetentries.approved = 1 AND ttimesheetentries.billable = 1
        GROUP BY 
        ttask.projectid
        , ttimesheetentries.entrydate
    UNION ALL
    
    SELECT
       trplnbooking.projectid                                            AS projectid
       ,trplnbookingdetails.bookeddate                                   AS dt
       --,trunc(trplnbookingdetails.bookeddate, 'MONTH')                   AS bookeddate
        , 0.00 AS  hrsact
        , 0.00 AS hrsact_unapp
        , 0.00 AS hrsact_nonbill
        , 0.00 AS hrsact_utilized
        , 0.00 AS hrsact_utilized_unapp
        , SUM(IFNULL(trplnbookingdetails.bookedseconds, 0.00)) / 3600.00 AS hrsfcst_all
     
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable
       
        , SUM(IFNULL(CASE WHEN trplnbooking.bookingobjecttype = 700 THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_gen
       
       -- Start Soft Bookings Only section
        , SUM(IFNULL(CASE WHEN trplnbooking.bookingtype = 2 THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_soft
  
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_billable_soft
    

        , SUM(IFNULL(CASE WHEN trplnbooking.bookingobjecttype = 700 AND trplnbooking.bookingtype = 2
                              THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_gen_soft
    
        , SUM(IFNULL(CASE WHEN trplnbookingattributes.billable = 1 AND trplnbooking.bookingobjecttype = 700
           AND trplnbooking.bookingtype = 2 THEN trplnbookingdetails.bookedseconds
                          ELSE 0.00 END, 0.00)) / 3600.00                AS hrsfcst_nonbill_gen_soft
      
       -- End non-billable Generic bookings section
        , MAX(fnc_fcst_customrangebegin)                                 AS customrangebegin
        , MAX(fnc_fcst_customrangeend)                                   AS customrangeend
    FROM rplnbooking AS trplnbooking
    INNER JOIN rplnbookingdetails AS  trplnbookingdetails ON trplnbookingdetails.bookingid = trplnbooking.uniqueid 
    INNER JOIN rplnbookingattributes AS trplnbookingattributes ON trplnbookingattributes.bookingid = trplnbooking.uniqueid 
    INNER JOIN projectteamresource AS tprojectteamresource ON tprojectteamresource.projectid = trplnbooking.projectid 
            AND tprojectteamresource.resourceid = CASE trplnbooking.bookingobjecttype 
                                                    WHEN 1 THEN trplnbooking.userid 
                                                    WHEN 700 THEN trplnbooking.roleid 
                                                END 
            AND tprojectteamresource.isrole = CASE trplnbooking.bookingobjecttype 
                                                    WHEN 1 THEN 0
                                                    WHEN 700 THEN 1
                                                END
    LEFT OUTER JOIN adsk_month_q_ranges_v02 AS ranges -- ON Ranges.FNC_CURRENTDATE = TRPLNBOOKINGDETAILS.BOOKEDDATE
    WHERE trplnbookingdetails.bookedseconds > 0
    GROUP BY 
        trplnbooking.projectid,trplnbookingdetails.bookeddate
      ),
    parent_child_key as (
    
    SELECT
    CASE
           WHEN lower(LSTDESC_16.VALUE) in ( 'is parent' ) THEN
               cast(tproject.uniqueid as string)
           WHEN lower(LSTDESC_16.VALUE) IN ( 'is master', 'is child' ) THEN
               CONCAT(CAST(tproject.parentid AS STRING))
           ELSE
               CAST(tproject.uniqueid AS STRING)
       END                                         AS parent_child_key
    ,dt
    , SUM(hrsact) as hrsact
    , SUM(hrsact_unapp) as hrsact_unapp
    , SUM(hrsact_nonbill) as hrsact_nonbill
    , SUM(hrsact_utilized) as hrsact_utilized
    , SUM(hrsact_utilized_unapp) as hrsact_utilized_unapp
    , SUM(hrsfcst_all) as hrsfcst_all
    , SUM(hrsfcst_billable) as hrsfcst_billable
    , SUM(hrsfcst_gen) as hrsfcst_gen
    , SUM(hrsfcst_soft) as hrsfcst_soft
    , SUM(hrsfcst_billable_soft) as hrsfcst_billable_soft
    , SUM(hrsfcst_gen_soft) as hrsfcst_gen_soft
    , SUM(hrsfcst_nonbill_gen_soft) as hrsfcst_nonbill_gen_soft
    FROM 
    combined c
        LEFT JOIN project AS  tproject on c.projectid = tproject.uniqueid
        LEFT JOIN projectcustfld  a On a.PROJECTID = tproject.uniqueid
        LEFT JOIN custlst AS LST_16  ON a.ADSK_MasterAgreement_ProjectType = LST_16.UNIQUEID 
        LEFT JOIN custlstdesc AS LSTDESC_16  ON LST_16.UNIQUEID = LSTDESC_16.CUSTLSTID AND LSTDESC_16.LANGUAGE = 0
where LSTDESC_16.VALUE in ('IS Parent','IS Child')
   GROUP BY
    parent_child_key
    ,dt
   ),
    
adsk_cm_labor_hrs_v02_stacked as (   
    
SELECT 
   CAST(c.projectid AS STRING) AS projectid
    ,  dt
    ,  hrsact
    ,  hrsact_unapp
    ,  hrsact_nonbill
    ,  hrsact_utilized
    ,  hrsact_utilized_unapp
    ,  hrsfcst_all
    ,  hrsfcst_billable
    ,  hrsfcst_gen
    ,  hrsfcst_soft
    ,  hrsfcst_billable_soft
    ,  hrsfcst_gen_soft
    ,  hrsfcst_nonbill_gen_soft
    FROM combined c
    LEFT JOIN project  tproject on c.projectid = tproject.uniqueid
    LEFT JOIN projectcustfld  a On a.PROJECTID = tproject.uniqueid
    LEFT JOIN custlst AS LST_16  ON a.ADSK_MasterAgreement_ProjectType = LST_16.UNIQUEID 
    LEFT JOIN custlstdesc AS LSTDESC_16  ON LST_16.UNIQUEID = LSTDESC_16.CUSTLSTID AND LSTDESC_16.LANGUAGE = 0
    where LSTDESC_16.VALUE not in ('IS Parent')
 union all
    
  SELECT
    parent_child_key as projectid
    ,  dt
    ,  hrsact
    ,  hrsact_unapp
    ,  hrsact_nonbill
    ,  hrsact_utilized
    ,  hrsact_utilized_unapp
    ,  hrsfcst_all
    ,  hrsfcst_billable
    ,  hrsfcst_gen
    ,  hrsfcst_soft
    ,  hrsfcst_billable_soft
    ,  hrsfcst_gen_soft
    ,  hrsfcst_nonbill_gen_soft
   FROM
   parent_child_key),
   


date_range AS (
  SELECT YEAR(DATEADD(YEAR, -10, CURRENT_DATE())) || '-02-01' AS start_date,
         DATEADD(YEAR, 2, CURRENT_DATE()) AS end_date,
        DATEDIFF(DAY, start_date, end_date) + 1   AS rng
),
date_sequence AS (
SELECT DATEADD(DAY, seq4(), start_date) AS dt
FROM date_range,
     TABLE(GENERATOR(ROWCOUNT => 5000)) 
ORDER BY dt
  ),
projects AS (  
SELECT
DISTINCT pd.PROJECTID
, ds.dt
FROM 
EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_details   pd
LEFT OUTER JOIN date_sequence ds
  ),
adsk_cm_labor_hrs_v02_stacked_final AS (
SELECT 
      p.projectid
    ,CASE
                  WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 2 AND 4 THEN TO_DATE(EXTRACT(YEAR FROM   p.dt)||'-02-01')
                  WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 5 AND 7 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-05-01')
                  WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 8 AND 10 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-08-01')
                  WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 11 AND 12 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-11-01')
                  ELSE TO_DATE(EXTRACT(YEAR FROM p.dt) - 1 ||'-11-01')
                END AS dt
    ,Sum(IFNULL(hrsact,0.00)) as hrsact_all
    ,sum(IFNULL(hrsfcst_billable,0.00)) as hrsfcst_billable_all
    ,sum(IFNULL(hrsfcst_billable_soft,0.00)) as hrsfcst_billable_soft_all
    ,SUM(IFNULL(CASE WHEN p.dt <= (DATE_TRUNC('W', CURRENT_DATE())-1) THEN hrsact
    ELSE hrsfcst_billable
    END,0.00)) AS HRS
    ,SUM( IFNULL(CASE WHEN p.dt < (DATE_TRUNC('W', CURRENT_DATE())-1) 
                                        THEN hrsact
    ELSE 0.00
    END,0.00)) AS HRS_ACTUAL
    ,SUM( IFNULL(CASE WHEN p.dt >= (DATE_TRUNC('W', CURRENT_DATE())-1) 
                                        THEN hrsfcst_billable
    ELSE 0.00
    END,0.00)) AS HRS_FCST_BILLABLE
    ,SUM( IFNULL(CASE WHEN p.dt >= (DATE_TRUNC('W', CURRENT_DATE())-1) 
                                        THEN hrsfcst_billable_soft
    ELSE 0.00
    END,0.00)) AS HRS_FCST_BILLABLE_SOFT
    ,SUM( IFNULL(CASE WHEN p.dt >= (DATE_TRUNC('W', CURRENT_DATE())-1)  AND p.dt < fnc_plus1qtrbegins
                                        THEN hrsfcst_billable
    ELSE 0.00
    END,0.00)) AS HRS_FCST_BILLABLE_REMAININGINQTR
      ,SUM( IFNULL(CASE WHEN p.dt >= (DATE_TRUNC('W', CURRENT_DATE())-1)  AND p.dt < fnc_plus1qtrbegins
                                        THEN hrsfcst_billable_soft
    ELSE 0.00
    END,0.00)) AS HRS_FCST_BILLABLE_REMAININGINQTR_SOFT
    
 FROM projects p
 LEFT JOIN adsk_cm_labor_hrs_v02_stacked l ON p.projectid = l.projectid and p.dt = l.dt
 LEFT OUTER JOIN adsk_month_q_ranges_v02 AS ranges
 GROUP BY
 p.projectid
 ,CASE
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 2 AND 4 THEN TO_DATE(EXTRACT(YEAR FROM   p.dt)||'-02-01')
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 5 AND 7 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-05-01')
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 8 AND 10 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-08-01')
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 11 AND 12 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-11-01')
              ELSE TO_DATE(EXTRACT(YEAR FROM p.dt) - 1 ||'-11-01')
            END)

SELECT
lh.*
, SUM(CASE WHEN dt <= TO_DATE(TO_VARCHAR(CASE WHEN MONTH(CURRENT_DATE()) = 1
                                                  THEN YEAR(DATEADD(year, -1, CURRENT_DATE()))
                                              ELSE YEAR(CURRENT_DATE()) END) || '-'
                                      || CASE WHEN MONTH(CURRENT_DATE()) IN (2, 3, 4) THEN '02-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (5, 6, 7) THEN '05-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (8, 9, 10) THEN '08-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (11, 12, 1) THEN '11-01'
                     ELSE NULL END)  THEN HRS_ACTUAL
      ELSE 0.00 END) OVER (PARTITION BY lh.projectid order by dt) AS hrsact_past_currentqtr
, SUM(CASE WHEN dt >= TO_DATE(TO_VARCHAR(CASE WHEN MONTH(CURRENT_DATE()) = 1
                                                  THEN YEAR(DATEADD(year, -1, CURRENT_DATE()))
                                              ELSE YEAR(CURRENT_DATE()) END) || '-'
                                      || CASE WHEN MONTH(CURRENT_DATE()) IN (2, 3, 4) THEN '02-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (5, 6, 7) THEN '05-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (8, 9, 10) THEN '08-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (11, 12, 1) THEN '11-01'
                     ELSE NULL END)  THEN HRS_FCST_BILLABLE
      ELSE 0.00 END) OVER (PARTITION BY lh.projectid order by dt) AS hrsfcst_future
,NULLIF(laborhrs.hrs_billable_eac,0.00) as hrs_billable_eac
FROM 
adsk_cm_labor_hrs_v02_stacked_final lh
LEFT JOIN adsk_cm_labor_hrs_v02 as laborhrs
ON laborhrs.projectid = lh.projectid
  );
[0m14:46:46.284789 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x166753010>]}
[0m14:46:46.285069 [info ] [Thread-1 (]: 33 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_project_budget_v02 . [[32mSUCCESS 1[0m in 1.34s]
[0m14:46:46.285225 [debug] [Thread-1 (]: Finished running node model.my_dbt_projects.adsk_cm_project_budget_v02_transform
[0m14:46:46.285349 [debug] [Thread-1 (]: Began running node model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_transform
[0m14:46:46.285456 [info ] [Thread-1 (]: 36 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_monthly_expect_labor_rev  [RUN]
[0m14:46:46.285698 [debug] [Thread-1 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_transform'
[0m14:46:46.285845 [debug] [Thread-1 (]: Began compiling node model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_transform
[0m14:46:46.288418 [debug] [Thread-1 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_transform"
[0m14:46:46.290403 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_transform (compile): 2023-08-21 14:46:46.285928 => 2023-08-21 14:46:46.290352
[0m14:46:46.290576 [debug] [Thread-1 (]: Began executing node model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_transform
[0m14:46:46.292623 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_transform"
[0m14:46:46.292725 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:46.292796 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:46:46.714143 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:46.715277 [debug] [Thread-3 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_local_cur_transform"
[0m14:46:46.718659 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_local_cur_transform"
[0m14:46:46.718793 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_local_cur_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_expect_labor_local_cur_rev
  
   as (
    
 /* ADSK_FN_CM_MONTHLY_EXPECT_LABOR_REV.sql
   @OverrideCurID   INT = NULL
  , @Placeholder01 INT = NULL
  , @Placeholder02 INT = NULL
  , @Placeholder03 INT = NULL
  , @Placeholder04 INT = NULL
 */

  with ttask_timesheet as (
 
 SELECT
   CASE
           WHEN lower(parent_child.adsk_master_projecttype) in ( 'is parent' ) THEN
               ttask.projectid  
           WHEN lower(parent_child.adsk_master_projecttype) IN ( 'is master', 'is child' ) THEN
               parent_child.parentid 
           ELSE
               ttask.projectid
       END                                                                                AS projectid      
     , TRUNC(ttimesheetentries.entrydate, 'month')                                         AS monthofexpectedlaborrev
     , (SUM(IFNULL(totaltime, 0.00)) / 3600.00)                                            AS hrsactthismonth
     ,ttimesheetentries.entrydate                                                          AS entrydate

FROM eio_publish.tenrox_private.ttimesheetentries ttimesheetentries
INNER JOIN eio_publish.tenrox_private.ttask ttask
    ON ttask.uniqueid = ttimesheetentries.taskuid
 LEFT JOIN
(SELECT  
 tproject.uniqueid AS projectid
 ,tproject.parentid as parentid
 ,LSTDESC_16.VALUE as adsk_master_projecttype
 
 FROM 
    eio_publish.tenrox_private.tproject  tproject
        LEFT JOIN eio_publish.tenrox_private.tprojectcustfld  a On a.PROJECTID = tproject.uniqueid
        LEFT JOIN eio_publish.tenrox_private.tcustlst AS LST_16  ON a.ADSK_MasterAgreement_ProjectType = LST_16.UNIQUEID 
        LEFT JOIN eio_publish.tenrox_private.tcustlstdesc AS LSTDESC_16  ON LST_16.UNIQUEID = LSTDESC_16.CUSTLSTID AND LSTDESC_16.LANGUAGE = 0
) parent_child ON parent_child.projectid = ttask.projectid

WHERE ttimesheetentries.approved = 1
    AND ttimesheetentries.billable = 1
     and TRUNC(ttimesheetentries.entrydate, 'month') < TRUNC(CURRENT_DATE (), 'month') --and parent_child.parentid  IN (15007)
GROUP BY
 CASE
           WHEN lower(parent_child.adsk_master_projecttype) in ( 'is parent' ) THEN
               ttask.projectid  
           WHEN lower(parent_child.adsk_master_projecttype) IN ( 'is master', 'is child' ) THEN
               parent_child.parentid 
           ELSE
               ttask.projectid
       END                                                                                   
     --,ttask.projectid                                                                     
     , TRUNC(ttimesheetentries.entrydate, 'month')
   ,ttimesheetentries.entrydate    
     )
 
 
 SELECT 
    ttask.projectid     AS projectid
    ,ttask.monthofexpectedlaborrev AS monthofexpectedlaborrev
    ,sum(hrsactthismonth) AS hrsactthismonth
    ,NULLIF(labor_hrs.hrs_billable_eac, 0.00)                                            AS hrs_eac
    ,SUM(hrsactthismonth) / NULLIF(labor_hrs.hrs_billable_eac, 0.00) AS monthslaborpct
    ,project_budget.currentbillabletime                                                  AS totallaborrevenue
    ,IFNULL(
        (((SUM(hrsactthismonth) / NULLIF(labor_hrs.hrs_billable_eac, 0.00)) * fxlookup.rate)
                * project_budget.currentbillabletime), 0.00)                             AS expectedlaborrevenue
    ,fxlookup.rate                                                                       AS fxrateused
    ,COALESCE(project_details.projectcurrencyid, lubasecurrencyid)                       AS fromcur
    ,COALESCE(overridecurid, project_details.projectcurrencyid)                          AS tocur
FROM ttask_timesheet AS ttask
LEFT JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_labor_hrs_v02 AS labor_hrs
    ON labor_hrs.projectid = ttask.projectid
LEFT JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_budget_local_cur AS project_budget
    ON project_budget.projectid = ttask.projectid
LEFT JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_details AS project_details
    ON project_details.projectid = ttask.projectid
 LEFT OUTER JOIN (
               SELECT
                   IFNULL(uniqueid, 1) AS lubasecurrencyid
               FROM eio_publish.tenrox_private.tcurrency 
               WHERE  currencycode = 'USD'
               ) AS basecur
-- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN (
                SELECT
                    IFNULL(uniqueid, 1)      AS overridecurid
                FROM eio_publish.tenrox_private.tcurrency
                WHERE currencycode = 'USD'
                ) usdcurid
-- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate AS fxlookup
    ON fxlookup.basecurrencyid = COALESCE(project_details.projectcurrencyid, basecur.lubasecurrencyid)
    AND fxlookup.quotecurrencyid = COALESCE(NULL, project_details.projectcurrencyid)
    AND ttask.entrydate BETWEEN fxlookup.startdate AND fxlookup.enddate

GROUP BY
ttask.projectid
    , ttask.monthofexpectedlaborrev
    , NULLIF(labor_hrs.hrs_billable_eac, 0.00)
    , project_budget.currentbillabletime
    , fxlookup.rate
    , COALESCE(project_details.projectcurrencyid, lubasecurrencyid)
    , COALESCE(overridecurid, project_details.projectcurrencyid)
  );
[0m14:46:47.006015 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:47.006865 [debug] [Thread-1 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_transform"
[0m14:46:47.008969 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_transform"
[0m14:46:47.009106 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_expect_labor_rev
  
   as (
    
 /* ADSK_FN_CM_MONTHLY_EXPECT_LABOR_REV.sql
   @OverrideCurID   INT = NULL
  , @Placeholder01 INT = NULL
  , @Placeholder02 INT = NULL
  , @Placeholder03 INT = NULL
  , @Placeholder04 INT = NULL
 */
SELECT
     ttask.projectid                                                                       AS projectid
     , TRUNC(ttimesheetentries.entrydate, 'month')                                         AS monthofexpectedlaborrev
     , (SUM(IFNULL(totaltime, 0.00)) / 3600.00)                                            AS hrsactthismonth
     , NULLIF(labor_hrs.hrs_billable_eac, 0.00)                                            AS hrs_eac
     , (SUM(IFNULL(totaltime, 0.00)) / 3600.00) / NULLIF(labor_hrs.hrs_billable_eac, 0.00) AS monthslaborpct
     , project_budget.currentbillabletime                                                  AS totallaborrevenue
     , IFNULL(((((SUM(IFNULL(totaltime, 0.00)) / 3600.00) 
         / NULLIF(labor_hrs.hrs_billable_eac, 0.00)) * fxlookup.rate)
                * project_budget.currentbillabletime), 0.00)                               AS expectedlaborrevenue
     , fxlookup.rate                                                                       AS fxrateused
     , COALESCE(project_details.projectcurrencyid, lubasecurrencyid)                       AS fromcur
     , COALESCE(overridecurid, project_details.projectcurrencyid)                          AS tocur
     , 8                                                                                   AS sqlversion_monthly_expect_labor_rev
FROM eio_publish.tenrox_private.ttimesheetentries ttimesheetentries
INNER JOIN eio_publish.tenrox_private.ttask ttask
    ON ttask.uniqueid = ttimesheetentries.taskuid 
LEFT JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_labor_hrs_v02 AS labor_hrs 
    ON labor_hrs.projectid = ttask.projectid 
LEFT JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_budget AS project_budget 
    ON project_budget.projectid = ttask.projectid 
LEFT JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_details AS project_details 
    ON project_details.projectid = ttask.projectid
LEFT OUTER JOIN (
               SELECT
                    IFNULL(uniqueid, 1) AS lubasecurrencyid
                FROM eio_publish.tenrox_private.tcurrency
                WHERE currencycode = 'USD'
               ) AS basecur
-- start: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN (
                SELECT
                    IFNULL(uniqueid, 1) AS overridecurid
                FROM eio_publish.tenrox_private.tcurrency
                WHERE currencycode = 'USD') usdcurid
-- end: copy setup from CUST_ADSK_MARGINVARIANCE for @USDCurID = @OverrideCurID 
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.fcurrqexchrate AS fxlookup
    ON fxlookup.basecurrencyid = COALESCE(project_details.projectcurrencyid, basecur.lubasecurrencyid) 
    AND fxlookup.quotecurrencyid = COALESCE(overridecurid, project_details.projectcurrencyid) 
    AND ttimesheetentries.entrydate BETWEEN fxlookup.startdate AND fxlookup.enddate
WHERE ttimesheetentries.approved = 1 
    AND ttimesheetentries.billable = 1 
    AND TRUNC(ttimesheetentries.entrydate, 'month') < TRUNC(CURRENT_DATE(), 'month')
GROUP BY
    ttask.projectid
    , TRUNC(ttimesheetentries.entrydate, 'month')
    , nullif(labor_hrs.hrs_billable_eac, 0.00)
    , project_budget.currentbillabletime
    , fxlookup.rate
    , COALESCE(project_details.projectcurrencyid
    , lubasecurrencyid)
    , COALESCE(overridecurid, project_details.projectcurrencyid)
  );
[0m14:46:47.099013 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:47.100030 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_labor_hrs_v02_stacked_transform (execute): 2023-08-21 14:46:45.393496 => 2023-08-21 14:46:47.100005
[0m14:46:47.100154 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_labor_hrs_v02_stacked_transform: Close
[0m14:46:47.346996 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165bade90>]}
[0m14:46:47.347300 [info ] [Thread-2 (]: 34 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_labor_hrs_v02_stacked  [[32mSUCCESS 1[0m in 1.96s]
[0m14:46:47.347467 [debug] [Thread-2 (]: Finished running node model.my_dbt_projects.adsk_cm_labor_hrs_v02_stacked_transform
[0m14:46:47.347600 [debug] [Thread-2 (]: Began running node model.my_dbt_projects.cust_adsk_servicesimpact_projectdetails_transform
[0m14:46:47.347715 [info ] [Thread-2 (]: 37 of 47 START sql view model TENROX_TRANSFORM.cust_adsk_servicesimpact_projectdetails  [RUN]
[0m14:46:47.347974 [debug] [Thread-2 (]: Acquiring new snowflake connection 'model.my_dbt_projects.cust_adsk_servicesimpact_projectdetails_transform'
[0m14:46:47.348116 [debug] [Thread-2 (]: Began compiling node model.my_dbt_projects.cust_adsk_servicesimpact_projectdetails_transform
[0m14:46:47.351360 [debug] [Thread-2 (]: Writing injected SQL for node "model.my_dbt_projects.cust_adsk_servicesimpact_projectdetails_transform"
[0m14:46:47.352462 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.cust_adsk_servicesimpact_projectdetails_transform (compile): 2023-08-21 14:46:47.348204 => 2023-08-21 14:46:47.352431
[0m14:46:47.352564 [debug] [Thread-2 (]: Began executing node model.my_dbt_projects.cust_adsk_servicesimpact_projectdetails_transform
[0m14:46:47.354352 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.cust_adsk_servicesimpact_projectdetails_transform"
[0m14:46:47.354495 [debug] [Thread-2 (]: On model.my_dbt_projects.cust_adsk_servicesimpact_projectdetails_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.cust_adsk_servicesimpact_projectdetails_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:47.354564 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m14:46:47.460447 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:47.461620 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_local_cur_transform (execute): 2023-08-21 14:46:46.022467 => 2023-08-21 14:46:47.461595
[0m14:46:47.461892 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_local_cur_transform: Close
[0m14:46:47.719255 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x166adb010>]}
[0m14:46:47.719595 [info ] [Thread-3 (]: 35 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_monthly_expect_labor_local_cur_rev  [[32mSUCCESS 1[0m in 1.70s]
[0m14:46:47.719764 [debug] [Thread-3 (]: Finished running node model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_local_cur_transform
[0m14:46:47.719902 [debug] [Thread-3 (]: Began running node model.my_dbt_projects.cust_adsk_utilization_hours_transform
[0m14:46:47.720013 [info ] [Thread-3 (]: 38 of 47 START sql view model TENROX_TRANSFORM.cust_adsk_utilization_hours ..... [RUN]
[0m14:46:47.720558 [debug] [Thread-3 (]: Acquiring new snowflake connection 'model.my_dbt_projects.cust_adsk_utilization_hours_transform'
[0m14:46:47.720727 [debug] [Thread-3 (]: Began compiling node model.my_dbt_projects.cust_adsk_utilization_hours_transform
[0m14:46:47.723243 [debug] [Thread-3 (]: Writing injected SQL for node "model.my_dbt_projects.cust_adsk_utilization_hours_transform"
[0m14:46:47.724642 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.cust_adsk_utilization_hours_transform (compile): 2023-08-21 14:46:47.720836 => 2023-08-21 14:46:47.724602
[0m14:46:47.724767 [debug] [Thread-3 (]: Began executing node model.my_dbt_projects.cust_adsk_utilization_hours_transform
[0m14:46:47.726712 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.cust_adsk_utilization_hours_transform"
[0m14:46:47.726807 [debug] [Thread-3 (]: On model.my_dbt_projects.cust_adsk_utilization_hours_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.cust_adsk_utilization_hours_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:47.726879 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m14:46:47.757480 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:47.758715 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_transform (execute): 2023-08-21 14:46:46.290647 => 2023-08-21 14:46:47.758689
[0m14:46:47.758844 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_transform: Close
[0m14:46:48.022538 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x166710710>]}
[0m14:46:48.022855 [info ] [Thread-1 (]: 36 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_monthly_expect_labor_rev  [[32mSUCCESS 1[0m in 1.74s]
[0m14:46:48.023030 [debug] [Thread-1 (]: Finished running node model.my_dbt_projects.adsk_cm_monthly_expect_labor_rev_transform
[0m14:46:48.023154 [debug] [Thread-1 (]: Began running node model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_stacked_transform
[0m14:46:48.023260 [info ] [Thread-1 (]: 39 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_monthly_deferred_local_cur_rev_stacked  [RUN]
[0m14:46:48.023723 [debug] [Thread-1 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_stacked_transform'
[0m14:46:48.023841 [debug] [Thread-1 (]: Began compiling node model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_stacked_transform
[0m14:46:48.026415 [debug] [Thread-1 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_stacked_transform"
[0m14:46:48.027303 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_stacked_transform (compile): 2023-08-21 14:46:48.023904 => 2023-08-21 14:46:48.027260
[0m14:46:48.027437 [debug] [Thread-1 (]: Began executing node model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_stacked_transform
[0m14:46:48.029307 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_stacked_transform"
[0m14:46:48.029387 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_stacked_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:48.029453 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:46:48.034955 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:48.035871 [debug] [Thread-2 (]: Writing runtime sql for node "model.my_dbt_projects.cust_adsk_servicesimpact_projectdetails_transform"
[0m14:46:48.038488 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.cust_adsk_servicesimpact_projectdetails_transform"
[0m14:46:48.038611 [debug] [Thread-2 (]: On model.my_dbt_projects.cust_adsk_servicesimpact_projectdetails_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.cust_adsk_servicesimpact_projectdetails_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.cust_adsk_servicesimpact_projectdetails
  
   as (
    

/* CUST_ADSK_SERVICESIMPACT_PROJECTDETAILS 
  @BatchSize     INT = 10000
  , @BatchNumber INT = 0
  @SQLScriptVersion = 11
  @ReportStartDate = '1990-02-01'
  @ReportStartDate = DATEADD(MONTH, DATEDIFF(MONTH, 0, @ReportStartDate), 0)  --> this is just '1990-02-01'
  
  InitialWorkDate and FinalWorkDate always 
*/

-- TMP_CUST_ADSK_SERVICESIMPACT_PROJECTDETAILS
WITH tmp_cust_adsk_servicesimpact_projectdetails AS (
    SELECT 
        ROW_NUMBER() OVER ( ORDER BY project_details.projectid)   AS rownumber
        , project_details.projectid                               AS projectid
        , project_details.clientname                              AS clientname
        , tclient.id                                              AS clientcsn
        , project_details.projectname                             AS projectname
        , project_details.projectcode                             AS projectcode
        , project_budget.currentbillabletotal                     AS planrevenue
        , udfs.adsk_geo_name                                      AS geo
        , IFNULL(fcsthrs.hrsfcst, 0.0)                            AS hrsetc
        , project_details.projectstartdate                        AS projectstartdate
        , tbl_workdates.initialworkdate                           AS initialworkdate
        , tbl_workdates.finalworkdate                             AS finalworkdate
        , project_details.projectstate                            AS projectstate
        , 11                                                      AS sqlscriptversion
        , udfs.adsk_contractstartdate                             AS contract_start_date
        , udfs.adsk_contractenddate                               AS contract_end_date
      FROM EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_details AS project_details
      INNER JOIN EIO_INGEST.TENROX_TRANSFORM.tprojectcustfld_view AS udfs
          ON udfs.projectid = project_details.projectid 
      INNER JOIN eio_publish.tenrox_private.tclient tclient
          ON tclient.uniqueid = project_details.clientid 
      LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_budget AS project_budget
          ON project_budget.projectid = project_details.projectid
      LEFT OUTER JOIN (SELECT
                         trplnbooking.projectid                                           AS projectid
                         , SUM(IFNULL(trplnbookingdetails.bookedseconds, 0.00)) / 3600.00 AS hrsfcst
                    FROM eio_publish.tenrox_private.trplnbooking trplnbooking
                    INNER JOIN eio_publish.tenrox_private.trplnbookingdetails trplnbookingdetails
                        ON trplnbookingdetails.bookingid = trplnbooking.uniqueid
                    INNER JOIN eio_publish.tenrox_private.trplnbookingattributes trplnbookingattributes
                        ON trplnbookingattributes.bookingid = trplnbooking.uniqueid
                    WHERE trplnbookingdetails.bookeddate >= DATE'1990-02-01'
                        AND trplnbooking.bookingtype = 1
                    GROUP BY trplnbooking.projectid) fcsthrs
                   ON fcsthrs.projectid = project_details.projectid
      LEFT OUTER JOIN (SELECT
                        tproject.uniqueid               AS projectid
                        , MIN(entrydate)               AS initialworkdate
                        , MAX(entrydate)               AS finalworkdate
                      FROM eio_publish.tenrox_private.ttimesheetentries ttimesheetentries
                      JOIN eio_publish.tenrox_private.ttask ttask
                          ON ttimesheetentries.taskuid = ttask.uniqueid
                      JOIN eio_publish.tenrox_private.tproject tproject 
                          ON tproject.uniqueid = ttask.projectid
                      WHERE ttimesheetentries.approved = 1
                      GROUP BY tproject.uniqueid) tbl_workdates
                        ON tbl_workdates.projectid = project_details.projectid
      WHERE project_details.projectid NOT IN (SELECT uniqueid
                                              FROM eio_publish.tenrox_private.tproject tproject 
                                              WHERE releasealias = 'A-ADMIN-00001')
            -- AND PROJECT_DETAILS.ProjectState NOT IN ('SCO-Funnel', 'Funnel', 'Booking Credit', 'FY14 Booking Credit'
            -- , 'SCO-Discarded', 'Discarded', 'Active-Internal-Utilized', 'Active-Internal-Non-Utilized'
            -- , 'Bookings Program', 'PA Review â€“ Booking', 'PA - Conversion Review')
      ORDER BY project_details.projectid
)

-- Select from TMP_CUST_ADSK_SERVICESIMPACT_PROJECTDETAILS
SELECT 
    rownumber
     , projectid
     , clientname
     , clientcsn
     , projectname
     , projectcode
     , planrevenue
     , geo
     , hrsetc
     , projectstartdate
     , initialworkdate
     , finalworkdate
     , projectstate
     , 0::BOOLEAN AS wasnewtable
     , sqlscriptversion
     , contract_start_date
     , contract_end_date
FROM tmp_cust_adsk_servicesimpact_projectdetails 
    -- WHERE RowNumber >= (0 * 10000) + 1
    -- AND RowNumber < (0 * 10000) + 10000 + 1
ORDER BY rownumber
  );
[0m14:46:48.415207 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:48.416230 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.cust_adsk_servicesimpact_projectdetails_transform (execute): 2023-08-21 14:46:47.352623 => 2023-08-21 14:46:48.416206
[0m14:46:48.416342 [debug] [Thread-2 (]: On model.my_dbt_projects.cust_adsk_servicesimpact_projectdetails_transform: Close
[0m14:46:48.424938 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:48.425634 [debug] [Thread-3 (]: Writing runtime sql for node "model.my_dbt_projects.cust_adsk_utilization_hours_transform"
[0m14:46:48.428272 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.cust_adsk_utilization_hours_transform"
[0m14:46:48.428359 [debug] [Thread-3 (]: On model.my_dbt_projects.cust_adsk_utilization_hours_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.cust_adsk_utilization_hours_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.cust_adsk_utilization_hours
  
   as (
    

/* CUST_ADSK_UTILIZATION_HOURS.sql
  @BatchSize     INT = 10000
  , @BatchNumber INT = 0
  , @RangeBegin  DATETIME = '2014-02-01'
  , @SQLScriptVersion = 3
  
1) @RangeEnd = DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), -DATEPART(DW, GETDATE()) + 1)
-- This is just getting the date of the start of the week (Sunday) for the current date
Ex. if date = '2022-12-02' (Friday of that week), value returned is '2022-11-27' (Sunday of that same week)
Snowflake is iso week starts Monday. Then -1 day to get the Sunday:
conversion: DATEADD(day, -1, DATE_TRUNC('week', current_date()))

2) DATEADD(MONTH, DATEDIFF(MONTH, 0, @RangeEnd), 0) -> gives the last day of month immediately before the @RangeEnd

3) DATEADD(MONTH, DATEDIFF(MONTH, 0, TSMain.EntryDate), 0)  -> gives the first day of the month

Uses temp table: TMP_CUST_ADSK_UTILIZATION_HOURS  

*/ 
WITH tmp_cust_adsk_utilization_hours AS (
    SELECT
        ROW_NUMBER() 
            OVER ( 
                ORDER BY resource_details.resourceid
                    , resource_details.resourcefullname_rev
                    , TRUNC(tsmain.entrydate, 'month')
                    , project_details.projectcode
                    , project_details.projectname
                    , tsmain.taskname
                    , tsmain.billable
                    , tsmain.utilized
                    , tsmain.entryisapproved
                    , tsmain.taskcode 
                )                                                       AS rownumber
        , resource_details.resourceid                                   AS userid
        , resource_details.resourcefullname_rev                         AS username
        , TRUNC(tsmain.entrydate, 'month')                              AS entrydate
        , DATEADD(day, -1,
                DATEADD(day, -1, DATE_TRUNC('week', CURRENT_DATE())))   AS limitdate
        , SUM(IFNULL(tsmain.totaltime, 0) / 3600.00)                    AS totaltime
        , project_details.projectcode                                   AS projectcode
        , project_details.projectname                                   AS projectname
        , tsmain.taskname                                               AS taskname
        , tsmain.billable                                               AS billable
        , tsmain.utilized                                               AS utilized
        , tsmain.customer_utilized                                      AS customer_utilized
        , tsmain.entryisapproved                                        AS entryisapproved
        , tsmain.taskcode                                               AS taskcode
        , 3                                                             AS sqlscriptversion
  FROM       (SELECT 
                     ttask.projectid                AS projectid
                     , ttimesheetentries.taskuid    AS taskid
                     , ttimesheetentries.useruid    AS userid
                     , ttimesheetentries.entrydate  AS entrydate
                     , ttimesheetentries.totaltime  AS totaltime
                     , ttimesheetentries.uniqueid   AS entryid
                     , ttask.billable               AS billable
                     , ttask.funded                 AS utilized
                     , ttask.custom1                AS customer_utilized
                     , ttimesheetentries.approved   AS entryisapproved
                     , ttask.name                   AS taskname
                     , tworktype.name               AS taskcode
              FROM eio_publish.tenrox_private.ttask ttask
              INNER JOIN eio_publish.tenrox_private.ttimesheetentries ttimesheetentries
                ON ttimesheetentries.taskuid = ttask.uniqueid 
              LEFT OUTER JOIN eio_publish.tenrox_private.tworktype tworktype 
                ON tworktype.uniqueid = ttask.worktypeid
            ) tsmain
  INNER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_details AS project_details
    ON project_details.projectid = tsmain.projectid 
  INNER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_resource_details AS resource_details 
    ON resource_details.resourceid = tsmain.userid 
    AND resource_details.isrole = 0
  WHERE tsmain.entrydate >= DATE '2012-09-01' 
    AND tsmain.entrydate < DATEADD(DAY, -1, DATE_TRUNC('week', CURRENT_DATE()))
  GROUP BY 
    resource_details.resourceid
    , resource_details.resourcefullname_rev
    , TRUNC(tsmain.entrydate, 'month')
    , project_details.projectcode
    , project_details.projectname
    , tsmain.taskname
    , tsmain.billable
    , tsmain.utilized
    , tsmain.customer_utilized
    , tsmain.entryisapproved
    , tsmain.taskcode
  ORDER BY
    resource_details.resourceid
    , resource_details.resourcefullname_rev
    , TRUNC(tsmain.entrydate, 'month')
    , project_details.projectcode
    , project_details.projectname
    , tsmain.taskname
    , tsmain.billable
    , tsmain.utilized
    , tsmain.customer_utilized
    , tsmain.entryisapproved
    , tsmain.taskcode
)

SELECT 
     rownumber
     , userid
     , username
     , entrydate
     , limitdate
     , totaltime
     , projectcode
     , projectname
     , taskname
     , billable
     , utilized
     , customer_utilized
     , entryisapproved
     , taskcode
     , 1::BOOLEAN AS wasnewtable
     , sqlscriptversion
FROM tmp_cust_adsk_utilization_hours
     -- WHERE  RowNumber BETWEEN 1 AND 10000
ORDER BY rownumber
  );
[0m14:46:48.667111 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x166738cd0>]}
[0m14:46:48.667467 [info ] [Thread-2 (]: 37 of 47 OK created sql view model TENROX_TRANSFORM.cust_adsk_servicesimpact_projectdetails  [[32mSUCCESS 1[0m in 1.32s]
[0m14:46:48.667656 [debug] [Thread-2 (]: Finished running node model.my_dbt_projects.cust_adsk_servicesimpact_projectdetails_transform
[0m14:46:48.667792 [debug] [Thread-2 (]: Began running node model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_transform
[0m14:46:48.667973 [info ] [Thread-2 (]: 40 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_monthly_deferred_local_cur_rev  [RUN]
[0m14:46:48.668234 [debug] [Thread-2 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_transform'
[0m14:46:48.668326 [debug] [Thread-2 (]: Began compiling node model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_transform
[0m14:46:48.670754 [debug] [Thread-2 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_transform"
[0m14:46:48.672211 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_transform (compile): 2023-08-21 14:46:48.668395 => 2023-08-21 14:46:48.672171
[0m14:46:48.672335 [debug] [Thread-2 (]: Began executing node model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_transform
[0m14:46:48.675242 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_transform"
[0m14:46:48.675337 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:48.675411 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m14:46:48.745930 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:48.747101 [debug] [Thread-1 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_stacked_transform"
[0m14:46:48.750606 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_stacked_transform"
[0m14:46:48.750765 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_stacked_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_deferred_local_cur_rev_stacked
  
   as (
    


WITH date_range AS (
  SELECT YEAR(DATEADD(YEAR, -10, CURRENT_DATE())) || '-02-01' AS start_date,
         DATEADD(YEAR, 2, CURRENT_DATE()) AS end_date,
        DATEDIFF(DAY, start_date, end_date) + 1   AS rng
),
date_sequence AS (
SELECT DATEADD(DAY, seq4(), start_date) AS dt
FROM date_range,
     TABLE(GENERATOR(ROWCOUNT => 5000)) 
ORDER BY dt
  ),

project AS
(
  SELECT
  *
  FROM
  eio_publish.tenrox_private.tproject
),
projects AS (  
SELECT
DISTINCT pd.uniqueid AS PROJECTID
, TRUNC(ds.dt,'MONTH') as dt
FROM 
project AS  pd
LEFT OUTER JOIN date_sequence ds
  ),

fcalperiod AS
(
  SELECT
  *
  FROM
  eio_publish.tenrox_private.tfcalperiod
),

adsk_cm_monthly_expect_labor_local_cur_rev AS
(
    SELECT
    *
    FROM
    EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_expect_labor_local_cur_rev
),

adsk_cm_monthly_chrg_rev_local_cur AS
(
  SELECT
    *
  FROM
  EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_chrg_rev_local_cur
),
adsk_cm_monthly_rec_local_cur_rev AS
(
  SELECT
    *
  FROM
  EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_rec_local_cur_rev
),

  
deffered_rev as

(
    SELECT 
       IFNULL(calitems.projectid, monthly_rec_rev.projectid)                                                                                      AS projectid
       , IFNULL(calitems.monthtoinclude, monthly_rec_rev.monthrecognized)                                                                          AS revenuemonth
       , IFNULL(monthly_chrg_rev.monthschrgrev_allbillable, 0.00)                                                                                  AS chrgrevenue
       , IFNULL(monthly_expect_labor_rev.expectedlaborrevenue, 0.00)                                                                               AS expectedlaborrevenue
       , IFNULL(monthly_chrg_rev.monthschrgrev_allbillable, 0.00)
          + IFNULL(monthly_expect_labor_rev.expectedlaborrevenue, 0.00)                                                                            AS totalexpectedrevenue
       , IFNULL(monthly_rec_rev.recognizedrevenue, 0.00)                                                                                           AS recognizedrevenue
       , IFNULL(monthly_rec_rev.recognizedrevenue, 0.00) - (IFNULL(monthly_chrg_rev.monthschrgrev_allbillable, 0.00)
          + IFNULL(monthly_expect_labor_rev.expectedlaborrevenue, 0.00))                                                                           AS deferredrevenue
       , SUM((IFNULL(monthly_chrg_rev.monthschrgrev_allbillable, 0.00) + IFNULL(monthly_expect_labor_rev.expectedlaborrevenue, 0.00))
                     - IFNULL(monthly_rec_rev.recognizedrevenue, 0.00))
             OVER ( PARTITION BY IFNULL(calitems.projectid, monthly_rec_rev.projectid))                                                            AS totaldeferredrevenue
       , 9                                                                                                                                         AS sqlversion_monthly_deferred_rev
    FROM            (SELECT
                      tproject.uniqueid AS projectid
                      , tfcalperiod.startdate AS monthtoinclude
                    FROM fcalperiod AS tfcalperiod
                        INNER JOIN project AS tproject
                                ON tfcalperiod.startdate >= trunc(tproject.startdate, 'MONTH') 
                                AND tfcalperiod.startdate <= CASE 
                                                                WHEN tproject.enddate > dateadd('MONTH', 1, TRUNC(CURRENT_DATE (), 'MONTH')) 
                                                                    THEN DATEADD('MONTH', 1, TRUNC(CURRENT_DATE (), 'MONTH')) 
                                                                ELSE tproject.enddate 
                                                            END 
                                AND tfcalperiod.periodtype = 'M' 
                                AND tfcalperiod.calid = 4) calitems
    FULL OUTER JOIN adsk_cm_monthly_expect_labor_local_cur_rev AS monthly_expect_labor_rev
        ON monthly_expect_labor_rev.projectid = calitems.projectid 
        AND monthly_expect_labor_rev.monthofexpectedlaborrev = calitems.monthtoinclude 
    FULL OUTER JOIN adsk_cm_monthly_chrg_rev_local_cur AS monthly_chrg_rev 
        ON monthly_chrg_rev.projectid = calitems.projectid 
        AND monthly_chrg_rev.monthofchrgrev < TRUNC(CURRENT_DATE (), 'MONTH') 
        AND monthly_chrg_rev.monthofchrgrev = calitems.monthtoinclude
    FULL OUTER JOIN (SELECT
                      projectid
                      , monthrecognized
                      , recognizedrevenue
                    FROM adsk_cm_monthly_rec_local_cur_rev
                    WHERE  monthrecognized IS NOT NULL) monthly_rec_rev
                ON monthly_rec_rev.projectid = calitems.projectid
               AND monthly_rec_rev.monthrecognized = calitems.monthtoinclude
    WHERE           COALESCE(monthly_expect_labor_rev.projectid, monthly_chrg_rev.projectid, monthly_rec_rev.projectid) IS NOT NULL
   and  IFNULL(calitems.projectid, monthly_rec_rev.projectid) 
),

deffered_rev_sum as (
SELECT 
p.projectid
,CASE
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 2 AND 4 THEN TO_DATE(EXTRACT(YEAR FROM   p.dt)||'-02-01')
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 5 AND 7 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-05-01')
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 8 AND 10 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-08-01')
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 11 AND 12 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-11-01')
              ELSE TO_DATE(EXTRACT(YEAR FROM p.dt) - 1 ||'-11-01')
            END                                                                                                             AS dt
,sum(IFNULL(chrgrevenue,0.00)) AS chrgrevenue
,sum(IFNULL(expectedlaborrevenue,0.00)) AS expectedlaborrevenue
,sum(IFNULL(totalexpectedrevenue,0.00)) AS totalexpectedrevenue
,sum(IFNULL(recognizedrevenue,0.00)) AS recognizedrevenue
,sum(IFNULL(deferredrevenue,0.00)) AS deferredrevenue
--,IFNULL(totaldeferredrevenue,0.00) AS totaldeferredrevenue

FROM projects p 
LEFT JOIN deffered_rev r ON p.projectid = r.projectid AND DATE(p.dt) = DATE(r.revenuemonth)


group by
p.projectid
,CASE
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 2 AND 4 THEN TO_DATE(EXTRACT(YEAR FROM   p.dt)||'-02-01')
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 5 AND 7 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-05-01')
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 8 AND 10 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-08-01')
              WHEN EXTRACT(MONTH FROM p.dt) BETWEEN 11 AND 12 THEN TO_DATE(EXTRACT(YEAR FROM p.dt)||'-11-01')
              ELSE TO_DATE(EXTRACT(YEAR FROM p.dt) - 1 ||'-11-01')
            END
--,totaldeferredrevenue
  
  ),
  
 deffered_rev_final
 AS
 (
  
 SELECT *,
 SUM((IFNULL(chrgrevenue, 0.00) + IFNULL(expectedlaborrevenue, 0.00))
                     - IFNULL(recognizedrevenue, 0.00))
             OVER ( PARTITION BY projectid)                                                            AS totaldeferredrevenue
 FROM deffered_rev_sum
   
   )
  
SELECT 
*
FROM 
deffered_rev_final
  );
[0m14:46:48.827996 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 0 seconds
[0m14:46:48.829134 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.cust_adsk_utilization_hours_transform (execute): 2023-08-21 14:46:47.724835 => 2023-08-21 14:46:48.829104
[0m14:46:48.829265 [debug] [Thread-3 (]: On model.my_dbt_projects.cust_adsk_utilization_hours_transform: Close
[0m14:46:49.085114 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165f87350>]}
[0m14:46:49.085420 [info ] [Thread-3 (]: 38 of 47 OK created sql view model TENROX_TRANSFORM.cust_adsk_utilization_hours  [[32mSUCCESS 1[0m in 1.36s]
[0m14:46:49.085574 [debug] [Thread-3 (]: Finished running node model.my_dbt_projects.cust_adsk_utilization_hours_transform
[0m14:46:49.085697 [debug] [Thread-3 (]: Began running node model.my_dbt_projects.adsk_cm_monthly_deferred_rev_transform
[0m14:46:49.086058 [info ] [Thread-3 (]: 41 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_monthly_deferred_rev .... [RUN]
[0m14:46:49.086479 [debug] [Thread-3 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_monthly_deferred_rev_transform'
[0m14:46:49.086589 [debug] [Thread-3 (]: Began compiling node model.my_dbt_projects.adsk_cm_monthly_deferred_rev_transform
[0m14:46:49.088953 [debug] [Thread-3 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_transform"
[0m14:46:49.089641 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_deferred_rev_transform (compile): 2023-08-21 14:46:49.086654 => 2023-08-21 14:46:49.089605
[0m14:46:49.089745 [debug] [Thread-3 (]: Began executing node model.my_dbt_projects.adsk_cm_monthly_deferred_rev_transform
[0m14:46:49.091719 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_transform"
[0m14:46:49.091803 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_monthly_deferred_rev_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:49.091866 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m14:46:49.421150 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:49.422183 [debug] [Thread-2 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_transform"
[0m14:46:49.424605 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_transform"
[0m14:46:49.424703 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_deferred_local_cur_rev
  
   as (
    
/* ADSK_FN_CM_MONTHLY_DEFERRED_REV
  @OverrideCurID   INT = NULL
  , @Placeholder02 INT = NULL
  , @Placeholder03 INT = NULL
  , @Placeholder04 INT = NULL
  , @Placeholder05 INT = NULL
*/
    SELECT 
       IFNULL(calitems.projectid, monthly_rec_rev.projectid)                                                                                      AS projectid
       , IFNULL(calitems.monthtoinclude, monthly_rec_rev.monthrecognized)                                                                          AS revenuemonth
       , IFNULL(monthly_chrg_rev.monthschrgrev_allbillable, 0.00)                                                                                  AS chrgrevenue
       , IFNULL(monthly_expect_labor_rev.expectedlaborrevenue, 0.00)                                                                               AS expectedlaborrevenue
       , IFNULL(monthly_chrg_rev.monthschrgrev_allbillable, 0.00)
          + IFNULL(monthly_expect_labor_rev.expectedlaborrevenue, 0.00)                                                                            AS totalexpectedrevenue
       , IFNULL(monthly_rec_rev.recognizedrevenue, 0.00)                                                                                           AS recognizedrevenue
       , IFNULL(monthly_rec_rev.recognizedrevenue, 0.00) - (IFNULL(monthly_chrg_rev.monthschrgrev_allbillable, 0.00)
          + IFNULL(monthly_expect_labor_rev.expectedlaborrevenue, 0.00))                                                                           AS deferredrevenue
       , SUM((IFNULL(monthly_chrg_rev.monthschrgrev_allbillable, 0.00) + IFNULL(monthly_expect_labor_rev.expectedlaborrevenue, 0.00))
                     - IFNULL(monthly_rec_rev.recognizedrevenue, 0.00))
             OVER ( PARTITION BY IFNULL(calitems.projectid, monthly_rec_rev.projectid))                                                            AS totaldeferredrevenue
       , 9                                                                                                                                         AS sqlversion_monthly_deferred_rev
    FROM            (SELECT
                      tproject.uniqueid AS projectid
                      , tfcalperiod.startdate AS monthtoinclude
                    FROM eio_publish.tenrox_private.tfcalperiod tfcalperiod
                        INNER JOIN eio_publish.tenrox_private.tproject tproject
                                ON tfcalperiod.startdate >= trunc(tproject.startdate, 'MONTH') 
                                AND tfcalperiod.startdate <= CASE 
                                                                WHEN tproject.enddate > dateadd('MONTH', 1, TRUNC(CURRENT_DATE (), 'MONTH')) 
                                                                    THEN DATEADD('MONTH', 1, TRUNC(CURRENT_DATE (), 'MONTH')) 
                                                                ELSE tproject.enddate 
                                                            END 
                                AND tfcalperiod.periodtype = 'M' 
                                AND tfcalperiod.calid = 4) calitems
    FULL OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_expect_labor_local_cur_rev AS monthly_expect_labor_rev
        ON monthly_expect_labor_rev.projectid = calitems.projectid 
        AND monthly_expect_labor_rev.monthofexpectedlaborrev = calitems.monthtoinclude 
    FULL OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_chrg_rev_local_cur AS monthly_chrg_rev 
        ON monthly_chrg_rev.projectid = calitems.projectid 
        AND monthly_chrg_rev.monthofchrgrev < TRUNC(CURRENT_DATE (), 'MONTH') 
        AND monthly_chrg_rev.monthofchrgrev = calitems.monthtoinclude
    FULL OUTER JOIN (SELECT
                      projectid
                      , monthrecognized
                      , recognizedrevenue
                    FROM EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_rec_local_cur_rev
                    WHERE  monthrecognized IS NOT NULL) monthly_rec_rev
                ON monthly_rec_rev.projectid = calitems.projectid
               AND monthly_rec_rev.monthrecognized = calitems.monthtoinclude
    WHERE           COALESCE(monthly_expect_labor_rev.projectid, monthly_chrg_rev.projectid, monthly_rec_rev.projectid) IS NOT NULL
  );
[0m14:46:49.774744 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:49.775544 [debug] [Thread-3 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_transform"
[0m14:46:49.777822 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_transform"
[0m14:46:49.777998 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_monthly_deferred_rev_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_monthly_deferred_rev_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_deferred_rev
  
   as (
    
/* ADSK_FN_CM_MONTHLY_DEFERRED_REV
  @OverrideCurID   INT = NULL
  , @Placeholder02 INT = NULL
  , @Placeholder03 INT = NULL
  , @Placeholder04 INT = NULL
  , @Placeholder05 INT = NULL
*/
SELECT 
     IFNULL(calitems.projectid, monthly_rec_rev.projectid)                            AS projectid
     , IFNULL(calitems.monthtoinclude, monthly_rec_rev.monthrecognized)               AS revenuemonth
     , IFNULL(monthly_chrg_rev.monthschrgrev_allbillable, 0.00)                       AS chrgrevenue
     , IFNULL(monthly_expect_labor_rev.expectedlaborrevenue, 0.00)                    AS expectedlaborrevenue
     , IFNULL(monthly_chrg_rev.monthschrgrev_allbillable, 0.00)
        + IFNULL(monthly_expect_labor_rev.expectedlaborrevenue, 0.00)                 AS totalexpectedrevenue
     , IFNULL(monthly_rec_rev.recognizedrevenue, 0.00)                                AS recognizedrevenue
     , IFNULL(monthly_rec_rev.recognizedrevenue, 0.00) 
         - (IFNULL(monthly_chrg_rev.monthschrgrev_allbillable, 0.00)
        + IFNULL(monthly_expect_labor_rev.expectedlaborrevenue, 0.00))                AS deferredrevenue
     , SUM((IFNULL(monthly_chrg_rev.monthschrgrev_allbillable, 0.00)
        + IFNULL(monthly_expect_labor_rev.expectedlaborrevenue, 0.00))
                   - IFNULL(monthly_rec_rev.recognizedrevenue, 0.00))
           OVER ( PARTITION BY IFNULL(calitems.projectid, monthly_rec_rev.projectid)) AS totaldeferredrevenue
     , 9                                                                              AS sqlversion_monthly_deferred_rev
FROM (SELECT
      tproject.uniqueid           AS projectid
      , tfcalperiod.startdate     AS monthtoinclude
    FROM eio_publish.tenrox_private.tfcalperiod tfcalperiod
    INNER JOIN eio_publish.tenrox_private.tproject tproject
      ON tfcalperiod.startdate >= TRUNC(tproject.startdate, 'MONTH') 
      AND tfcalperiod.startdate <= CASE 
                                      WHEN tproject.enddate > DATEADD('MONTH', 1, TRUNC(CURRENT_DATE(), 'MONTH')) 
                                          THEN DATEADD('MONTH', 1, TRUNC(CURRENT_DATE(), 'MONTH')) 
                                      ELSE tproject.enddate 
                                  END 
      AND tfcalperiod.periodtype = 'M' 
      AND tfcalperiod.calid = 4) calitems
FULL OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_expect_labor_rev AS monthly_expect_labor_rev
    ON monthly_expect_labor_rev.projectid = calitems.projectid 
    AND monthly_expect_labor_rev.monthofexpectedlaborrev = calitems.monthtoinclude 
FULL OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_chrg_rev AS monthly_chrg_rev 
    ON monthly_chrg_rev.projectid = calitems.projectid 
    AND monthly_chrg_rev.monthofchrgrev < TRUNC(CURRENT_DATE(), 'MONTH') 
    AND monthly_chrg_rev.monthofchrgrev = calitems.monthtoinclude 
FULL OUTER JOIN (SELECT 
                    projectid
                    , monthrecognized
                    , recognizedrevenue 
                FROM EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_rec_rev 
                WHERE monthrecognized IS NOT NULL) monthly_rec_rev 
    ON monthly_rec_rev.projectid = calitems.projectid 
    AND monthly_rec_rev.monthrecognized = calitems.monthtoinclude
    WHERE COALESCE(monthly_expect_labor_rev.projectid, monthly_chrg_rev.projectid, monthly_rec_rev.projectid) IS NOT NULL
  );
[0m14:46:49.921198 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:49.922170 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_stacked_transform (execute): 2023-08-21 14:46:48.027501 => 2023-08-21 14:46:49.922145
[0m14:46:49.922296 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_stacked_transform: Close
[0m14:46:50.200564 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165d8c750>]}
[0m14:46:50.200897 [info ] [Thread-1 (]: 39 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_monthly_deferred_local_cur_rev_stacked  [[32mSUCCESS 1[0m in 2.18s]
[0m14:46:50.201078 [debug] [Thread-1 (]: Finished running node model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_stacked_transform
[0m14:46:50.201377 [debug] [Thread-1 (]: Began running node model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_stacked_transform
[0m14:46:50.201616 [info ] [Thread-1 (]: 42 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_labor_rev_local_cur_v02_stacked  [RUN]
[0m14:46:50.201935 [debug] [Thread-1 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_stacked_transform'
[0m14:46:50.202033 [debug] [Thread-1 (]: Began compiling node model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_stacked_transform
[0m14:46:50.204445 [debug] [Thread-1 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_stacked_transform"
[0m14:46:50.206902 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_stacked_transform (compile): 2023-08-21 14:46:50.202089 => 2023-08-21 14:46:50.206848
[0m14:46:50.207059 [debug] [Thread-1 (]: Began executing node model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_stacked_transform
[0m14:46:50.209160 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_stacked_transform"
[0m14:46:50.209261 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_stacked_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:50.209333 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:46:50.214309 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:50.215274 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_transform (execute): 2023-08-21 14:46:48.672402 => 2023-08-21 14:46:50.215253
[0m14:46:50.215384 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_transform: Close
[0m14:46:50.465716 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x166bf1510>]}
[0m14:46:50.466024 [info ] [Thread-2 (]: 40 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_monthly_deferred_local_cur_rev  [[32mSUCCESS 1[0m in 1.80s]
[0m14:46:50.466196 [debug] [Thread-2 (]: Finished running node model.my_dbt_projects.adsk_cm_monthly_deferred_rev_local_cur_transform
[0m14:46:50.466420 [debug] [Thread-2 (]: Began running node model.my_dbt_projects.adsk_cm_deferred_rev_local_cur_transform
[0m14:46:50.466541 [info ] [Thread-2 (]: 43 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_deferred_local_cur_rev .. [RUN]
[0m14:46:50.466802 [debug] [Thread-2 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_deferred_rev_local_cur_transform'
[0m14:46:50.466996 [debug] [Thread-2 (]: Began compiling node model.my_dbt_projects.adsk_cm_deferred_rev_local_cur_transform
[0m14:46:50.522440 [debug] [Thread-2 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_deferred_rev_local_cur_transform"
[0m14:46:50.523292 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_deferred_rev_local_cur_transform (compile): 2023-08-21 14:46:50.467112 => 2023-08-21 14:46:50.523237
[0m14:46:50.523473 [debug] [Thread-2 (]: Began executing node model.my_dbt_projects.adsk_cm_deferred_rev_local_cur_transform
[0m14:46:50.525534 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_deferred_rev_local_cur_transform"
[0m14:46:50.525664 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_deferred_rev_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_deferred_rev_local_cur_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:50.525737 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m14:46:50.682453 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:50.683558 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_monthly_deferred_rev_transform (execute): 2023-08-21 14:46:49.089803 => 2023-08-21 14:46:50.683532
[0m14:46:50.683681 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_monthly_deferred_rev_transform: Close
[0m14:46:50.944267 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x166c270d0>]}
[0m14:46:50.944561 [info ] [Thread-3 (]: 41 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_monthly_deferred_rev  [[32mSUCCESS 1[0m in 1.86s]
[0m14:46:50.944726 [debug] [Thread-3 (]: Finished running node model.my_dbt_projects.adsk_cm_monthly_deferred_rev_transform
[0m14:46:50.945106 [debug] [Thread-3 (]: Began running node model.my_dbt_projects.adsk_cm_deferred_rev_transform
[0m14:46:50.945255 [info ] [Thread-3 (]: 44 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_deferred_rev ............ [RUN]
[0m14:46:50.945525 [debug] [Thread-3 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_deferred_rev_transform'
[0m14:46:50.945612 [debug] [Thread-3 (]: Began compiling node model.my_dbt_projects.adsk_cm_deferred_rev_transform
[0m14:46:50.947299 [debug] [Thread-3 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_deferred_rev_transform"
[0m14:46:50.947994 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_deferred_rev_transform (compile): 2023-08-21 14:46:50.945671 => 2023-08-21 14:46:50.947941
[0m14:46:50.948162 [debug] [Thread-3 (]: Began executing node model.my_dbt_projects.adsk_cm_deferred_rev_transform
[0m14:46:50.950144 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_deferred_rev_transform"
[0m14:46:50.950236 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_deferred_rev_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_deferred_rev_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:50.950300 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m14:46:51.058220 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:51.059449 [debug] [Thread-1 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_stacked_transform"
[0m14:46:51.062781 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_stacked_transform"
[0m14:46:51.062885 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_stacked_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_labor_rev_local_cur_v02_stacked
  
   as (
    



WITH deffered_rev_max AS
(SELECT
 d.*
 FROM
 EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_deferred_local_cur_rev_stacked d
WHERE
dt = TO_DATE(TO_VARCHAR(CASE WHEN MONTH(CURRENT_DATE()) = 1
                                                  THEN YEAR(DATEADD(year, -1, CURRENT_DATE()))
                                              ELSE YEAR(CURRENT_DATE()) END) || '-'
                                      || CASE WHEN MONTH(CURRENT_DATE()) IN (2, 3, 4) THEN '02-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (5, 6, 7) THEN '05-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (8, 9, 10) THEN '08-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (11, 12, 1) THEN '11-01'
                     ELSE NULL END)
),

project AS 
(
        SELECT
        *
        FROM
        eio_publish.tenrox_private.tproject
),
clientinvoice AS 
(
        SELECT
        *
        FROM
        eio_publish.tenrox_private.tclientinvoice
),

adsk_cm_project_budget_local_cur AS
(
        SELECT
        *
        FROM
        EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_budget_local_cur

),

adsk_cm_labor_hrs_v02_stacked AS
(
        SELECT
        *
        FROM
        EIO_INGEST.TENROX_TRANSFORM.adsk_cm_labor_hrs_v02_stacked

)


 SELECT 
    tproject.uniqueid    AS projectid
    ,laborhrs.dt

     ,IFNULL(projbudget.currentbillabletime * (IFNULL(laborhrs.HRS_ACTUAL, 0.00)  
                                             / NULLIF(laborhrs.hrs_billable_eac, 0.00)),0.00) AS revlabor_actual
     
     ,IFNULL(projbudget.currentbillabletime * (IFNULL(laborhrs.HRS_FCST_BILLABLE, 0.00) 
                                                / NULLIF(laborhrs.hrs_billable_eac, 0.00)),0.00)  AS revlabor_forecast
                                                
     ,IFNULL(projbudget.currentbillabletime * (IFNULL(laborhrs.HRS_FCST_BILLABLE_SOFT, 0.00) 
                                                / NULLIF(laborhrs.hrs_billable_eac, 0.00)),0.00)  AS revlabor_forecast_soft

     , revlabor_forecast -   revlabor_forecast_soft as revlabor_forecast_hard                                  
      
     ,IFNULL(projbudget.currentbillabletime * (IFNULL(laborhrs.HRS_FCST_BILLABLE_REMAININGINQTR, 0.00) 
                                                / NULLIF(laborhrs.hrs_billable_eac, 0.00)),0.00)   AS revlabor_remaininginqtr
     ,IFNULL(projbudget.currentbillabletime * (IFNULL(laborhrs.HRS_FCST_BILLABLE_REMAININGINQTR_SOFT, 0.00) 
                                                / NULLIF(laborhrs.hrs_billable_eac, 0.00)),0.00)   AS revlabor_remaininginqtr_soft
    , revlabor_remaininginqtr - revlabor_remaininginqtr_soft as revlabor_remaininginqtr_hard
    , deferred_rev.totaldeferredrevenue             AS rev_deferred

FROM project AS tproject
INNER JOIN clientinvoice AS tclientinvoice
        ON tclientinvoice.clientid = tproject.clientid
LEFT JOIN adsk_cm_project_budget_local_cur AS projbudget
             ON projbudget.projectid = tproject.uniqueid
LEFT JOIN adsk_cm_labor_hrs_v02_stacked AS laborhrs
             ON laborhrs.projectid = tproject.uniqueid
LEFT JOIN deffered_rev_max AS deferred_rev
        ON deferred_rev.projectid = tproject.uniqueid AND deferred_rev.dt = laborhrs.dt
  );
[0m14:46:51.223142 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:51.223958 [debug] [Thread-2 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_deferred_rev_local_cur_transform"
[0m14:46:51.225019 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_deferred_rev_local_cur_transform"
[0m14:46:51.225117 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_deferred_rev_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_deferred_rev_local_cur_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_deferred_local_cur_rev
  
   as (
    
/* ADSK_FN_CM_DEFERRED_REV
  , @Placeholder02 INT = NULL
  , @Placeholder03 INT = NULL
  , @Placeholder04 INT = NULL
  , @Placeholder05 INT = NULL
*/
SELECT 
    projectid                                   AS projectid
     , IFNULL(MAX(totaldeferredrevenue), 0.00)  AS totaldeferredrevenue
     , 1                                        AS sqlversion_deferred_rev
FROM EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_deferred_local_cur_rev
GROUP  BY
    projectid
  );
[0m14:46:51.649389 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:51.650223 [debug] [Thread-3 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_deferred_rev_transform"
[0m14:46:51.651225 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_deferred_rev_transform"
[0m14:46:51.651360 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_deferred_rev_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_deferred_rev_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_deferred_rev
  
   as (
    
/* ADSK_FN_CM_DEFERRED_REV
  , @Placeholder02 INT = NULL
  , @Placeholder03 INT = NULL
  , @Placeholder04 INT = NULL
  , @Placeholder05 INT = NULL
*/
SELECT 
    projectid                                   AS projectid
     , IFNULL(MAX(totaldeferredrevenue), 0.00)  AS totaldeferredrevenue
     , 1                                        AS sqlversion_deferred_rev
FROM EIO_INGEST.TENROX_TRANSFORM.adsk_cm_monthly_deferred_rev
GROUP BY 
    projectid
  );
[0m14:46:52.027016 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:52.028056 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_deferred_rev_local_cur_transform (execute): 2023-08-21 14:46:50.523549 => 2023-08-21 14:46:52.028030
[0m14:46:52.028178 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_deferred_rev_local_cur_transform: Close
[0m14:46:52.270548 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1661d5bd0>]}
[0m14:46:52.270884 [info ] [Thread-2 (]: 43 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_deferred_local_cur_rev  [[32mSUCCESS 1[0m in 1.80s]
[0m14:46:52.271068 [debug] [Thread-2 (]: Finished running node model.my_dbt_projects.adsk_cm_deferred_rev_local_cur_transform
[0m14:46:52.271370 [debug] [Thread-2 (]: Began running node model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_transform
[0m14:46:52.271526 [info ] [Thread-2 (]: 45 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_labor_rev_local_cur_v02 . [RUN]
[0m14:46:52.271797 [debug] [Thread-2 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_transform'
[0m14:46:52.271885 [debug] [Thread-2 (]: Began compiling node model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_transform
[0m14:46:52.275315 [debug] [Thread-2 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_transform"
[0m14:46:52.276851 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_transform (compile): 2023-08-21 14:46:52.271939 => 2023-08-21 14:46:52.276821
[0m14:46:52.276948 [debug] [Thread-2 (]: Began executing node model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_transform
[0m14:46:52.278802 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_transform"
[0m14:46:52.278878 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:52.278942 [debug] [Thread-2 (]: Opening a new connection, currently in state closed
[0m14:46:52.465787 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:52.466816 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_deferred_rev_transform (execute): 2023-08-21 14:46:50.948228 => 2023-08-21 14:46:52.466792
[0m14:46:52.466931 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_deferred_rev_transform: Close
[0m14:46:52.715382 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x166bee350>]}
[0m14:46:52.715685 [info ] [Thread-3 (]: 44 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_deferred_rev ....... [[32mSUCCESS 1[0m in 1.77s]
[0m14:46:52.715849 [debug] [Thread-3 (]: Finished running node model.my_dbt_projects.adsk_cm_deferred_rev_transform
[0m14:46:52.716086 [debug] [Thread-3 (]: Began running node model.my_dbt_projects.adsk_cm_labor_rev_v02_transform
[0m14:46:52.716202 [info ] [Thread-3 (]: 46 of 47 START sql view model TENROX_TRANSFORM.adsk_cm_labor_rev_v02 ........... [RUN]
[0m14:46:52.716453 [debug] [Thread-3 (]: Acquiring new snowflake connection 'model.my_dbt_projects.adsk_cm_labor_rev_v02_transform'
[0m14:46:52.716534 [debug] [Thread-3 (]: Began compiling node model.my_dbt_projects.adsk_cm_labor_rev_v02_transform
[0m14:46:52.719014 [debug] [Thread-3 (]: Writing injected SQL for node "model.my_dbt_projects.adsk_cm_labor_rev_v02_transform"
[0m14:46:52.719789 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_labor_rev_v02_transform (compile): 2023-08-21 14:46:52.716587 => 2023-08-21 14:46:52.719723
[0m14:46:52.719974 [debug] [Thread-3 (]: Began executing node model.my_dbt_projects.adsk_cm_labor_rev_v02_transform
[0m14:46:52.722127 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_labor_rev_v02_transform"
[0m14:46:52.722233 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_labor_rev_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_labor_rev_v02_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:52.722302 [debug] [Thread-3 (]: Opening a new connection, currently in state closed
[0m14:46:53.117998 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:53.118809 [debug] [Thread-2 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_transform"
[0m14:46:53.123095 [debug] [Thread-2 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_transform"
[0m14:46:53.123211 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_labor_rev_local_cur_v02
  
   as (
    
/* ADSK_FN_CM_LABOR_REV_V02
  @OverrideCurID   INT = NULL
  , @RangeBegin    DATETIME = NULL
  , @RangeEnd      DATETIME = NULL
  , @CutoverDate   DATETIME = NULL
  , @Placeholder05 INT = NULL
*/
SELECT 
    tproject.uniqueid                                                                                    AS projectid
     , IFNULL(projbudget.currentbillabletime, 0.00)                                                      AS laborrevenue_total
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsact_past, 0.00)  
                                             / NULLIF(hrs_billable_eac, 0.00)), 0.00)                    AS revlabor_past
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsact_pastqtrs, 0.00) 
                                             / NULLIF(hrs_billable_eac, 0.00)), 0.00)                    AS revlabor_pastqtrs
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsact_priorqtrs, 0.00) 
                                             / NULLIF(hrs_billable_eac, 0.00)), 0.00)                    AS revlabor_priorqtrs
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsact_minus3qtr, 0.00) 
                                             / NULLIF(hrs_billable_eac, 0.00)), 0.00)                    AS revlabor_minus3qtr
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsact_minus2qtr, 0.00) 
                                             / NULLIF(hrs_billable_eac, 0.00)), 0.00)                    AS revlabor_minus2qtr
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsact_minus1qtr, 0.00) 
                                             / NULLIF(hrs_billable_eac, 0.00)), 0.00)                    AS revlabor_minus1qtr
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsact_completedinqtr, 0.00) 
                                             / NULLIF(hrs_billable_eac, 0.00)), 0.00)                    AS revlabor_completedinqtr
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsact_completedinqtr, 0.00)
                                                   + IFNULL(hrsfcst_billable_remaininginqtr, 0.00))
                                             / NULLIF(hrs_billable_eac, 0.00)), 0.00)                    AS revlabor_currentqtr
     , IFNULL(deferred_rev.totaldeferredrevenue, 0.00)                                                   AS rev_deferred
     , IFNULL(deferred_rev.totaldeferredrevenue, 0.00) + (projbudget.currentbillabletime
                                             * (IFNULL(hrsfcst_billable_currentmonth, 0.00) 
                                             / NULLIF(hrs_billable_eac, 0.00)))                          AS revlabor_currentmonth
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_currentmonth, 0.00) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_currentmonthfcstonly
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_remaininginqtr, 0.00) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_remaininginqtr
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsfcst_billable_remaininginqtr, 0.00)
                                                - IFNULL(hrsfcst_billable_remaininginqtr_soft, 0.00)) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_remaininginqtr_hard
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_future, 0.00) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_future
     , IFNULL( projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_plus1qtr, 0.00) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus1qtr
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsfcst_billable_plus1qtr, 0.00)
                                                - IFNULL(hrsfcst_billable_plus1qtr_soft, 0.00)) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus1qtr_hard
     , IFNULL( projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_plus2qtr, 0.00) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus2qtr
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsfcst_billable_plus2qtr, 0.00)
                                               - IFNULL(hrsfcst_billable_plus2qtr_soft, 0.00)) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus2qtr_hard
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_plus3qtr, 0.00) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus3qtr
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsfcst_billable_plus3qtr, 0.00)
                                                - IFNULL(hrsfcst_billable_plus3qtr_soft, 0.00)) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus3qtr_hard
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_plus4qtr, 0.00) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus4qtr
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsfcst_billable_plus4qtr, 0.00)
                                                - IFNULL(hrsfcst_billable_plus4qtr_soft, 0.00)) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus4qtr_hard
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_plus5qtr, 0.00) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus5qtr
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsfcst_billable_plus5qtr, 0.00)
                                                   - IFNULL(hrsfcst_billable_plus5qtr_soft, 0.00)) 
                                                   / NULLIF(hrs_billable_eac, 0.00)), 0.00)              AS revlabor_plus5qtr_hard
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_futureqtrs, 0.00) 
                                                   / NULLIF(hrs_billable_eac, 0.00)), 0.00)              AS revlabor_futureqtrs
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_additionalqtrs, 0.00)
                                                   / NULLIF(hrs_billable_eac, 0.00)), 0.00)              AS revlabor_additionalqtrs
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsfcst_billable_additionalqtrs, 0.00)
                                                - IFNULL(hrsfcst_billable_additionalqtrs_soft, 0.00)) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_additionalqtrs_hard
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_additionalqtrs2, 0.00)
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_additionalqtrs2
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsfcst_billable_additionalqtrs2, 0.00)
                                                - IFNULL(hrsfcst_billable_additionalqtrs2_soft, 0.00)) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_additionalqtrs2_hard
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsact_customrange 
                                                + hrsfcst_billable_customrange, 0.00)
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_customrange
     , fnc_hist_customrangebegin                                                                         AS revlabor_customrangebegin
     , fnc_fcst_customrangeend                                                                           AS revlabor_customrangeend
     , 12                                                                                                AS sqlversion_labor_rev
FROM eio_publish.tenrox_private.tproject tproject
INNER JOIN eio_publish.tenrox_private.tclientinvoice tclientinvoice
        ON tclientinvoice.clientid = tproject.clientid
LEFT JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_budget_local_cur as projbudget
             ON projbudget.projectid = tproject.uniqueid
LEFT JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_labor_hrs_v02 as laborhrs
             ON laborhrs.projectid = tproject.uniqueid
LEFT JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_deferred_local_cur_rev as deferred_rev
             ON deferred_rev.projectid = tproject.uniqueid
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02 as ranges
  );
[0m14:46:53.554827 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:53.555660 [debug] [Thread-3 (]: Writing runtime sql for node "model.my_dbt_projects.adsk_cm_labor_rev_v02_transform"
[0m14:46:53.560775 [debug] [Thread-3 (]: Using snowflake connection "model.my_dbt_projects.adsk_cm_labor_rev_v02_transform"
[0m14:46:53.560893 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_labor_rev_v02_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.adsk_cm_labor_rev_v02_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.adsk_cm_labor_rev_v02
  
   as (
    
/* ADSK_FN_CM_LABOR_REV_V02
  @OverrideCurID   INT = NULL
  , @RangeBegin    DATETIME = NULL
  , @RangeEnd      DATETIME = NULL
  , @CutoverDate   DATETIME = NULL
  , @Placeholder05 INT = NULL
*/
SELECT 
    tproject.uniqueid                                                                                    AS projectid
     , IFNULL(projbudget.currentbillabletime, 0.00)                                                      AS laborrevenue_total
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsact_past, 0.00)  
                                             / NULLIF(hrs_billable_eac, 0.00)), 0.00)                    AS revlabor_past
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsact_pastqtrs, 0.00) 
                                             / NULLIF(hrs_billable_eac, 0.00)), 0.00)                    AS revlabor_pastqtrs
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsact_priorqtrs, 0.00) 
                                             / NULLIF(hrs_billable_eac, 0.00)), 0.00)                    AS revlabor_priorqtrs
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsact_minus3qtr, 0.00) 
                                             / NULLIF(hrs_billable_eac, 0.00)), 0.00)                    AS revlabor_minus3qtr
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsact_minus2qtr, 0.00) 
                                             / NULLIF(hrs_billable_eac, 0.00)), 0.00)                    AS revlabor_minus2qtr
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsact_minus1qtr, 0.00) 
                                             / NULLIF(hrs_billable_eac, 0.00)), 0.00)                    AS revlabor_minus1qtr
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsact_completedinqtr, 0.00) 
                                             / NULLIF(hrs_billable_eac, 0.00)), 0.00)                    AS revlabor_completedinqtr
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsact_completedinqtr, 0.00)
                                            + IFNULL(hrsfcst_billable_remaininginqtr, 0.00))
                                            / NULLIF(hrs_billable_eac, 0.00)), 0.00)                     AS revlabor_currentqtr
     , IFNULL(deferred_rev.totaldeferredrevenue, 0.00)                                                   AS rev_deferred
     , IFNULL(deferred_rev.totaldeferredrevenue, 0.00) + (projbudget.currentbillabletime
                                             * (IFNULL(hrsfcst_billable_currentmonth, 0.00) 
                                             / NULLIF(hrs_billable_eac, 0.00)))                          AS revlabor_currentmonth
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_currentmonth, 0.00) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_currentmonthfcstonly
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_remaininginqtr, 0.00) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_remaininginqtr
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsfcst_billable_remaininginqtr, 0.00)
                                                - IFNULL(hrsfcst_billable_remaininginqtr_soft, 0.00)) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_remaininginqtr_hard
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_future, 0.00) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_future
     , IFNULL( projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_plus1qtr, 0.00) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus1qtr
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsfcst_billable_plus1qtr, 0.00)
                                                - IFNULL(hrsfcst_billable_plus1qtr_soft, 0.00)) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus1qtr_hard
     , IFNULL( projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_plus2qtr, 0.00) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus2qtr
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsfcst_billable_plus2qtr, 0.00)
                                               - IFNULL(hrsfcst_billable_plus2qtr_soft, 0.00)) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus2qtr_hard
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_plus3qtr, 0.00) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus3qtr
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsfcst_billable_plus3qtr, 0.00)
                                                - IFNULL(hrsfcst_billable_plus3qtr_soft, 0.00)) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus3qtr_hard
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_plus4qtr, 0.00) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus4qtr
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsfcst_billable_plus4qtr, 0.00)
                                                - IFNULL(hrsfcst_billable_plus4qtr_soft, 0.00)) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus4qtr_hard
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_plus5qtr, 0.00) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_plus5qtr
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsfcst_billable_plus5qtr, 0.00)
                                                   - IFNULL(hrsfcst_billable_plus5qtr_soft, 0.00)) 
                                                   / NULLIF(hrs_billable_eac, 0.00)), 0.00)              AS revlabor_plus5qtr_hard
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_futureqtrs, 0.00) 
                                                   / NULLIF(hrs_billable_eac, 0.00)), 0.00)              AS revlabor_futureqtrs
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_additionalqtrs, 0.00)
                                                   / NULLIF(hrs_billable_eac, 0.00)), 0.00)              AS revlabor_additionalqtrs
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsfcst_billable_additionalqtrs, 0.00)
                                                - IFNULL(hrsfcst_billable_additionalqtrs_soft, 0.00)) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_additionalqtrs_hard
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsfcst_billable_additionalqtrs2, 0.00)
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_additionalqtrs2
     , IFNULL(projbudget.currentbillabletime * ((IFNULL(hrsfcst_billable_additionalqtrs2, 0.00)
                                                - IFNULL(hrsfcst_billable_additionalqtrs2_soft, 0.00)) 
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_additionalqtrs2_hard
     , IFNULL(projbudget.currentbillabletime * (IFNULL(hrsact_customrange 
                                                + hrsfcst_billable_customrange, 0.00)
                                                / NULLIF(hrs_billable_eac, 0.00)), 0.00)                 AS revlabor_customrange
     , fnc_hist_customrangebegin                                                                         AS revlabor_customrangebegin
     , fnc_fcst_customrangeend                                                                           AS revlabor_customrangeend
     , 12                                                                                                AS sqlversion_labor_rev
FROM eio_publish.tenrox_private.tproject tproject
INNER JOIN eio_publish.tenrox_private.tclientinvoice tclientinvoice
    ON tclientinvoice.clientid = tproject.clientid
LEFT JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_budget AS projbudget 
    ON projbudget.projectid = tproject.uniqueid 
LEFT JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_labor_hrs_v02 AS laborhrs
    ON laborhrs.projectid = tproject.uniqueid 
LEFT JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_deferred_rev AS deferred_rev
    ON deferred_rev.projectid = tproject.uniqueid 
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_month_q_ranges_v02 AS ranges
  );
[0m14:46:53.699293 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 3 seconds
[0m14:46:53.700279 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_stacked_transform (execute): 2023-08-21 14:46:50.207128 => 2023-08-21 14:46:53.700253
[0m14:46:53.700402 [debug] [Thread-1 (]: On model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_stacked_transform: Close
[0m14:46:53.949852 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x166c0bfd0>]}
[0m14:46:53.950170 [info ] [Thread-1 (]: 42 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_labor_rev_local_cur_v02_stacked  [[32mSUCCESS 1[0m in 3.75s]
[0m14:46:53.950352 [debug] [Thread-1 (]: Finished running node model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_stacked_transform
[0m14:46:54.526658 [debug] [Thread-2 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:54.527672 [debug] [Thread-2 (]: Timing info for model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_transform (execute): 2023-08-21 14:46:52.277003 => 2023-08-21 14:46:54.527647
[0m14:46:54.527792 [debug] [Thread-2 (]: On model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_transform: Close
[0m14:46:54.782258 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x166c621d0>]}
[0m14:46:54.782569 [info ] [Thread-2 (]: 45 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_labor_rev_local_cur_v02  [[32mSUCCESS 1[0m in 2.51s]
[0m14:46:54.782739 [debug] [Thread-2 (]: Finished running node model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_transform
[0m14:46:54.864339 [debug] [Thread-3 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:54.865376 [debug] [Thread-3 (]: Timing info for model.my_dbt_projects.adsk_cm_labor_rev_v02_transform (execute): 2023-08-21 14:46:52.720049 => 2023-08-21 14:46:54.865347
[0m14:46:54.865506 [debug] [Thread-3 (]: On model.my_dbt_projects.adsk_cm_labor_rev_v02_transform: Close
[0m14:46:55.106293 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x164dd1c90>]}
[0m14:46:55.106614 [info ] [Thread-3 (]: 46 of 47 OK created sql view model TENROX_TRANSFORM.adsk_cm_labor_rev_v02 ...... [[32mSUCCESS 1[0m in 2.39s]
[0m14:46:55.106777 [debug] [Thread-3 (]: Finished running node model.my_dbt_projects.adsk_cm_labor_rev_v02_transform
[0m14:46:55.107235 [debug] [Thread-1 (]: Began running node model.my_dbt_projects.cust_adsk_marginvariance_transform
[0m14:46:55.107462 [info ] [Thread-1 (]: 47 of 47 START sql view model TENROX_TRANSFORM.cust_adsk_marginvariance ........ [RUN]
[0m14:46:55.107730 [debug] [Thread-1 (]: Acquiring new snowflake connection 'model.my_dbt_projects.cust_adsk_marginvariance_transform'
[0m14:46:55.107820 [debug] [Thread-1 (]: Began compiling node model.my_dbt_projects.cust_adsk_marginvariance_transform
[0m14:46:55.111557 [debug] [Thread-1 (]: Writing injected SQL for node "model.my_dbt_projects.cust_adsk_marginvariance_transform"
[0m14:46:55.112456 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.cust_adsk_marginvariance_transform (compile): 2023-08-21 14:46:55.107875 => 2023-08-21 14:46:55.112429
[0m14:46:55.112552 [debug] [Thread-1 (]: Began executing node model.my_dbt_projects.cust_adsk_marginvariance_transform
[0m14:46:55.114451 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.cust_adsk_marginvariance_transform"
[0m14:46:55.114541 [debug] [Thread-1 (]: On model.my_dbt_projects.cust_adsk_marginvariance_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.cust_adsk_marginvariance_transform"} */
USE SECONDARY ROLE ALL
[0m14:46:55.114604 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:46:55.811216 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:46:55.812067 [debug] [Thread-1 (]: Writing runtime sql for node "model.my_dbt_projects.cust_adsk_marginvariance_transform"
[0m14:46:55.815993 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.cust_adsk_marginvariance_transform"
[0m14:46:55.816163 [debug] [Thread-1 (]: On model.my_dbt_projects.cust_adsk_marginvariance_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.cust_adsk_marginvariance_transform"} */
create or replace   view EIO_INGEST.TENROX_TRANSFORM.cust_adsk_marginvariance
  
   as (
    

/* CUST_ADSK_MARGINVARIANCE
  @BatchSize     INT = 10000  
  @BatchNumber INT = 0 
  @SQLScriptVersion = 6
  SET @RightNow = GETDATE()  
  SET @BeginingOfCurrentFY = CONVERT(DATETIME, '2/1/' + CONVERT(NVARCHAR(4), CASE MONTH(@RightNow) WHEN 1 THEN YEAR(@RightNow) - 1 ELSE YEAR(@RightNow) END))
  This gets the current FY start date from the current date, already used in adsk_month_q_ranges_v02 AS @CutoverDate

    @USDCurID forced to 1
  SELECT  
  @USDCurID = ISNULL(UNIQUEID, 1)  
  FROM   TCURRENCY  
  WHERE  CURRENCYCODE = 'USD'  
  Unique ID of CURRENCYCODE = 'USD' is 1
*/
WITH tmp_cust_adsk_marginvariance AS (
    SELECT 
        ROW_NUMBER() OVER (ORDER BY project_details.projectid)        AS rownumber
        , project_details.projectid                                   AS projectid
        , projectcode                                                 AS projectcode
        , projectname                                                 AS projectname
        , portfolioname                                               AS portfolioname
        , adsk_geo_name                                               AS geo
        , CASE portfoliomanagername WHEN 'Bruce Hickey' THEN 'M&E'
                                    ELSE pm_site_active.name END      AS geo2
        , clientname                                                  AS customername
        , projectmanageremployeeid                                    AS projectmanagereeid
        , projectmanagername                                          AS projectmanagername
        , pm_site_active.name                                         AS projectmanagergeo
        , portfoliomanagername                                        AS portfoliomanager
        , projectstate                                                AS projectstate
        , adsk_masteragreement_projecttype                            AS projecttype
        , projectstartdate                                            AS projectstartdate
        , projectenddate                                              AS projectenddate
        , projectcurrency                                             AS projectcurrency
        , currentbillabletotal * IFNULL(rate, 1.00)                   AS planrevenue
        , currentcosttotal * IFNULL(rate, 1.00)                       AS plancost
        , currenthrsbillable + currenthrsnonbillable                  AS planhours
        , (IFNULL(hrsact_past, 0.00) + IFNULL(hrsact_nonbill_past, 0.00)
            + IFNULL(hrsact_utilized_past, 0.00) 
            + IFNULL(hrsfcst_future, 0.00))                           AS hrs_eac
        , IFNULL(labor_hrs.hrsact_all, 0.00)                          AS hrs_booked
        -- Hrs_ETC = Hrs_EAC - Hrs_Booked  
        , ((IFNULL(hrsact_past, 0.00) + IFNULL(hrsact_nonbill_past, 0.00)
                + IFNULL(hrsact_utilized_past, 0.00) + IFNULL(hrsfcst_future, 0.00))
                - IFNULL(labor_hrs.hrsact_all, 0.00))                 AS hrs_etc
        , ((IFNULL(revlabor_past, 0.00) + IFNULL(revlabor_future, 0.00)
            + IFNULL(recchrgrev_allbillable_past, 0.00) 
            + IFNULL(fcstchrgrev_allbillable_future, 0.00)))          AS eac_revenue
        , ((IFNULL(actcostlabor_past, 0.00) 
            + IFNULL(actcostcharge_past, 0.00)
            + IFNULL(fcstcostlabor_future, 0.00) 
            + IFNULL(fcstchrgcost_future, 0.00)))                     AS eac_cost
        , ((IFNULL(actcostlabor_customrange, 0.00)
            + IFNULL(actcostcharge_customrange, 0.00)))               AS priorfycost
        , initialworkdate                                             AS initialworkdate
        , CASE WHEN projectstate IN ('Completed', 'TECO', 'Closed',
                                     'End Time Capture', 'PA Review-Completion',
                                     'SCO-Completed', 'SCO-Closed', 'Archive')
                   THEN finalworkdate END                             AS finalworkdate
        , adsk_planned_end_date                                       AS planned_end_date
        , adsk_accountingcontracttype                                 AS accountingcontracttype
        , adsk_revrectreatment                                        AS revrectreatment
        , project_details.tenroxtrackingno
FROM EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_details AS project_details
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.tprojectcustfld_view ON tprojectcustfld_view.projectid = project_details.projectid
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_const_curr AS const_curr ON const_curr.currencycode = project_details.projectcurrency
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_project_budget AS project_budget ON project_budget.projectid = project_details.projectid
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_act_charge_costs_v02 AS act_charge_costs ON act_charge_costs.projectid = project_details.projectid
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_act_labor_costs_v02 AS act_labor_costs ON act_labor_costs.projectid = project_details.projectid
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_forecast_chrg_rev_v02 AS forecast_chrg_rev ON forecast_chrg_rev.projectid = project_details.projectid
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_forecast_chrg_cost AS forecast_chrg_cost ON forecast_chrg_cost.projectid = project_details.projectid
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_forecast_labor_costs AS forecast_labor_costs ON forecast_labor_costs.projectid = project_details.projectid
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_labor_hrs_v02 AS labor_hrs ON labor_hrs.projectid = project_details.projectid
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_labor_rev_v02 AS labor_rev ON labor_rev.projectid = project_details.projectid
LEFT OUTER JOIN EIO_INGEST.TENROX_TRANSFORM.adsk_cm_rec_chrg_rev_v02 AS rec_chrg_rev ON rec_chrg_rev.projectid = project_details.projectid
LEFT OUTER JOIN eio_publish.tenrox_private.tuser tuser ON tuser.uniqueid = project_details.projectmanagerid
LEFT OUTER JOIN eio_publish.tenrox_private.tsite pm_site_active ON pm_site_active.uniqueid = tuser.activesiteid
LEFT OUTER JOIN
 (  
  SELECT
      tproject.uniqueid               AS projectid
      , MIN(entrydate)                AS initialworkdate
      , MAX(entrydate)               AS finalworkdate
    FROM eio_publish.tenrox_private.ttimesheetentries ttimesheetentries
    JOIN eio_publish.tenrox_private.ttask ttask ON ttimesheetentries.taskuid = ttask.uniqueid 
    JOIN eio_publish.tenrox_private.tproject tproject ON tproject.uniqueid = ttask.projectid
    WHERE ttimesheetentries.approved = 1
    GROUP BY tproject.uniqueid
 ) tbl_workdates ON tbl_workdates.projectid = project_details.projectid 
WHERE projectname NOT LIKE 'ZZ-%'
)

SELECT
     rownumber
     , projectid
     , projectcode
     , projectname
     , portfolioname
     , geo
     , geo2
     , customername
     , projectmanagereeid
     , projectmanagername
     , projectmanagergeo
     , portfoliomanager
     , projectstate
     , projecttype
     , projectstartdate
     , projectenddate
     , projectcurrency
     , planrevenue
     , plancost
     , planhours
     , hrs_eac
     , hrs_booked
     , hrs_etc
     , eac_revenue
     , eac_cost
     , priorfycost
     , initialworkdate
     , finalworkdate
     , 'Const USD'                      AS displayedcurrency
     , 1::BOOLEAN                       AS wasnewtable
     , 6                                AS sqlscriptversion
     , planned_end_date
     , accountingcontracttype
     , revrectreatment
     , tenroxtrackingno
FROM tmp_cust_adsk_marginvariance
     -- WHERE  RowNumber >= (@BatchNumber * @BatchSize) + 1  
     -- AND RowNumber < (@BatchNumber * @BatchSize) + @BatchSize + 1  
ORDER BY rownumber
  );
[0m14:46:58.055415 [debug] [Thread-1 (]: Snowflake adapter: Snowflake query id: 01ae7536-0608-1e06-0000-6865845fd37a
[0m14:46:58.055626 [debug] [Thread-1 (]: Snowflake adapter: Snowflake error: 002028 (42601): SQL compilation error:
ambiguous column name 'ADSK_MASTERAGREEMENT_PROJECTTYPE'
[0m14:46:58.055783 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.cust_adsk_marginvariance_transform (execute): 2023-08-21 14:46:55.112608 => 2023-08-21 14:46:58.055757
[0m14:46:58.055871 [debug] [Thread-1 (]: On model.my_dbt_projects.cust_adsk_marginvariance_transform: Close
[0m14:46:58.303127 [debug] [Thread-1 (]: Database Error in model cust_adsk_marginvariance_transform (models/transform/cust_adsk_marginvariance_transform.sql)
  002028 (42601): SQL compilation error:
  ambiguous column name 'ADSK_MASTERAGREEMENT_PROJECTTYPE'
  compiled Code at target/run/my_dbt_projects/models/transform/cust_adsk_marginvariance_transform.sql
[0m14:46:58.303413 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dc78b9c2-f752-4db8-a320-4d079d7ecbdb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x16552ed10>]}
[0m14:46:58.303616 [error] [Thread-1 (]: 47 of 47 ERROR creating sql view model TENROX_TRANSFORM.cust_adsk_marginvariance  [[31mERROR[0m in 3.20s]
[0m14:46:58.303767 [debug] [Thread-1 (]: Finished running node model.my_dbt_projects.cust_adsk_marginvariance_transform
[0m14:46:58.304791 [debug] [MainThread]: Acquiring new snowflake connection 'master'
[0m14:46:58.304969 [info ] [MainThread]: 
[0m14:46:58.305104 [info ] [MainThread]: Running 1 on-run-end hook
[0m14:46:58.311732 [warn ] [MainThread]: Couldn't find Elementary's models. Please run `dbt run -s elementary`.
[0m14:46:58.320401 [debug] [MainThread]: Elementary: Uploading dbt artifacts.
[0m14:46:58.330746 [debug] [MainThread]: Elementary: Uploaded dbt artifacts.
[0m14:46:58.342301 [debug] [MainThread]: Writing injected SQL for node "operation.elementary.elementary-on-run-end-0"
[0m14:46:58.343441 [info ] [MainThread]: 1 of 1 START hook: elementary.on-run-end.0 ..................................... [RUN]
[0m14:46:58.343680 [info ] [MainThread]: 1 of 1 OK hook: elementary.on-run-end.0 ........................................ [[32mOK[0m in 0.00s]
[0m14:46:58.343798 [info ] [MainThread]: 
[0m14:46:58.344094 [debug] [MainThread]: Connection 'master' was properly closed.
[0m14:46:58.344169 [debug] [MainThread]: Connection 'model.my_dbt_projects.cust_adsk_marginvariance_transform' was properly closed.
[0m14:46:58.344226 [debug] [MainThread]: Connection 'model.my_dbt_projects.adsk_cm_labor_rev_v02_local_cur_transform' was properly closed.
[0m14:46:58.344280 [debug] [MainThread]: Connection 'model.my_dbt_projects.adsk_cm_labor_rev_v02_transform' was properly closed.
[0m14:46:58.344429 [info ] [MainThread]: 
[0m14:46:58.344526 [info ] [MainThread]: Finished running 47 view models, 2 hooks in 0 hours 0 minutes and 31.46 seconds (31.46s).
[0m14:46:58.345469 [debug] [MainThread]: Command end result
[0m14:46:58.386043 [info ] [MainThread]: 
[0m14:46:58.386376 [info ] [MainThread]: [31mCompleted with 1 error and 0 warnings:[0m
[0m14:46:58.386584 [info ] [MainThread]: 
[0m14:46:58.386699 [error] [MainThread]: [33mDatabase Error in model cust_adsk_marginvariance_transform (models/transform/cust_adsk_marginvariance_transform.sql)[0m
[0m14:46:58.386796 [error] [MainThread]:   002028 (42601): SQL compilation error:
[0m14:46:58.386887 [error] [MainThread]:   ambiguous column name 'ADSK_MASTERAGREEMENT_PROJECTTYPE'
[0m14:46:58.386969 [error] [MainThread]:   compiled Code at target/run/my_dbt_projects/models/transform/cust_adsk_marginvariance_transform.sql
[0m14:46:58.387085 [info ] [MainThread]: 
[0m14:46:58.387173 [info ] [MainThread]: Done. PASS=46 WARN=0 ERROR=1 SKIP=0 TOTAL=47
[0m14:46:58.387380 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x165d6c0d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x164fdc0d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1656f0490>]}
[0m14:46:58.387503 [debug] [MainThread]: Flushing usage events


============================== 2023-08-21 14:47:14.593413 | 2d3efd37-6e4e-473e-bac6-0e429f78a3d8 ==============================
[0m14:47:14.593413 [info ] [MainThread]: Running with dbt=1.4.5
[0m14:47:14.594928 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/Users/ravinda/Documents/dbt_profiles', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'target': 'stg', 'select': ['tag:engagement_psa'], 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m14:47:14.595105 [debug] [MainThread]: Tracking: tracking
[0m14:47:14.595386 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x130ca4190>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x130ca7e90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111892e50>]}
[0m14:47:14.618055 [debug] [MainThread]: checksum: c2b80867bf9bf682f2b5d695df255c4bdc176693c3732280f57ce650f475585d, vars: {}, profile: None, target: stg, version: 1.4.5
[0m14:47:14.802741 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m14:47:14.802945 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m14:47:14.804861 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 3 unused configuration paths:
- models.my_dbt_projects.s3.ingest.source_tables
- models.my_dbt_projects.private
- models.my_dbt_projects.s3.ingest
[0m14:47:14.810679 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '2d3efd37-6e4e-473e-bac6-0e429f78a3d8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x14014f010>]}
[0m14:47:14.878551 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '2d3efd37-6e4e-473e-bac6-0e429f78a3d8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x130d1fe90>]}
[0m14:47:14.878809 [info ] [MainThread]: Found 77 models, 24 tests, 0 snapshots, 0 analyses, 991 macros, 2 operations, 0 seed files, 155 sources, 0 exposures, 0 metrics
[0m14:47:14.878953 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '2d3efd37-6e4e-473e-bac6-0e429f78a3d8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1406d7fd0>]}
[0m14:47:14.881290 [info ] [MainThread]: 
[0m14:47:14.882202 [debug] [MainThread]: Acquiring new snowflake connection 'master'
[0m14:47:14.882758 [debug] [ThreadPool]: Acquiring new snowflake connection 'list_EIO_INGEST'
[0m14:47:14.889148 [debug] [ThreadPool]: Using snowflake connection "list_EIO_INGEST"
[0m14:47:14.889297 [debug] [ThreadPool]: On list_EIO_INGEST: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "connection_name": "list_EIO_INGEST"} */
show terse schemas in database EIO_INGEST
    limit 10000
[0m14:47:14.889381 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m14:47:15.882703 [debug] [ThreadPool]: SQL status: SUCCESS 100 in 1 seconds
[0m14:47:15.884320 [debug] [ThreadPool]: On list_EIO_INGEST: Close
[0m14:47:16.130201 [debug] [ThreadPool]: Acquiring new snowflake connection 'list_EIO_INGEST_ENGAGEMENT_TRANSFORM'
[0m14:47:16.130640 [debug] [ThreadPool]: Acquiring new snowflake connection 'list_EIO_INGEST_TENROX_TRANSFORM'
[0m14:47:16.134081 [debug] [ThreadPool]: Using snowflake connection "list_EIO_INGEST_ENGAGEMENT_TRANSFORM"
[0m14:47:16.135213 [debug] [ThreadPool]: Using snowflake connection "list_EIO_INGEST_TENROX_TRANSFORM"
[0m14:47:16.135320 [debug] [ThreadPool]: On list_EIO_INGEST_ENGAGEMENT_TRANSFORM: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "connection_name": "list_EIO_INGEST_ENGAGEMENT_TRANSFORM"} */
show terse objects in EIO_INGEST.ENGAGEMENT_TRANSFORM
[0m14:47:16.135404 [debug] [ThreadPool]: On list_EIO_INGEST_TENROX_TRANSFORM: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "connection_name": "list_EIO_INGEST_TENROX_TRANSFORM"} */
show terse objects in EIO_INGEST.TENROX_TRANSFORM
[0m14:47:16.135480 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:47:16.135549 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m14:47:16.863172 [debug] [ThreadPool]: SQL status: SUCCESS 179 in 1 seconds
[0m14:47:16.866664 [debug] [ThreadPool]: On list_EIO_INGEST_TENROX_TRANSFORM: Close
[0m14:47:17.018348 [debug] [ThreadPool]: SQL status: SUCCESS 255 in 1 seconds
[0m14:47:17.021733 [debug] [ThreadPool]: On list_EIO_INGEST_ENGAGEMENT_TRANSFORM: Close
[0m14:47:17.277785 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '2d3efd37-6e4e-473e-bac6-0e429f78a3d8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x140b99050>]}
[0m14:47:17.278072 [info ] [MainThread]: 
[0m14:47:17.278207 [info ] [MainThread]: Running 1 on-run-start hook
[0m14:47:17.289980 [debug] [MainThread]: Writing injected SQL for node "operation.elementary.elementary-on-run-start-0"
[0m14:47:17.292236 [info ] [MainThread]: 1 of 1 START hook: elementary.on-run-start.0 ................................... [RUN]
[0m14:47:17.292455 [info ] [MainThread]: 1 of 1 OK hook: elementary.on-run-start.0 ...................................... [[32mOK[0m in 0.00s]
[0m14:47:17.292575 [info ] [MainThread]: 
[0m14:47:17.292865 [info ] [MainThread]: Concurrency: 3 threads (target='stg')
[0m14:47:17.292970 [info ] [MainThread]: 
[0m14:47:17.296734 [debug] [Thread-1 (]: Began running node model.my_dbt_projects.project_forecast_stacked_transform
[0m14:47:17.296916 [info ] [Thread-1 (]: 1 of 1 START sql view model ENGAGEMENT_TRANSFORM.project_forecast_stacked_transform  [RUN]
[0m14:47:17.297223 [debug] [Thread-1 (]: Acquiring new snowflake connection 'model.my_dbt_projects.project_forecast_stacked_transform'
[0m14:47:17.297317 [debug] [Thread-1 (]: Began compiling node model.my_dbt_projects.project_forecast_stacked_transform
[0m14:47:17.301052 [debug] [Thread-1 (]: Writing injected SQL for node "model.my_dbt_projects.project_forecast_stacked_transform"
[0m14:47:17.302278 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.project_forecast_stacked_transform (compile): 2023-08-21 14:47:17.297378 => 2023-08-21 14:47:17.302241
[0m14:47:17.302402 [debug] [Thread-1 (]: Began executing node model.my_dbt_projects.project_forecast_stacked_transform
[0m14:47:17.311508 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.project_forecast_stacked_transform"
[0m14:47:17.311686 [debug] [Thread-1 (]: On model.my_dbt_projects.project_forecast_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.project_forecast_stacked_transform"} */
USE SECONDARY ROLE ALL
[0m14:47:17.311769 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m14:47:18.147527 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 1 seconds
[0m14:47:18.152714 [debug] [Thread-1 (]: Writing runtime sql for node "model.my_dbt_projects.project_forecast_stacked_transform"
[0m14:47:18.160369 [debug] [Thread-1 (]: Using snowflake connection "model.my_dbt_projects.project_forecast_stacked_transform"
[0m14:47:18.160493 [debug] [Thread-1 (]: On model.my_dbt_projects.project_forecast_stacked_transform: /* {"app": "dbt", "dbt_version": "1.4.5", "profile_name": "default", "target_name": "stg", "node_id": "model.my_dbt_projects.project_forecast_stacked_transform"} */
create or replace   view EIO_INGEST.ENGAGEMENT_TRANSFORM.project_forecast_stacked_transform
  
   as (
    WITH tproject AS (
	SELECT
	*
	FROM
	EIO_PUBLISH.TENROX_PRIVATE.TPROJECT
),

tworkflowmap AS 
(
    SELECT
    *
    FROM
    EIO_PUBLISH.TENROX_PRIVATE.TWORKFLOWMAP

),

adsk_fn_cm_project_details AS 
(
    SELECT
    *
    FROM
    eio_ingest.tenrox_transform.adsk_cm_project_details 
),

tprojectcustfld_view AS
(
    SELECT
    *
    FROM
    eio_ingest.tenrox_transform.tprojectcustfld_view
),

adsk_fn_cm_project_budget AS
(
    SELECT
    *
    FROM
    eio_ingest.tenrox_transform.adsk_cm_project_budget_local_cur
),

quarter_dates AS
(
  WITH date_series AS (
    SELECT
        DATEADD(QUARTER, ROW_NUMBER() OVER (ORDER BY NULL) - 1, '2013-02-01') AS dt
    FROM
        TABLE(GENERATOR(ROWCOUNT => 55))-- Adjust the number of quarters as needed
)

-- Select quarter start dates
SELECT
    CAST(dt AS DATE) AS dt
FROM
    date_series
),


adsk_fn_cm_labor_hrs_v02 AS
(
    SELECT
    *
    FROM
    eio_ingest.tenrox_transform.adsk_cm_labor_hrs_v02_stacked
),

adsk_fn_cm_deffered_rev AS
(
SELECT
 *
 FROM
 eio_ingest.tenrox_transform.adsk_cm_monthly_deferred_local_cur_rev_stacked

),

deffered_rev_max AS

(
 SELECT
 d.*
 FROM
 adsk_fn_cm_deffered_rev d
WHERE
dt = TO_DATE(TO_VARCHAR(CASE WHEN MONTH(CURRENT_DATE()) = 1
                                                  THEN YEAR(DATEADD(year, -1, CURRENT_DATE()))
                                              ELSE YEAR(CURRENT_DATE()) END) || '-'
                                      || CASE WHEN MONTH(CURRENT_DATE()) IN (2, 3, 4) THEN '02-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (5, 6, 7) THEN '05-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (8, 9, 10) THEN '08-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (11, 12, 1) THEN '11-01'
                     ELSE NULL END)
),

adsk_fn_cm_labor_rev_v02 AS
(
  SELECT
 *
 FROM
 eio_ingest.tenrox_transform.adsk_cm_labor_rev_local_cur_v02_stacked
),

adsk_fn_cm_forecast_chrg_rev_v02 AS 
(
 SELECT
  *
 FROM
 eio_ingest.tenrox_transform.adsk_cm_forecast_chrg_rev_local_cur_v02_stacked
),

adsk_fn_cm_rec_chrg_rev_v02 AS 
(
 SELECT
  *
 FROM
 eio_ingest.tenrox_transform.adsk_cm_rec_chrg_rev_local_cur_v02_stacked
              
),

adsk_fn_cm_monthly_chrg_rev AS
(

 SELECT
  *
 FROM
 eio_ingest.tenrox_transform.adsk_cm_monthly_chrg_rev_local_cur_stacked
 
),

adsk_fn_cm_rec_rev_v02 AS 
(
 SELECT
  *
 FROM
 eio_ingest.tenrox_transform.adsk_cm_rec_rev_v02_stacked
),

adsk_fn_month_q_ranges_v02 AS

(
    SELECT
    *
    FROM
    eio_ingest.tenrox_transform.adsk_month_q_ranges_v02
),

fcurrqexchrate AS (
	SELECT
	*
	FROM
	eio_ingest.tenrox_transform.fcurrqexchrate
),
  
parent_child_geo AS
  (   
SELECT 
     project_details.projectid
     ,tprojectcustfld_view.adsk_geo_name
  
    FROM
    adsk_fn_cm_project_details AS project_details 
    INNER JOIN
        tprojectcustfld_view AS tprojectcustfld_view 
        ON tprojectcustfld_view.projectid = project_details.projectid 
                
    LEFT OUTER JOIN
        (
            SELECT
                tproject.uniqueid AS uniqueid
                ,tworkflowmap.name AS workflow 
                ,tproject.parentid as parent_id
            FROM
                tproject AS tproject 
                JOIN
                    tworkflowmap AS tworkflowmap 
                    ON tproject.projectworkflowmapid = tworkflowmap.uniqueid
        ) AS viewprojectlist 
        ON tprojectcustfld_view.projectid = viewprojectlist.uniqueid 
        where tprojectcustfld_view.adsk_geo_name <> ''
        group by
      
            tprojectcustfld_view.adsk_geo_name
            ,project_details.projectid
  ),
  
forecast as (

SELECT
    current_date() as dt
    ,qd.dt as quarter_dt
    ,project_details.projectid AS project_id
    ,viewprojectlist.parent_id as parent_id
    ,p.adsk_geo_name
    --,tprojectcustfld_view.adsk_geo_name AS adsk_geo_name
    ,portfolioname AS portfolio_name
    ,projectcode AS project_code
    ,projectname AS project_name
    ,projectmanagername AS project_manager_name
    ,projectstate AS project_state
    ,project_details.projectenddate 	 AS project_end_date                                        
    ,tprojectcustfld_view.adsk_sap_project_id 	AS     adsk_sap_project_id                                   
    ,clientname AS client_name
    ,tprojectcustfld_view.adsk_masteragreement_projecttype 							  
    ,adsk_revrectreatment AS adsk_revrec_treatment
    ,adsk_accountingcontracttype 	 AS adsk_accounting_contract_type	
    ,clientcurrency AS client_currency
    ,exclient2disp.rate as client_rate
    ,exbase2disp.rate as base_rate
    ,hourly_rate_contractcurrency
    ,hourly_rate_usd
    ,total_planned_rev_usd_adsk
    ,ROUND(currentbillablecharge + currentbillabletime + currentbillablechargeratablebilling) AS bud_revenue

    , hrsact_past_currentqtr + hrsfcst_future AS billable_hours
    , hrs_billable_eac AS hrs_billable_eac
    , CASE 
        WHEN qd.dt = TO_DATE(TO_VARCHAR(CASE WHEN MONTH(CURRENT_DATE()) = 1
                                                  THEN YEAR(DATEADD(year, -1, CURRENT_DATE()))
                                              ELSE YEAR(CURRENT_DATE()) END) || '-'
                                      || CASE WHEN MONTH(CURRENT_DATE()) IN (2, 3, 4) THEN '02-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (5, 6, 7) THEN '05-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (8, 9, 10) THEN '08-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (11, 12, 1) THEN '11-01'
                     ELSE NULL END) 
            THEN revlabor_remaininginqtr + rev_deferred + recrev_completedinqtr
        ELSE revlabor_actual + revlabor_forecast 
        END AS total_revenue
   , CASE 
        WHEN qd.dt = TO_DATE(TO_VARCHAR(CASE WHEN MONTH(CURRENT_DATE()) = 1
                                                  THEN YEAR(DATEADD(year, -1, CURRENT_DATE()))
                                              ELSE YEAR(CURRENT_DATE()) END) || '-'
                                      || CASE WHEN MONTH(CURRENT_DATE()) IN (2, 3, 4) THEN '02-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (5, 6, 7) THEN '05-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (8, 9, 10) THEN '08-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (11, 12, 1) THEN '11-01'
                     ELSE NULL END) 
            THEN revlabor_remaininginqtr_hard + rev_deferred + recrev_completedinqtr
        ELSE revlabor_actual + revlabor_forecast_hard 
        END AS hard_booked_revenue
   ,  total_revenue - hard_booked_revenue AS soft_booked_revenue
   ,  HRS_FCST_BILLABLE - HRS_FCST_BILLABLE_SOFT AS hard_booked_hours
   ,  HRS_FCST_BILLABLE_SOFT AS soft_booked_hours
   ,  CASE WHEN qd.dt < TO_DATE(TO_VARCHAR(CASE WHEN MONTH(CURRENT_DATE()) = 1
                                                  THEN YEAR(DATEADD(year, -1, CURRENT_DATE()))
                                              ELSE YEAR(CURRENT_DATE()) END) || '-'
                                      || CASE WHEN MONTH(CURRENT_DATE()) IN (2, 3, 4) THEN '02-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (5, 6, 7) THEN '05-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (8, 9, 10) THEN '08-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (11, 12, 1) THEN '11-01'
                     ELSE NULL END) THEN COALESCE((recchrgrev_3rdbillableexp_pastqtrs + recchrgrev_internalbillableexp_pastqtrs), 0) 
  
           WHEN qd.dt > TO_DATE(TO_VARCHAR(CASE WHEN MONTH(CURRENT_DATE()) = 1
                                                  THEN YEAR(DATEADD(year, -1, CURRENT_DATE()))
                                              ELSE YEAR(CURRENT_DATE()) END) || '-'
                                      || CASE WHEN MONTH(CURRENT_DATE()) IN (2, 3, 4) THEN '02-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (5, 6, 7) THEN '05-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (8, 9, 10) THEN '08-01'
                                              WHEN MONTH(CURRENT_DATE()) IN (11, 12, 1) THEN '11-01'
                     ELSE NULL END)  THEN fcstchrgrev_nonratablebillable
                                  
           ELSE
                CASE
                    WHEN
                        MONTH(CURRENT_DATE()) IN 
                        (
                            2, 5, 8, 11
                        )
                    THEN
                        COALESCE(fcstchrgrev_nonratablebillable_remaininginqtr, 0) 
                    WHEN
                        MONTH(CURRENT_DATE()) IN 
                        (
                            3, 6, 9, 12
                        )
                    THEN
                        COALESCE(act_charge_rev.actual_charge_rev_month1, 0) + COALESCE(fcstchrgrev_nonratablebillable_remaininginqtr, 0) 
                    ELSE
                        COALESCE(act_charge_rev.actual_charge_rev_month1, 0) + COALESCE(act_charge_rev.actual_charge_rev_month2, 0) + COALESCE(fcstchrgrev_nonratablebillable_remaininginqtr, 0) 
                END
          END AS expenses  
    , def_rev.deferredrevenue  AS deferred_revenue
    , def_rev.totaldeferredrevenue  AS total_deferred_revenue
                                        
    ,CASE
        WHEN lower(tprojectcustfld_view.adsk_masteragreement_projecttype 	) IN ('is parent','as parent','pac parent') THEN cast(project_details.projectid as string)
        WHEN lower(tprojectcustfld_view.adsk_masteragreement_projecttype) like '%child%' THEN CAST(viewprojectlist.parent_id AS STRING)
            ELSE CAST(project_details.projectid AS STRING)
            END                                    AS parent_child_key 
FROM
    adsk_fn_cm_project_details AS project_details 
    LEFT OUTER JOIN quarter_dates qd
    INNER JOIN
        tprojectcustfld_view AS tprojectcustfld_view 
        ON tprojectcustfld_view.projectid = project_details.projectid 
    LEFT OUTER JOIN
        (
            SELECT
                tproject.uniqueid AS uniqueid
                ,tworkflowmap.name AS workflow 
                ,tproject.parentid as parent_id
            FROM
                tproject AS tproject 
                JOIN
                    tworkflowmap AS tworkflowmap 
                    ON tproject.projectworkflowmapid = tworkflowmap.uniqueid
        ) AS viewprojectlist 
        ON tprojectcustfld_view.projectid = viewprojectlist.uniqueid 
    LEFT OUTER JOIN
        adsk_fn_cm_project_budget AS project_budget 
        ON project_budget.projectid = project_details.projectid
    LEFT OUTER JOIN
        adsk_fn_cm_labor_rev_v02 AS labor_rev 
        ON labor_rev.projectid = project_details.projectid and labor_rev.dt = qd.dt
    LEFT OUTER JOIN
        adsk_fn_cm_labor_hrs_v02 AS labor_hrs 
        ON labor_hrs.projectid = project_details.projectid and labor_hrs.dt = qd.dt
    LEFT OUTER JOIN
        adsk_fn_cm_forecast_chrg_rev_v02 AS forecast_chrg_rev 
        ON forecast_chrg_rev.projectid = project_details.projectid and forecast_chrg_rev.dt = qd.dt
    LEFT OUTER JOIN
        adsk_fn_cm_rec_chrg_rev_v02 AS rev_chrg_cost 
        ON rev_chrg_cost.projectid = project_details.projectid  and rev_chrg_cost.dt = qd.dt
	LEFT OUTER JOIN adsk_fn_cm_monthly_chrg_rev act_charge_rev
        ON act_charge_rev.projectid = project_details.projectid 	 and act_charge_rev.dt = qd.dt
   LEFT OUTER JOIN
        adsk_fn_cm_rec_rev_v02 AS rec_rev 
        ON rec_rev.projectid = project_details.projectid 	and rec_rev.dt = qd.dt
   LEFT OUTER JOIN
        adsk_fn_cm_deffered_rev AS def_rev 
        ON def_rev.projectid = project_details.projectid 	and def_rev.dt = qd.dt
    LEFT OUTER JOIN
        fcurrqexchrate AS exclient2disp 
        ON exclient2disp.basecurrencyid = 
        (
            COALESCE(projectcurrencyid, 1)
        )
        AND exclient2disp.quotecurrencyid = 
        (
            COALESCE(NULL, projectcurrencyid, 1)
        )
        AND CURRENT_DATE() BETWEEN exclient2disp.startdate AND exclient2disp.enddate 
    LEFT OUTER JOIN
        fcurrqexchrate AS exbase2disp 
        ON exbase2disp.basecurrencyid = 1 
        AND exbase2disp.quotecurrencyid = 
        (
            COALESCE(NULL, projectcurrencyid, 1)
        )
        AND CURRENT_DATE() BETWEEN exbase2disp.startdate AND exbase2disp.enddate 
    LEFT JOIN parent_child_geo p
        ON CASE
            WHEN lower(tprojectcustfld_view.adsk_masteragreement_projecttype 	) IN ('is parent','as parent','pac parent') THEN cast(project_details.projectid as string)
            WHEN lower(tprojectcustfld_view.adsk_masteragreement_projecttype) like '%child%' THEN CAST(viewprojectlist.parent_id AS STRING)
            ELSE CAST(project_details.projectid AS STRING)
           END = p.projectid

WHERE
    1 = 1 
    AND project_details.projectstate <> 'Discarded' 	
    AND 
    (
        viewprojectlist.workflow NOT IN 
        (
            'V2-Ratable SCO'
            , 'APAC Conversion Setup' 
            , 'Completed Non-Migrated SCOs'
            , 'Conversion Setup'
            , 'Customer Facing' 
            , 'FY14-Booking Credit ONLY' 
            , 'Internal-Non-Utilized' 
            , 'Internal-Utilized' 
            , 'Program Bookings' 
        )
        OR 
        (
            viewprojectlist.workflow = 'V2-Ratable SCO' 
            AND tprojectcustfld_view.adsk_sap_project_id <> '' 
        )
    )
)
  
  
SELECT 
    * 
FROM 
    forecast
  );
[0m14:47:26.774142 [debug] [Thread-1 (]: SQL status: SUCCESS 1 in 9 seconds
[0m14:47:26.781981 [debug] [Thread-1 (]: Timing info for model.my_dbt_projects.project_forecast_stacked_transform (execute): 2023-08-21 14:47:17.302470 => 2023-08-21 14:47:26.781952
[0m14:47:26.782131 [debug] [Thread-1 (]: On model.my_dbt_projects.project_forecast_stacked_transform: Close
[0m14:47:27.040286 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2d3efd37-6e4e-473e-bac6-0e429f78a3d8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x14681b390>]}
[0m14:47:27.040640 [info ] [Thread-1 (]: 1 of 1 OK created sql view model ENGAGEMENT_TRANSFORM.project_forecast_stacked_transform  [[32mSUCCESS 1[0m in 9.74s]
[0m14:47:27.041435 [debug] [Thread-1 (]: Finished running node model.my_dbt_projects.project_forecast_stacked_transform
[0m14:47:27.042442 [debug] [MainThread]: Acquiring new snowflake connection 'master'
[0m14:47:27.042631 [info ] [MainThread]: 
[0m14:47:27.042768 [info ] [MainThread]: Running 1 on-run-end hook
[0m14:47:27.052520 [warn ] [MainThread]: Couldn't find Elementary's models. Please run `dbt run -s elementary`.
[0m14:47:27.060981 [debug] [MainThread]: Elementary: Uploading dbt artifacts.
[0m14:47:27.071667 [debug] [MainThread]: Elementary: Uploaded dbt artifacts.
[0m14:47:27.080360 [debug] [MainThread]: Writing injected SQL for node "operation.elementary.elementary-on-run-end-0"
[0m14:47:27.082003 [info ] [MainThread]: 1 of 1 START hook: elementary.on-run-end.0 ..................................... [RUN]
[0m14:47:27.082207 [info ] [MainThread]: 1 of 1 OK hook: elementary.on-run-end.0 ........................................ [[32mOK[0m in 0.00s]
[0m14:47:27.082313 [info ] [MainThread]: 
[0m14:47:27.082586 [debug] [MainThread]: Connection 'master' was properly closed.
[0m14:47:27.082661 [debug] [MainThread]: Connection 'model.my_dbt_projects.project_forecast_stacked_transform' was properly closed.
[0m14:47:27.082718 [debug] [MainThread]: Connection 'list_EIO_INGEST_TENROX_TRANSFORM' was properly closed.
[0m14:47:27.082805 [info ] [MainThread]: 
[0m14:47:27.082902 [info ] [MainThread]: Finished running 1 view model, 2 hooks in 0 hours 0 minutes and 12.20 seconds (12.20s).
[0m14:47:27.083053 [debug] [MainThread]: Command end result
[0m14:47:27.100795 [info ] [MainThread]: 
[0m14:47:27.101035 [info ] [MainThread]: [32mCompleted successfully[0m
[0m14:47:27.101143 [info ] [MainThread]: 
[0m14:47:27.101235 [info ] [MainThread]: Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m14:47:27.101374 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1401edad0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x14014f550>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1201efb90>]}
[0m14:47:27.101497 [debug] [MainThread]: Flushing usage events


============================== 2023-10-03 16:40:08.535418 | d71d7bff-3368-4dbe-baf6-5ab7918164a1 ==============================
[0m16:40:08.535418 [info ] [MainThread]: Running with dbt=1.4.5
[0m16:40:08.537516 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/Users/ravinda/Documents/dbt_profiles', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'target': 'stg', 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m16:40:08.537690 [debug] [MainThread]: Tracking: tracking
[0m16:40:08.537897 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1458b3650>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x144f0f990>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1458b1990>]}
[0m16:40:08.558730 [debug] [MainThread]: checksum: c2b80867bf9bf682f2b5d695df255c4bdc176693c3732280f57ce650f475585d, vars: {}, profile: None, target: stg, version: 1.4.5
[0m16:40:08.582968 [info ] [MainThread]: Unable to do partial parsing because profile has changed
[0m16:40:08.583201 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'd71d7bff-3368-4dbe-baf6-5ab7918164a1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1461ba7d0>]}
[0m16:40:09.680045 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_as_is_service_purchase_shared.sql
[0m16:40:09.683828 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/demand_sfdc_shared.sql
[0m16:40:09.685077 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_as_is_tenrox_parent_projects_shared.sql
[0m16:40:09.686715 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_consulting_eba_account_shared.sql
[0m16:40:09.688126 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_as_is_service_engagements_shared.sql
[0m16:40:09.689327 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/capacity_demand_parameter_shared.sql
[0m16:40:09.690579 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_as_is_tenrox_child_projects_shared.sql
[0m16:40:09.691968 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/capacity_external_shared.sql
[0m16:40:09.693164 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_as_is_exhibits_shared.sql
[0m16:40:09.694290 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/capacity_external_private.sql
[0m16:40:09.695415 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_as_is_tenrox_child_projects_private.sql
[0m16:40:09.696531 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/employee_details_private.sql
[0m16:40:09.697737 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_utilization_hours_private.sql
[0m16:40:09.699128 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/capacity_demand_parameter_private.sql
[0m16:40:09.700399 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/utilization_geo_targets_private.sql
[0m16:40:09.701512 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_utilization_resources_private.sql
[0m16:40:09.702720 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/fct_project_cost_enriched_private.sql
[0m16:40:09.703821 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/project_forecast_private.sql
[0m16:40:09.704918 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/project_forecast_unpivoted_private.sql
[0m16:40:09.706034 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_pac_forecast_private.sql
[0m16:40:09.707169 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/utilisation_resource_exclusion_dates_private.sql
[0m16:40:09.708345 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_as_is_tenrox_parent_projects_private.sql
[0m16:40:09.709413 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_utilization_hours_forecast_private.sql
[0m16:40:09.710552 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_as_is_service_purchase_private.sql
[0m16:40:09.711652 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/margin_variance_private.sql
[0m16:40:09.712815 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_utilization_resource_hours_private.sql
[0m16:40:09.713875 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_as_is_service_engagements_private.sql
[0m16:40:09.714963 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_as_is_exhibits_private.sql
[0m16:40:09.716043 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_skills_proficiencies_private.sql
[0m16:40:09.717215 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_asis_ma_hours_breakdown_private.sql
[0m16:40:09.718319 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_utilization_forecast_private.sql
[0m16:40:09.719450 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/demand_sfdc_private.sql
[0m16:40:09.720866 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/generic_resources_id_private.sql
[0m16:40:09.722119 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_skills_definition_private.sql
[0m16:40:09.723326 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_consulting_eba_account_private.sql
[0m16:40:09.724448 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/utilization_hours_forecast_targets_private.sql
[0m16:40:09.725570 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_project_details_private.sql
[0m16:40:09.726648 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_cust_user_defined_fields_private.sql
[0m16:40:09.728107 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/fct_project_cost_enriched_transform.sql
[0m16:40:09.729552 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/project_details_enhanced_transform.sql
[0m16:40:09.730922 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_tenrox_parent_projects_transform.sql
[0m16:40:09.732197 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/fct_utilization_merged_measures_enriched_transform.sql
[0m16:40:09.733323 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/capacity_demand_parameter_transform.sql
[0m16:40:09.734744 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/project_details_pac_expiry_forecast_transform.sql
[0m16:40:09.736153 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/fct_project_details_measures_enriched_transform.sql
[0m16:40:09.737315 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/contractual_end_date_transform.sql
[0m16:40:09.738705 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_hours_forecast_targets_transform.sql
[0m16:40:09.740240 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_tenrox_child_projects_transform.sql
[0m16:40:09.741366 [debug] [MainThread]: 1603: static parser failed on psa_transform/gcd_cust_user_defined_fields_transform.sql
[0m16:40:09.743727 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/gcd_cust_user_defined_fields_transform.sql
[0m16:40:09.744815 [debug] [MainThread]: 1603: static parser failed on psa_transform/project_forecast_transform.sql
[0m16:40:09.751107 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/project_forecast_transform.sql
[0m16:40:09.752037 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/resource_allocation_details_transform.sql
[0m16:40:09.753244 [debug] [MainThread]: 1603: static parser failed on psa_transform/transform_demand_sfdc.sql
[0m16:40:09.757679 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/transform_demand_sfdc.sql
[0m16:40:09.758365 [debug] [MainThread]: 1603: static parser failed on psa_transform/gcd_skills_definition_transform.sql
[0m16:40:09.760109 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/gcd_skills_definition_transform.sql
[0m16:40:09.760754 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilisation_resource_exclusion_dates_transform.sql
[0m16:40:09.761898 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_merged_transform.sql
[0m16:40:09.763117 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/consulting_eba_account_masterlist_transform.sql
[0m16:40:09.764376 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/asis_ma_hours_breakdown_transform.sql
[0m16:40:09.765737 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/project_budget_summary_transform.sql
[0m16:40:09.766869 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_resources_enriched_transform.sql
[0m16:40:09.768114 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_service_purchase_transform.sql
[0m16:40:09.769514 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/pac_forecast_transform.sql
[0m16:40:09.770644 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/date_explore.sql
[0m16:40:09.771841 [debug] [MainThread]: 1603: static parser failed on psa_transform/project_forecast_unpivoted_transform.sql
[0m16:40:09.776176 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/project_forecast_unpivoted_transform.sql
[0m16:40:09.776831 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/employee_details_transform.sql
[0m16:40:09.778113 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_forecast_transform.sql
[0m16:40:09.779279 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/capacity_external_transform.sql
[0m16:40:09.780729 [debug] [MainThread]: 1603: static parser failed on psa_transform/gcd_skills_proficiencies_transform.sql
[0m16:40:09.783116 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/gcd_skills_proficiencies_transform.sql
[0m16:40:09.784062 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_service_purchase_enriched_transform.sql
[0m16:40:09.785358 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_merged_enriched_transform.sql
[0m16:40:09.786690 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/user_list_transform.sql
[0m16:40:09.788314 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/project_list_transform.sql
[0m16:40:09.789427 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_geo_targets_transform.sql
[0m16:40:09.790519 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/margin_variance_transform.sql
[0m16:40:09.791972 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/resource_utilization_summary_transform.sql
[0m16:40:09.793150 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/pac_forecast_enhanced_transform.sql
[0m16:40:09.794180 [debug] [MainThread]: 1603: static parser failed on psa_transform/yaml_data.sql
[0m16:40:09.795872 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/yaml_data.sql
[0m16:40:09.796703 [debug] [MainThread]: 1603: static parser failed on psa_transform/project_details_ent_transform.sql
[0m16:40:09.799578 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/project_details_ent_transform.sql
[0m16:40:09.800394 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/service_engagement_details.sql
[0m16:40:09.801516 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_resource_hours_transform.sql
[0m16:40:09.802631 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/generic_resources_id_transform.sql
[0m16:40:09.803803 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_resources_transform.sql
[0m16:40:09.804969 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_exhibits_enriched_transform.sql
[0m16:40:09.806409 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/project_details_enriched_transform.sql
[0m16:40:09.807499 [debug] [MainThread]: 1603: static parser failed on psa_transform/utilization_merged_ent_transform.sql
[0m16:40:09.809371 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/utilization_merged_ent_transform.sql
[0m16:40:09.810074 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_hours_transform.sql
[0m16:40:09.811398 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_tenrox_parent_projects_enriched_transform.sql
[0m16:40:09.813420 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_service_engagements_transform.sql
[0m16:40:09.814555 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/asis_ma_hours_breakdown_enriched_transform.sql
[0m16:40:09.825457 [info ] [MainThread]: macro: source_table_freshness
[0m16:40:09.825604 [info ] [MainThread]: macro: source_table_freshness - Fetching sources
[0m16:40:09.844915 [debug] [MainThread]: 1699: static parser successfully parsed edr/run_results/snapshot_run_results.sql
[0m16:40:09.846303 [debug] [MainThread]: 1603: static parser failed on edr/run_results/job_run_results.sql
[0m16:40:09.855562 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/job_run_results.sql
[0m16:40:09.856312 [debug] [MainThread]: 1603: static parser failed on edr/run_results/model_run_results.sql
[0m16:40:09.860227 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/model_run_results.sql
[0m16:40:09.860932 [debug] [MainThread]: 1603: static parser failed on edr/run_results/test_result_rows.sql
[0m16:40:09.879862 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/test_result_rows.sql
[0m16:40:09.880599 [debug] [MainThread]: 1603: static parser failed on edr/run_results/elementary_test_results.sql
[0m16:40:09.894023 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/elementary_test_results.sql
[0m16:40:09.894702 [debug] [MainThread]: 1603: static parser failed on edr/run_results/dbt_source_freshness_results.sql
[0m16:40:09.902695 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/dbt_source_freshness_results.sql
[0m16:40:09.903385 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_dbt_tests.sql
[0m16:40:09.907325 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_dbt_tests.sql
[0m16:40:09.907996 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_schema_changes.sql
[0m16:40:09.910970 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_schema_changes.sql
[0m16:40:09.911632 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_dbt_source_freshness.sql
[0m16:40:09.914065 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_dbt_source_freshness.sql
[0m16:40:09.914724 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_anomaly_detection.sql
[0m16:40:09.917715 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_anomaly_detection.sql
[0m16:40:09.918408 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_dbt_models.sql
[0m16:40:09.921231 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_dbt_models.sql
[0m16:40:09.921996 [debug] [MainThread]: 1699: static parser successfully parsed edr/system/monitors_runs.sql
[0m16:40:09.923165 [debug] [MainThread]: 1603: static parser failed on edr/system/metadata.sql
[0m16:40:09.926775 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/system/metadata.sql
[0m16:40:09.927459 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_tests.sql
[0m16:40:09.973109 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_tests.sql
[0m16:40:09.973956 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_models.sql
[0m16:40:09.984331 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_models.sql
[0m16:40:09.985077 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_sources.sql
[0m16:40:09.996396 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_sources.sql
[0m16:40:09.997133 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_snapshots.sql
[0m16:40:10.006126 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_snapshots.sql
[0m16:40:10.006821 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_columns.sql
[0m16:40:10.016923 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_columns.sql
[0m16:40:10.017627 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_invocations.sql
[0m16:40:10.033544 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_invocations.sql
[0m16:40:10.034224 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_metrics.sql
[0m16:40:10.045405 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_metrics.sql
[0m16:40:10.046103 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_seeds.sql
[0m16:40:10.055534 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_seeds.sql
[0m16:40:10.056223 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_artifacts_hashes.sql
[0m16:40:10.058743 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_artifacts_hashes.sql
[0m16:40:10.059574 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_run_results.sql
[0m16:40:10.068881 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_run_results.sql
[0m16:40:10.069571 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_exposures.sql
[0m16:40:10.080649 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_exposures.sql
[0m16:40:10.081410 [debug] [MainThread]: 1603: static parser failed on edr/data_monitoring/anomaly_detection/metrics_anomaly_score.sql
[0m16:40:10.092002 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/data_monitoring/anomaly_detection/metrics_anomaly_score.sql
[0m16:40:10.092720 [debug] [MainThread]: 1603: static parser failed on edr/data_monitoring/anomaly_detection/anomaly_threshold_sensitivity.sql
[0m16:40:10.096561 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/data_monitoring/anomaly_detection/anomaly_threshold_sensitivity.sql
[0m16:40:10.097253 [debug] [MainThread]: 1603: static parser failed on edr/data_monitoring/schema_changes/schema_columns_snapshot.sql
[0m16:40:10.102259 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/data_monitoring/schema_changes/schema_columns_snapshot.sql
[0m16:40:10.102936 [debug] [MainThread]: 1603: static parser failed on edr/data_monitoring/data_monitoring/data_monitoring_metrics.sql
[0m16:40:10.110814 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/data_monitoring/data_monitoring/data_monitoring_metrics.sql
[0m16:40:10.111480 [debug] [MainThread]: 1603: static parser failed on edr/metadata_store/filtered_information_schema_columns.sql
[0m16:40:10.114887 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/metadata_store/filtered_information_schema_columns.sql
[0m16:40:10.377747 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x14695ad90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x146995250>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1469a6550>]}
[0m16:40:10.377937 [debug] [MainThread]: Flushing usage events
[0m16:40:10.888338 [error] [MainThread]: Encountered an error:
Compilation Error
  Model 'model.my_dbt_projects.yaml_data' (models/psa_transform/yaml_data.sql) depends on a node named 'psa_schema.yml' which was not found


============================== 2023-10-03 16:40:48.987811 | be7d47c2-54d9-4dac-8a0d-fbd376530208 ==============================
[0m16:40:48.987811 [info ] [MainThread]: Running with dbt=1.4.5
[0m16:40:48.988825 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/Users/ravinda/Documents/dbt_profiles', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'target': 'stg', 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m16:40:48.988956 [debug] [MainThread]: Tracking: tracking
[0m16:40:48.989200 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x16e3bbed0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x16e3ba550>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x16e3bb4d0>]}
[0m16:40:49.010157 [debug] [MainThread]: checksum: c2b80867bf9bf682f2b5d695df255c4bdc176693c3732280f57ce650f475585d, vars: {}, profile: None, target: stg, version: 1.4.5
[0m16:40:49.033896 [info ] [MainThread]: Unable to do partial parsing because profile has changed
[0m16:40:49.034125 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'be7d47c2-54d9-4dac-8a0d-fbd376530208', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x16ecbf110>]}
[0m16:40:50.111938 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_as_is_service_purchase_shared.sql
[0m16:40:50.115837 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/demand_sfdc_shared.sql
[0m16:40:50.117359 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_as_is_tenrox_parent_projects_shared.sql
[0m16:40:50.118806 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_consulting_eba_account_shared.sql
[0m16:40:50.120090 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_as_is_service_engagements_shared.sql
[0m16:40:50.121255 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/capacity_demand_parameter_shared.sql
[0m16:40:50.122417 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_as_is_tenrox_child_projects_shared.sql
[0m16:40:50.123676 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/capacity_external_shared.sql
[0m16:40:50.124942 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_as_is_exhibits_shared.sql
[0m16:40:50.126063 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/capacity_external_private.sql
[0m16:40:50.127190 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_as_is_tenrox_child_projects_private.sql
[0m16:40:50.128580 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/employee_details_private.sql
[0m16:40:50.129909 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_utilization_hours_private.sql
[0m16:40:50.131265 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/capacity_demand_parameter_private.sql
[0m16:40:50.132509 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/utilization_geo_targets_private.sql
[0m16:40:50.133683 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_utilization_resources_private.sql
[0m16:40:50.134871 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/fct_project_cost_enriched_private.sql
[0m16:40:50.135991 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/project_forecast_private.sql
[0m16:40:50.137067 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/project_forecast_unpivoted_private.sql
[0m16:40:50.138177 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_pac_forecast_private.sql
[0m16:40:50.139263 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/utilisation_resource_exclusion_dates_private.sql
[0m16:40:50.140435 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_as_is_tenrox_parent_projects_private.sql
[0m16:40:50.141489 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_utilization_hours_forecast_private.sql
[0m16:40:50.142567 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_as_is_service_purchase_private.sql
[0m16:40:50.143690 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/margin_variance_private.sql
[0m16:40:50.144885 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_utilization_resource_hours_private.sql
[0m16:40:50.146189 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_as_is_service_engagements_private.sql
[0m16:40:50.147422 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_as_is_exhibits_private.sql
[0m16:40:50.148638 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_skills_proficiencies_private.sql
[0m16:40:50.149818 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_asis_ma_hours_breakdown_private.sql
[0m16:40:50.150901 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_utilization_forecast_private.sql
[0m16:40:50.151970 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/demand_sfdc_private.sql
[0m16:40:50.153059 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/generic_resources_id_private.sql
[0m16:40:50.154167 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_skills_definition_private.sql
[0m16:40:50.155548 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_consulting_eba_account_private.sql
[0m16:40:50.156751 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/utilization_hours_forecast_targets_private.sql
[0m16:40:50.157832 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_project_details_private.sql
[0m16:40:50.158892 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_cust_user_defined_fields_private.sql
[0m16:40:50.160372 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/fct_project_cost_enriched_transform.sql
[0m16:40:50.161813 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/project_details_enhanced_transform.sql
[0m16:40:50.163028 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_tenrox_parent_projects_transform.sql
[0m16:40:50.164160 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/fct_utilization_merged_measures_enriched_transform.sql
[0m16:40:50.165479 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/capacity_demand_parameter_transform.sql
[0m16:40:50.166841 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/project_details_pac_expiry_forecast_transform.sql
[0m16:40:50.168038 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/fct_project_details_measures_enriched_transform.sql
[0m16:40:50.169238 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/contractual_end_date_transform.sql
[0m16:40:50.170590 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_hours_forecast_targets_transform.sql
[0m16:40:50.172134 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_tenrox_child_projects_transform.sql
[0m16:40:50.173259 [debug] [MainThread]: 1603: static parser failed on psa_transform/gcd_cust_user_defined_fields_transform.sql
[0m16:40:50.175650 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/gcd_cust_user_defined_fields_transform.sql
[0m16:40:50.176705 [debug] [MainThread]: 1603: static parser failed on psa_transform/project_forecast_transform.sql
[0m16:40:50.182955 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/project_forecast_transform.sql
[0m16:40:50.183784 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/resource_allocation_details_transform.sql
[0m16:40:50.184994 [debug] [MainThread]: 1603: static parser failed on psa_transform/transform_demand_sfdc.sql
[0m16:40:50.189487 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/transform_demand_sfdc.sql
[0m16:40:50.190177 [debug] [MainThread]: 1603: static parser failed on psa_transform/gcd_skills_definition_transform.sql
[0m16:40:50.191935 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/gcd_skills_definition_transform.sql
[0m16:40:50.192578 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilisation_resource_exclusion_dates_transform.sql
[0m16:40:50.193875 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_merged_transform.sql
[0m16:40:50.195103 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/consulting_eba_account_masterlist_transform.sql
[0m16:40:50.196355 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/asis_ma_hours_breakdown_transform.sql
[0m16:40:50.197737 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/project_budget_summary_transform.sql
[0m16:40:50.199043 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_resources_enriched_transform.sql
[0m16:40:50.200443 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_service_purchase_transform.sql
[0m16:40:50.201820 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/pac_forecast_transform.sql
[0m16:40:50.203022 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/date_explore.sql
[0m16:40:50.204272 [debug] [MainThread]: 1603: static parser failed on psa_transform/project_forecast_unpivoted_transform.sql
[0m16:40:50.208726 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/project_forecast_unpivoted_transform.sql
[0m16:40:50.209402 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/employee_details_transform.sql
[0m16:40:50.210715 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_forecast_transform.sql
[0m16:40:50.211838 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/capacity_external_transform.sql
[0m16:40:50.212975 [debug] [MainThread]: 1603: static parser failed on psa_transform/gcd_skills_proficiencies_transform.sql
[0m16:40:50.215592 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/gcd_skills_proficiencies_transform.sql
[0m16:40:50.216481 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_service_purchase_enriched_transform.sql
[0m16:40:50.217879 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_merged_enriched_transform.sql
[0m16:40:50.219286 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/user_list_transform.sql
[0m16:40:50.220848 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/project_list_transform.sql
[0m16:40:50.221964 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_geo_targets_transform.sql
[0m16:40:50.223076 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/margin_variance_transform.sql
[0m16:40:50.224570 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/resource_utilization_summary_transform.sql
[0m16:40:50.225704 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/pac_forecast_enhanced_transform.sql
[0m16:40:50.226723 [debug] [MainThread]: 1603: static parser failed on psa_transform/yaml_data.sql
[0m16:40:50.228530 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/yaml_data.sql
[0m16:40:50.229412 [debug] [MainThread]: 1603: static parser failed on psa_transform/project_details_ent_transform.sql
[0m16:40:50.232319 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/project_details_ent_transform.sql
[0m16:40:50.233072 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/service_engagement_details.sql
[0m16:40:50.234175 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_resource_hours_transform.sql
[0m16:40:50.235280 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/generic_resources_id_transform.sql
[0m16:40:50.236418 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_resources_transform.sql
[0m16:40:50.237697 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_exhibits_enriched_transform.sql
[0m16:40:50.239076 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/project_details_enriched_transform.sql
[0m16:40:50.240170 [debug] [MainThread]: 1603: static parser failed on psa_transform/utilization_merged_ent_transform.sql
[0m16:40:50.242037 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/utilization_merged_ent_transform.sql
[0m16:40:50.242732 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_hours_transform.sql
[0m16:40:50.243869 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_tenrox_parent_projects_enriched_transform.sql
[0m16:40:50.246232 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_service_engagements_transform.sql
[0m16:40:50.247491 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/asis_ma_hours_breakdown_enriched_transform.sql
[0m16:40:50.258541 [info ] [MainThread]: macro: source_table_freshness
[0m16:40:50.258682 [info ] [MainThread]: macro: source_table_freshness - Fetching sources
[0m16:40:50.277908 [debug] [MainThread]: 1699: static parser successfully parsed edr/run_results/snapshot_run_results.sql
[0m16:40:50.279389 [debug] [MainThread]: 1603: static parser failed on edr/run_results/job_run_results.sql
[0m16:40:50.288237 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/job_run_results.sql
[0m16:40:50.288985 [debug] [MainThread]: 1603: static parser failed on edr/run_results/model_run_results.sql
[0m16:40:50.292837 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/model_run_results.sql
[0m16:40:50.293614 [debug] [MainThread]: 1603: static parser failed on edr/run_results/test_result_rows.sql
[0m16:40:50.312720 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/test_result_rows.sql
[0m16:40:50.313481 [debug] [MainThread]: 1603: static parser failed on edr/run_results/elementary_test_results.sql
[0m16:40:50.326725 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/elementary_test_results.sql
[0m16:40:50.327413 [debug] [MainThread]: 1603: static parser failed on edr/run_results/dbt_source_freshness_results.sql
[0m16:40:50.335594 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/dbt_source_freshness_results.sql
[0m16:40:50.336286 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_dbt_tests.sql
[0m16:40:50.340258 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_dbt_tests.sql
[0m16:40:50.340961 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_schema_changes.sql
[0m16:40:50.344540 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_schema_changes.sql
[0m16:40:50.345341 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_dbt_source_freshness.sql
[0m16:40:50.348200 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_dbt_source_freshness.sql
[0m16:40:50.348944 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_anomaly_detection.sql
[0m16:40:50.352345 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_anomaly_detection.sql
[0m16:40:50.353097 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_dbt_models.sql
[0m16:40:50.356511 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_dbt_models.sql
[0m16:40:50.357526 [debug] [MainThread]: 1699: static parser successfully parsed edr/system/monitors_runs.sql
[0m16:40:50.358816 [debug] [MainThread]: 1603: static parser failed on edr/system/metadata.sql
[0m16:40:50.362741 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/system/metadata.sql
[0m16:40:50.363480 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_tests.sql
[0m16:40:50.410777 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_tests.sql
[0m16:40:50.411642 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_models.sql
[0m16:40:50.421735 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_models.sql
[0m16:40:50.422445 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_sources.sql
[0m16:40:50.433703 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_sources.sql
[0m16:40:50.434411 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_snapshots.sql
[0m16:40:50.443463 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_snapshots.sql
[0m16:40:50.444173 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_columns.sql
[0m16:40:50.454270 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_columns.sql
[0m16:40:50.454958 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_invocations.sql
[0m16:40:50.470779 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_invocations.sql
[0m16:40:50.471458 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_metrics.sql
[0m16:40:50.482911 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_metrics.sql
[0m16:40:50.483628 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_seeds.sql
[0m16:40:50.493240 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_seeds.sql
[0m16:40:50.493933 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_artifacts_hashes.sql
[0m16:40:50.496317 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_artifacts_hashes.sql
[0m16:40:50.497104 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_run_results.sql
[0m16:40:50.506190 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_run_results.sql
[0m16:40:50.506855 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_exposures.sql
[0m16:40:50.517777 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_exposures.sql
[0m16:40:50.518541 [debug] [MainThread]: 1603: static parser failed on edr/data_monitoring/anomaly_detection/metrics_anomaly_score.sql
[0m16:40:50.529090 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/data_monitoring/anomaly_detection/metrics_anomaly_score.sql
[0m16:40:50.529808 [debug] [MainThread]: 1603: static parser failed on edr/data_monitoring/anomaly_detection/anomaly_threshold_sensitivity.sql
[0m16:40:50.533641 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/data_monitoring/anomaly_detection/anomaly_threshold_sensitivity.sql
[0m16:40:50.534313 [debug] [MainThread]: 1603: static parser failed on edr/data_monitoring/schema_changes/schema_columns_snapshot.sql
[0m16:40:50.539293 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/data_monitoring/schema_changes/schema_columns_snapshot.sql
[0m16:40:50.539969 [debug] [MainThread]: 1603: static parser failed on edr/data_monitoring/data_monitoring/data_monitoring_metrics.sql
[0m16:40:50.547938 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/data_monitoring/data_monitoring/data_monitoring_metrics.sql
[0m16:40:50.548595 [debug] [MainThread]: 1603: static parser failed on edr/metadata_store/filtered_information_schema_columns.sql
[0m16:40:50.551969 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/metadata_store/filtered_information_schema_columns.sql
[0m16:40:50.815338 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x280eda890>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x280edafd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x280f1a010>]}
[0m16:40:50.815523 [debug] [MainThread]: Flushing usage events
[0m16:40:51.267324 [error] [MainThread]: Encountered an error:
Compilation Error
  Model 'model.my_dbt_projects.yaml_data' (models/psa_transform/yaml_data.sql) depends on a node named '/Users/ravinda/Documents/my_dbt_projects/models/psa_schema.yml' which was not found


============================== 2023-10-03 16:41:47.844964 | f8efa565-d90d-47f6-8514-5bd714d437bd ==============================
[0m16:41:47.844964 [info ] [MainThread]: Running with dbt=1.4.5
[0m16:41:47.845903 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/Users/ravinda/Documents/dbt_profiles', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'target': 'stg', 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m16:41:47.846022 [debug] [MainThread]: Tracking: tracking
[0m16:41:47.846245 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x16a4a4710>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x16a4a6fd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x16a4a4fd0>]}
[0m16:41:47.865654 [debug] [MainThread]: checksum: c2b80867bf9bf682f2b5d695df255c4bdc176693c3732280f57ce650f475585d, vars: {}, profile: None, target: stg, version: 1.4.5
[0m16:41:47.888818 [info ] [MainThread]: Unable to do partial parsing because profile has changed
[0m16:41:47.889083 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'f8efa565-d90d-47f6-8514-5bd714d437bd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x16b2668d0>]}
[0m16:41:48.958801 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_as_is_service_purchase_shared.sql
[0m16:41:48.962761 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/demand_sfdc_shared.sql
[0m16:41:48.964330 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_as_is_tenrox_parent_projects_shared.sql
[0m16:41:48.965949 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_consulting_eba_account_shared.sql
[0m16:41:48.967171 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_as_is_service_engagements_shared.sql
[0m16:41:48.968475 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/capacity_demand_parameter_shared.sql
[0m16:41:48.969688 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_as_is_tenrox_child_projects_shared.sql
[0m16:41:48.971031 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/capacity_external_shared.sql
[0m16:41:48.972204 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/shared/gcd_as_is_exhibits_shared.sql
[0m16:41:48.973377 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/capacity_external_private.sql
[0m16:41:48.974495 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_as_is_tenrox_child_projects_private.sql
[0m16:41:48.975607 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/employee_details_private.sql
[0m16:41:48.976825 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_utilization_hours_private.sql
[0m16:41:48.977984 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/capacity_demand_parameter_private.sql
[0m16:41:48.979243 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/utilization_geo_targets_private.sql
[0m16:41:48.980477 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_utilization_resources_private.sql
[0m16:41:48.981769 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/fct_project_cost_enriched_private.sql
[0m16:41:48.982991 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/project_forecast_private.sql
[0m16:41:48.984165 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/project_forecast_unpivoted_private.sql
[0m16:41:48.985258 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_pac_forecast_private.sql
[0m16:41:48.986417 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/utilisation_resource_exclusion_dates_private.sql
[0m16:41:48.987599 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_as_is_tenrox_parent_projects_private.sql
[0m16:41:48.988751 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_utilization_hours_forecast_private.sql
[0m16:41:48.989858 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_as_is_service_purchase_private.sql
[0m16:41:48.990960 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/margin_variance_private.sql
[0m16:41:48.992140 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_utilization_resource_hours_private.sql
[0m16:41:48.993232 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_as_is_service_engagements_private.sql
[0m16:41:48.994347 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_as_is_exhibits_private.sql
[0m16:41:48.995736 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_skills_proficiencies_private.sql
[0m16:41:48.997047 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_asis_ma_hours_breakdown_private.sql
[0m16:41:48.998129 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_utilization_forecast_private.sql
[0m16:41:48.999225 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/demand_sfdc_private.sql
[0m16:41:49.000356 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/generic_resources_id_private.sql
[0m16:41:49.001472 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_skills_definition_private.sql
[0m16:41:49.002686 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_consulting_eba_account_private.sql
[0m16:41:49.004118 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/utilization_hours_forecast_targets_private.sql
[0m16:41:49.005403 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_project_details_private.sql
[0m16:41:49.006513 [debug] [MainThread]: 1699: static parser successfully parsed psa_publish/private/gcd_cust_user_defined_fields_private.sql
[0m16:41:49.008123 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/fct_project_cost_enriched_transform.sql
[0m16:41:49.009741 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/project_details_enhanced_transform.sql
[0m16:41:49.010994 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_tenrox_parent_projects_transform.sql
[0m16:41:49.012146 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/fct_utilization_merged_measures_enriched_transform.sql
[0m16:41:49.013490 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/capacity_demand_parameter_transform.sql
[0m16:41:49.014884 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/project_details_pac_expiry_forecast_transform.sql
[0m16:41:49.016120 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/fct_project_details_measures_enriched_transform.sql
[0m16:41:49.017300 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/contractual_end_date_transform.sql
[0m16:41:49.018680 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_hours_forecast_targets_transform.sql
[0m16:41:49.020261 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_tenrox_child_projects_transform.sql
[0m16:41:49.021417 [debug] [MainThread]: 1603: static parser failed on psa_transform/gcd_cust_user_defined_fields_transform.sql
[0m16:41:49.023905 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/gcd_cust_user_defined_fields_transform.sql
[0m16:41:49.025025 [debug] [MainThread]: 1603: static parser failed on psa_transform/project_forecast_transform.sql
[0m16:41:49.031365 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/project_forecast_transform.sql
[0m16:41:49.032303 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/resource_allocation_details_transform.sql
[0m16:41:49.033524 [debug] [MainThread]: 1603: static parser failed on psa_transform/transform_demand_sfdc.sql
[0m16:41:49.038032 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/transform_demand_sfdc.sql
[0m16:41:49.038731 [debug] [MainThread]: 1603: static parser failed on psa_transform/gcd_skills_definition_transform.sql
[0m16:41:49.040541 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/gcd_skills_definition_transform.sql
[0m16:41:49.041184 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilisation_resource_exclusion_dates_transform.sql
[0m16:41:49.042387 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_merged_transform.sql
[0m16:41:49.043672 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/consulting_eba_account_masterlist_transform.sql
[0m16:41:49.045008 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/asis_ma_hours_breakdown_transform.sql
[0m16:41:49.046376 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/project_budget_summary_transform.sql
[0m16:41:49.047553 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_resources_enriched_transform.sql
[0m16:41:49.048862 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_service_purchase_transform.sql
[0m16:41:49.050193 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/pac_forecast_transform.sql
[0m16:41:49.051387 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/date_explore.sql
[0m16:41:49.052626 [debug] [MainThread]: 1603: static parser failed on psa_transform/project_forecast_unpivoted_transform.sql
[0m16:41:49.057104 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/project_forecast_unpivoted_transform.sql
[0m16:41:49.057846 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/employee_details_transform.sql
[0m16:41:49.059175 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_forecast_transform.sql
[0m16:41:49.060361 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/capacity_external_transform.sql
[0m16:41:49.061544 [debug] [MainThread]: 1603: static parser failed on psa_transform/gcd_skills_proficiencies_transform.sql
[0m16:41:49.063810 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/gcd_skills_proficiencies_transform.sql
[0m16:41:49.064691 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_service_purchase_enriched_transform.sql
[0m16:41:49.065989 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_merged_enriched_transform.sql
[0m16:41:49.067355 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/user_list_transform.sql
[0m16:41:49.068920 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/project_list_transform.sql
[0m16:41:49.070079 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_geo_targets_transform.sql
[0m16:41:49.071223 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/margin_variance_transform.sql
[0m16:41:49.072852 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/resource_utilization_summary_transform.sql
[0m16:41:49.074069 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/pac_forecast_enhanced_transform.sql
[0m16:41:49.075116 [debug] [MainThread]: 1603: static parser failed on psa_transform/yaml_data.sql
[0m16:41:49.076704 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/yaml_data.sql
[0m16:41:49.077604 [debug] [MainThread]: 1603: static parser failed on psa_transform/project_details_ent_transform.sql
[0m16:41:49.080965 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/project_details_ent_transform.sql
[0m16:41:49.081778 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/service_engagement_details.sql
[0m16:41:49.083084 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_resource_hours_transform.sql
[0m16:41:49.084230 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/generic_resources_id_transform.sql
[0m16:41:49.085618 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_resources_transform.sql
[0m16:41:49.087006 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_exhibits_enriched_transform.sql
[0m16:41:49.088425 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/project_details_enriched_transform.sql
[0m16:41:49.089548 [debug] [MainThread]: 1603: static parser failed on psa_transform/utilization_merged_ent_transform.sql
[0m16:41:49.091591 [debug] [MainThread]: 1602: parser fallback to jinja rendering on psa_transform/utilization_merged_ent_transform.sql
[0m16:41:49.092309 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/utilization_hours_transform.sql
[0m16:41:49.093436 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_tenrox_parent_projects_enriched_transform.sql
[0m16:41:49.095395 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/as_is_service_engagements_transform.sql
[0m16:41:49.096572 [debug] [MainThread]: 1699: static parser successfully parsed psa_transform/asis_ma_hours_breakdown_enriched_transform.sql
[0m16:41:49.107585 [info ] [MainThread]: macro: source_table_freshness
[0m16:41:49.107729 [info ] [MainThread]: macro: source_table_freshness - Fetching sources
[0m16:41:49.126547 [debug] [MainThread]: 1699: static parser successfully parsed edr/run_results/snapshot_run_results.sql
[0m16:41:49.128012 [debug] [MainThread]: 1603: static parser failed on edr/run_results/job_run_results.sql
[0m16:41:49.136933 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/job_run_results.sql
[0m16:41:49.137692 [debug] [MainThread]: 1603: static parser failed on edr/run_results/model_run_results.sql
[0m16:41:49.141517 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/model_run_results.sql
[0m16:41:49.142238 [debug] [MainThread]: 1603: static parser failed on edr/run_results/test_result_rows.sql
[0m16:41:49.160796 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/test_result_rows.sql
[0m16:41:49.161531 [debug] [MainThread]: 1603: static parser failed on edr/run_results/elementary_test_results.sql
[0m16:41:49.174776 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/elementary_test_results.sql
[0m16:41:49.175479 [debug] [MainThread]: 1603: static parser failed on edr/run_results/dbt_source_freshness_results.sql
[0m16:41:49.183508 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/run_results/dbt_source_freshness_results.sql
[0m16:41:49.184200 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_dbt_tests.sql
[0m16:41:49.188104 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_dbt_tests.sql
[0m16:41:49.188834 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_schema_changes.sql
[0m16:41:49.191861 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_schema_changes.sql
[0m16:41:49.192537 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_dbt_source_freshness.sql
[0m16:41:49.194951 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_dbt_source_freshness.sql
[0m16:41:49.195625 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_anomaly_detection.sql
[0m16:41:49.198586 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_anomaly_detection.sql
[0m16:41:49.199254 [debug] [MainThread]: 1603: static parser failed on edr/alerts/alerts_dbt_models.sql
[0m16:41:49.202010 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/alerts/alerts_dbt_models.sql
[0m16:41:49.202768 [debug] [MainThread]: 1699: static parser successfully parsed edr/system/monitors_runs.sql
[0m16:41:49.203936 [debug] [MainThread]: 1603: static parser failed on edr/system/metadata.sql
[0m16:41:49.207559 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/system/metadata.sql
[0m16:41:49.208251 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_tests.sql
[0m16:41:49.252816 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_tests.sql
[0m16:41:49.253654 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_models.sql
[0m16:41:49.263730 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_models.sql
[0m16:41:49.264463 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_sources.sql
[0m16:41:49.275616 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_sources.sql
[0m16:41:49.276316 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_snapshots.sql
[0m16:41:49.285194 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_snapshots.sql
[0m16:41:49.285908 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_columns.sql
[0m16:41:49.295961 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_columns.sql
[0m16:41:49.296652 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_invocations.sql
[0m16:41:49.312349 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_invocations.sql
[0m16:41:49.313042 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_metrics.sql
[0m16:41:49.324193 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_metrics.sql
[0m16:41:49.324889 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_seeds.sql
[0m16:41:49.334330 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_seeds.sql
[0m16:41:49.335013 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_artifacts_hashes.sql
[0m16:41:49.337383 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_artifacts_hashes.sql
[0m16:41:49.338131 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_run_results.sql
[0m16:41:49.347091 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_run_results.sql
[0m16:41:49.347766 [debug] [MainThread]: 1603: static parser failed on edr/dbt_artifacts/dbt_exposures.sql
[0m16:41:49.358652 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/dbt_artifacts/dbt_exposures.sql
[0m16:41:49.359431 [debug] [MainThread]: 1603: static parser failed on edr/data_monitoring/anomaly_detection/metrics_anomaly_score.sql
[0m16:41:49.369880 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/data_monitoring/anomaly_detection/metrics_anomaly_score.sql
[0m16:41:49.370600 [debug] [MainThread]: 1603: static parser failed on edr/data_monitoring/anomaly_detection/anomaly_threshold_sensitivity.sql
[0m16:41:49.374424 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/data_monitoring/anomaly_detection/anomaly_threshold_sensitivity.sql
[0m16:41:49.375091 [debug] [MainThread]: 1603: static parser failed on edr/data_monitoring/schema_changes/schema_columns_snapshot.sql
[0m16:41:49.380005 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/data_monitoring/schema_changes/schema_columns_snapshot.sql
[0m16:41:49.380684 [debug] [MainThread]: 1603: static parser failed on edr/data_monitoring/data_monitoring/data_monitoring_metrics.sql
[0m16:41:49.388511 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/data_monitoring/data_monitoring/data_monitoring_metrics.sql
[0m16:41:49.389170 [debug] [MainThread]: 1603: static parser failed on edr/metadata_store/filtered_information_schema_columns.sql
[0m16:41:49.392545 [debug] [MainThread]: 1602: parser fallback to jinja rendering on edr/metadata_store/filtered_information_schema_columns.sql
[0m16:41:49.683496 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x16b26c950>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x16b26c890>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x16b26d750>]}
[0m16:41:49.683669 [debug] [MainThread]: Flushing usage events
[0m16:41:50.165880 [error] [MainThread]: Encountered an error:
Compilation Error
  dbt found two resources with the database representation "EIO_INGEST.engagement_transform.gcd_as_is_tenrox_child_projects".
  dbt cannot create two resources with identical database representations. To fix this,
  change the configuration of one of these resources:
  - model.my_dbt_projects.gcd_as_is_tenrox_child_projects_shared (models/psa_publish/shared/gcd_as_is_tenrox_child_projects_shared.sql)
  - model.my_dbt_projects.gcd_as_is_tenrox_child_projects_private (models/psa_publish/private/gcd_as_is_tenrox_child_projects_private.sql)


============================== 2023-10-03 16:57:26.519263 | 33bcf60e-32b8-4b1b-81bd-186efbd8fe1e ==============================
[0m16:57:26.519263 [info ] [MainThread]: Running with dbt=1.4.5
[0m16:57:26.520485 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/Users/ravinda/Documents/dbt_profiles', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'target': 'stg', 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m16:57:26.520640 [debug] [MainThread]: Tracking: tracking
[0m16:57:26.520851 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1224c0ed0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1224c1450>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1224ff0d0>]}
[0m16:57:26.542027 [debug] [MainThread]: checksum: c2b80867bf9bf682f2b5d695df255c4bdc176693c3732280f57ce650f475585d, vars: {}, profile: None, target: stg, version: 1.4.5
[0m16:57:26.727430 [debug] [MainThread]: Partial parsing enabled: 9 files deleted, 0 files added, 0 files changed.
[0m16:57:26.727915 [debug] [MainThread]: Partial parsing: deleted file: my_dbt_projects://models/psa_publish/shared/gcd_consulting_eba_account_shared.sql
[0m16:57:26.728030 [debug] [MainThread]: Partial parsing: deleted file: my_dbt_projects://models/psa_publish/shared/gcd_as_is_service_engagements_shared.sql
[0m16:57:26.728111 [debug] [MainThread]: Partial parsing: deleted file: my_dbt_projects://models/psa_publish/shared/gcd_as_is_tenrox_child_projects_shared.sql
[0m16:57:26.728177 [debug] [MainThread]: Partial parsing: deleted file: my_dbt_projects://models/psa_publish/shared/gcd_as_is_service_purchase_shared.sql
[0m16:57:26.728229 [debug] [MainThread]: Partial parsing: deleted file: my_dbt_projects://models/psa_publish/shared/capacity_demand_parameter_shared.sql
[0m16:57:26.728285 [debug] [MainThread]: Partial parsing: deleted file: my_dbt_projects://models/psa_publish/shared/gcd_as_is_exhibits_shared.sql
[0m16:57:26.728341 [debug] [MainThread]: Partial parsing: deleted file: my_dbt_projects://models/psa_publish/shared/gcd_as_is_tenrox_parent_projects_shared.sql
[0m16:57:26.728393 [debug] [MainThread]: Partial parsing: deleted file: my_dbt_projects://models/psa_publish/shared/demand_sfdc_shared.sql
[0m16:57:26.728447 [debug] [MainThread]: Partial parsing: deleted file: my_dbt_projects://models/psa_publish/shared/capacity_external_shared.sql
[0m16:57:26.738899 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'gcd_as_is_service_engagements_shared' in the 'models' section of file 'models/psa_schema.yml'
[0m16:57:26.747891 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'gcd_as_is_tenrox_child_projects_shared' in the 'models' section of file 'models/psa_schema.yml'
[0m16:57:26.752654 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'gcd_as_is_service_purchase_shared' in the 'models' section of file 'models/psa_schema.yml'
[0m16:57:26.754871 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'gcd_as_is_exhibits_shared' in the 'models' section of file 'models/psa_schema.yml'
[0m16:57:26.764264 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'gcd_as_is_tenrox_parent_projects_shared' in the 'models' section of file 'models/psa_schema.yml'
[0m16:57:26.808708 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x123cd7990>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x123cd7d10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x123cd7b50>]}
[0m16:57:26.808912 [debug] [MainThread]: Flushing usage events
[0m16:57:27.312863 [error] [MainThread]: Encountered an error:
Compilation Error
  dbt found two resources with the database representation "EIO_INGEST.engagement_transform.gcd_cust_user_defined_fields".
  dbt cannot create two resources with identical database representations. To fix this,
  change the configuration of one of these resources:
  - model.my_dbt_projects.gcd_cust_user_defined_fields_private (models/psa_publish/private/gcd_cust_user_defined_fields_private.sql)
  - model.my_dbt_projects.gcd_cust_user_defined_fields_transform (models/psa_transform/gcd_cust_user_defined_fields_transform.sql)
